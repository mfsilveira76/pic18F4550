

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Sep 21 02:03:19 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73  0000                     
    74                           ; Version 2.20
    75                           ; Generated 12/02/2020 GMT
    76                           ; 
    77                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4550 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     
   109                           	psect	idataBANK0
   110  004B59                     __pidataBANK0:
   111                           	callstack 0
   112                           
   113                           ;initializer for testarDisplay1@F3511
   114  004B59  00                 	db	0
   115  004B5A  04                 	db	4
   116  004B5B  08                 	db	8
   117  004B5C  10                 	db	16
   118  004B5D  20                 	db	32
   119                           
   120                           	psect	idataBANK1
   121  004C7E                     __pidataBANK1:
   122                           	callstack 0
   123                           
   124                           ;initializer for miniMidi@F3559
   125  004C7E  32                 	db	50
   126  004C7F  0A                 	db	10
   127  004C80  32                 	db	50
   128  004C81  0A                 	db	10
   129  004C82  32                 	db	50
   130  004C83  0A                 	db	10
   131  004C84  32                 	db	50
   132  004C85  05                 	db	5
   133  004C86  19                 	db	25
   134  004C87  05                 	db	5
   135  004C88  32                 	db	50
   136  004C89  05                 	db	5
   137  004C8A  32                 	db	50
   138  004C8B  05                 	db	5
   139  004C8C  19                 	db	25
   140  004C8D  05                 	db	5
   141  004C8E  32                 	db	50
   142  004C8F  32                 	db	50
   143  004C90  32                 	db	50
   144  004C91  0A                 	db	10
   145  004C92  32                 	db	50
   146  004C93  0A                 	db	10
   147  004C94  32                 	db	50
   148  004C95  0A                 	db	10
   149  004C96  32                 	db	50
   150  004C97  05                 	db	5
   151  004C98  19                 	db	25
   152  004C99  05                 	db	5
   153  004C9A  32                 	db	50
   154  004C9B  05                 	db	5
   155  004C9C  32                 	db	50
   156  004C9D  05                 	db	5
   157  004C9E  19                 	db	25
   158  004C9F  05                 	db	5
   159  004CA0  32                 	db	50
   160  004CA1  32                 	db	50
   161  004CA2  64                 	db	100
   162  004CA3  05                 	db	5
   163  004CA4  19                 	db	25
   164  004CA5  05                 	db	5
   165  004CA6  19                 	db	25
   166  004CA7  0A                 	db	10
   167  004CA8  64                 	db	100
   168  004CA9  05                 	db	5
   169  004CAA  32                 	db	50
   170  004CAB  05                 	db	5
   171  004CAC  19                 	db	25
   172  004CAD  02                 	db	2
   173  004CAE  0A                 	db	10
   174  004CAF  02                 	db	2
   175  004CB0  0A                 	db	10
   176  004CB1  02                 	db	2
   177  004CB2  64                 	db	100
   178  004CB3  FA                 	db	250
   179                           
   180                           	psect	idataBANK2
   181  00584D                     __pidataBANK2:
   182                           	callstack 0
   183                           
   184                           ;initializer for showSobre@F3576
   185  00584D  49                 	db	73
   186  00584E  48                 	db	72
   187  00584F  4D                 	db	77
   188  005850  20                 	db	32
   189  005851  56                 	db	86
   190  005852  65                 	db	101
   191  005853  72                 	db	114
   192  005854  73                 	db	115
   193  005855  61                 	db	97
   194  005856  6F                 	db	111
   195  005857  20                 	db	32
   196  005858  31                 	db	49
   197  005859  2E                 	db	46
   198  00585A  30                 	db	48
   199  00585B  30                 	db	48
   200  00585C  20                 	db	32
   201  00585D  00                 	db	0
   202  00585E  2A                 	db	42
   203  00585F  20                 	db	32
   204  005860  30                 	db	48
   205  005861  35                 	db	53
   206  005862  2F                 	db	47
   207  005863  30                 	db	48
   208  005864  37                 	db	55
   209  005865  2F                 	db	47
   210  005866  32                 	db	50
   211  005867  30                 	db	48
   212  005868  32                 	db	50
   213  005869  31                 	db	49
   214  00586A  20                 	db	32
   215  00586B  2A                 	db	42
   216  00586C  20                 	db	32
   217  00586D  20                 	db	32
   218  00586E  00                 	db	0
   219  00586F  44                 	db	68
   220  005870  65                 	db	101
   221  005871  73                 	db	115
   222  005872  65                 	db	101
   223  005873  6E                 	db	110
   224  005874  76                 	db	118
   225  005875  6F                 	db	111
   226  005876  6C                 	db	108
   227  005877  76                 	db	118
   228  005878  65                 	db	101
   229  005879  64                 	db	100
   230  00587A  6F                 	db	111
   231  00587B  72                 	db	114
   232  00587C  3A                 	db	58
   233  00587D  20                 	db	32
   234  00587E  20                 	db	32
   235  00587F  00                 	db	0
   236  005880  4D                 	db	77
   237  005881  61                 	db	97
   238  005882  72                 	db	114
   239  005883  63                 	db	99
   240  005884  65                 	db	101
   241  005885  6C                 	db	108
   242  005886  6F                 	db	111
   243  005887  20                 	db	32
   244  005888  53                 	db	83
   245  005889  69                 	db	105
   246  00588A  6C                 	db	108
   247  00588B  76                 	db	118
   248  00588C  65                 	db	101
   249  00588D  69                 	db	105
   250  00588E  72                 	db	114
   251  00588F  61                 	db	97
   252  005890  00                 	db	0
   253  005891  49                 	db	73
   254  005892  46                 	db	70
   255  005893  52                 	db	82
   256  005894  53                 	db	83
   257  005895  20                 	db	32
   258  005896  2D                 	db	45
   259  005897  20                 	db	32
   260  005898  54                 	db	84
   261  005899  65                 	db	101
   262  00589A  63                 	db	99
   263  00589B  6E                 	db	110
   264  00589C  69                 	db	105
   265  00589D  63                 	db	99
   266  00589E  6F                 	db	111
   267  00589F  20                 	db	32
   268  0058A0  20                 	db	32
   269  0058A1  00                 	db	0
   270  0058A2  45                 	db	69
   271  0058A3  6C                 	db	108
   272  0058A4  65                 	db	101
   273  0058A5  74                 	db	116
   274  0058A6  72                 	db	114
   275  0058A7  6F                 	db	111
   276  0058A8  6E                 	db	110
   277  0058A9  69                 	db	105
   278  0058AA  63                 	db	99
   279  0058AB  61                 	db	97
   280  0058AC  20                 	db	32
   281  0058AD  20                 	db	32
   282  0058AE  20                 	db	32
   283  0058AF  20                 	db	32
   284  0058B0  20                 	db	32
   285  0058B1  20                 	db	32
   286  0058B2  00                 	db	0
   287  0058B3  54                 	db	84
   288  0058B4  75                 	db	117
   289  0058B5  72                 	db	114
   290  0058B6  6D                 	db	109
   291  0058B7  61                 	db	97
   292  0058B8  20                 	db	32
   293  0058B9  32                 	db	50
   294  0058BA  30                 	db	48
   295  0058BB  31                 	db	49
   296  0058BC  39                 	db	57
   297  0058BD  2F                 	db	47
   298  0058BE  31                 	db	49
   299  0058BF  20                 	db	32
   300  0058C0  20                 	db	32
   301  0058C1  20                 	db	32
   302  0058C2  20                 	db	32
   303  0058C3  00                 	db	0
   304                           
   305                           ;initializer for miniMidi@F3561
   306  0058C4  0310               	dw	784
   307  0058C6  E848               	dw	59464
   308  0058C8  0310               	dw	784
   309  0058CA  E848               	dw	59464
   310  0058CC  0310               	dw	784
   311  0058CE  E848               	dw	59464
   312  0058D0  0293               	dw	659
   313  0058D2  E848               	dw	59464
   314  0058D4  03DB               	dw	987
   315  0058D6  E848               	dw	59464
   316  0058D8  0310               	dw	784
   317  0058DA  E848               	dw	59464
   318  0058DC  0293               	dw	659
   319  0058DE  E848               	dw	59464
   320  0058E0  03DB               	dw	987
   321  0058E2  E848               	dw	59464
   322  0058E4  0310               	dw	784
   323  0058E6  E848               	dw	59464
   324  0058E8  04DC               	dw	1244
   325  0058EA  E848               	dw	59464
   326  0058EC  04DC               	dw	1244
   327  0058EE  E848               	dw	59464
   328  0058F0  04DC               	dw	1244
   329  0058F2  E848               	dw	59464
   330  0058F4  0526               	dw	1318
   331  0058F6  E848               	dw	59464
   332  0058F8  03DB               	dw	987
   333  0058FA  E848               	dw	59464
   334  0058FC  02E4               	dw	740
   335  0058FE  E848               	dw	59464
   336  005900  0293               	dw	659
   337  005902  E848               	dw	59464
   338  005904  03DB               	dw	987
   339  005906  E848               	dw	59464
   340  005908  0310               	dw	784
   341  00590A  E848               	dw	59464
   342  00590C  067C               	dw	1660
   343  00590E  E848               	dw	59464
   344  005910  0310               	dw	784
   345  005912  E848               	dw	59464
   346  005914  0310               	dw	784
   347  005916  E848               	dw	59464
   348  005918  067C               	dw	1660
   349  00591A  E848               	dw	59464
   350  00591C  0620               	dw	1568
   351  00591E  E848               	dw	59464
   352  005920  05C8               	dw	1480
   353  005922  E848               	dw	59464
   354  005924  0574               	dw	1396
   355  005926  E848               	dw	59464
   356  005928  0526               	dw	1318
   357  00592A  E848               	dw	59464
   358  00592C  05C8               	dw	1480
   359  00592E  E848               	dw	59464
   360  0000                     _ADRES	set	4035
   361  0000                     _PORTDbits	set	3971
   362  0000                     _TRISB	set	3987
   363  0000                     _PORTB	set	3969
   364  0000                     _ADCON0bits	set	4034
   365  0000                     _ADCON0	set	4034
   366  0000                     _ADCON2	set	4032
   367  0000                     _PORTEbits	set	3972
   368  0000                     _PORTCbits	set	3970
   369  0000                     _PORTE	set	3972
   370  0000                     _PORTC	set	3970
   371  0000                     _TRISE	set	3990
   372  0000                     _TRISC	set	3988
   373  0000                     _PORTBbits	set	3969
   374  0000                     _ADCON1	set	4033
   375  0000                     _TRISD	set	3989
   376  0000                     _PORTA	set	3968
   377  0000                     _PORTAbits	set	3968
   378  0000                     _PORTD	set	3971
   379  0000                     _TRISA	set	3986
   380  0000                     _T2CON	set	4042
   381  0000                     _TRISCbits	set	3988
   382  0000                     _CCP2CON	set	4026
   383  0000                     _CCPR2L	set	4027
   384  0000                     _CCP1CON	set	4029
   385  0000                     _CCPR1L	set	4030
   386  0000                     _PR2	set	4043
   387  0000                     _T0CON	set	4053
   388  0000                     _TMR0L	set	4054
   389  0000                     _TMR0H	set	4055
   390  0000                     _INTCON	set	4082
   391                           
   392                           	psect	mediumconst
   393  007C42                     __pmediumconst:
   394                           	callstack 0
   395  007C42  00                 	db	0
   396  007C43                     STR_7:
   397  007C43  44                 	db	68	;'D'
   398  007C44  65                 	db	101	;'e'
   399  007C45  20                 	db	32
   400  007C46  25                 	db	37
   401  007C47  30                 	db	48	;'0'
   402  007C48  30                 	db	48	;'0'
   403  007C49  30                 	db	48	;'0'
   404  007C4A  30                 	db	48	;'0'
   405  007C4B  64                 	db	100	;'d'
   406  007C4C  20                 	db	32
   407  007C4D  61                 	db	97	;'a'
   408  007C4E  20                 	db	32
   409  007C4F  20                 	db	32
   410  007C50  30                 	db	48	;'0'
   411  007C51  20                 	db	32
   412  007C52  20                 	db	32
   413  007C53  20                 	db	32
   414  007C54  20                 	db	32
   415  007C55  00                 	db	0
   416  007C56                     STR_20:
   417  007C56  4D                 	db	77	;'M'
   418  007C57  49                 	db	73	;'I'
   419  007C58  44                 	db	68	;'D'
   420  007C59  49                 	db	73	;'I'
   421  007C5A  20                 	db	32
   422  007C5B  6F                 	db	111	;'o'
   423  007C5C  6E                 	db	110	;'n'
   424  007C5D  20                 	db	32
   425  007C5E  20                 	db	32
   426  007C5F  20                 	db	32
   427  007C60  20                 	db	32
   428  007C61  20                 	db	32
   429  007C62  20                 	db	32
   430  007C63  20                 	db	32
   431  007C64  20                 	db	32
   432  007C65  20                 	db	32
   433  007C66  20                 	db	32
   434  007C67  00                 	db	0
   435  007C68                     STR_56:
   436  007C68  3E                 	db	62	;'>'
   437  007C69  56                 	db	86	;'V'
   438  007C6A  6F                 	db	111	;'o'
   439  007C6B  6C                 	db	108	;'l'
   440  007C6C  74                 	db	116	;'t'
   441  007C6D  61                 	db	97	;'a'
   442  007C6E  72                 	db	114	;'r'
   443  007C6F  20                 	db	32
   444  007C70  20                 	db	32
   445  007C71  20                 	db	32
   446  007C72  20                 	db	32
   447  007C73  20                 	db	32
   448  007C74  20                 	db	32
   449  007C75  20                 	db	32
   450  007C76  20                 	db	32
   451  007C77  20                 	db	32
   452  007C78  20                 	db	32
   453  007C79  00                 	db	0
   454  007C7A                     STR_61:
   455  007C7A  20                 	db	32
   456  007C7B  53                 	db	83	;'S'
   457  007C7C  49                 	db	73	;'I'
   458  007C7D  53                 	db	83	;'S'
   459  007C7E  54                 	db	84	;'T'
   460  007C7F  45                 	db	69	;'E'
   461  007C80  4D                 	db	77	;'M'
   462  007C81  41                 	db	65	;'A'
   463  007C82  20                 	db	32
   464  007C83  20                 	db	32
   465  007C84  20                 	db	32
   466  007C85  20                 	db	32
   467  007C86  20                 	db	32
   468  007C87  20                 	db	32
   469  007C88  20                 	db	32
   470  007C89  20                 	db	32
   471  007C8A  20                 	db	32
   472  007C8B  00                 	db	0
   473  007C8C                     STR_16:
   474  007C8C  50                 	db	80	;'P'
   475  007C8D  6F                 	db	111	;'o'
   476  007C8E  74                 	db	116	;'t'
   477  007C8F  65                 	db	101	;'e'
   478  007C90  6E                 	db	110	;'n'
   479  007C91  63                 	db	99	;'c'
   480  007C92  2E                 	db	46
   481  007C93  20                 	db	32
   482  007C94  20                 	db	32
   483  007C95  25                 	db	37
   484  007C96  64                 	db	100	;'d'
   485  007C97  20                 	db	32
   486  007C98  20                 	db	32
   487  007C99  20                 	db	32
   488  007C9A  20                 	db	32
   489  007C9B  20                 	db	32
   490  007C9C  20                 	db	32
   491  007C9D  00                 	db	0
   492  007C9E                     STR_17:
   493  007C9E  52                 	db	82	;'R'
   494  007C9F  42                 	db	66	;'B'
   495  007CA0  31                 	db	49	;'1'
   496  007CA1  20                 	db	32
   497  007CA2  70                 	db	112	;'p'
   498  007CA3  2F                 	db	47
   499  007CA4  56                 	db	86	;'V'
   500  007CA5  4F                 	db	79	;'O'
   501  007CA6  4C                 	db	76	;'L'
   502  007CA7  54                 	db	84	;'T'
   503  007CA8  41                 	db	65	;'A'
   504  007CA9  52                 	db	82	;'R'
   505  007CAA  20                 	db	32
   506  007CAB  20                 	db	32
   507  007CAC  20                 	db	32
   508  007CAD  20                 	db	32
   509  007CAE  20                 	db	32
   510  007CAF  00                 	db	0
   511  007CB0                     STR_18:
   512  007CB0  50                 	db	80	;'P'
   513  007CB1  6F                 	db	111	;'o'
   514  007CB2  74                 	db	116	;'t'
   515  007CB3  65                 	db	101	;'e'
   516  007CB4  6E                 	db	110	;'n'
   517  007CB5  63                 	db	99	;'c'
   518  007CB6  2E                 	db	46
   519  007CB7  20                 	db	32
   520  007CB8  20                 	db	32
   521  007CB9  25                 	db	37
   522  007CBA  64                 	db	100	;'d'
   523  007CBB  25                 	db	37
   524  007CBC  25                 	db	37
   525  007CBD  20                 	db	32
   526  007CBE  20                 	db	32
   527  007CBF  20                 	db	32
   528  007CC0  20                 	db	32
   529  007CC1  00                 	db	0
   530  007CC2                     STR_15:
   531  007CC2  3E                 	db	62	;'>'
   532  007CC3  50                 	db	80	;'P'
   533  007CC4  57                 	db	87	;'W'
   534  007CC5  4D                 	db	77	;'M'
   535  007CC6  20                 	db	32
   536  007CC7  25                 	db	37
   537  007CC8  64                 	db	100	;'d'
   538  007CC9  25                 	db	37
   539  007CCA  25                 	db	37
   540  007CCB  20                 	db	32
   541  007CCC  20                 	db	32
   542  007CCD  4F                 	db	79	;'O'
   543  007CCE  4E                 	db	78	;'N'
   544  007CCF  20                 	db	32
   545  007CD0  20                 	db	32
   546  007CD1  20                 	db	32
   547  007CD2  20                 	db	32
   548  007CD3  00                 	db	0
   549  007CD4                     STR_60:
   550  007CD4  20                 	db	32
   551  007CD5  42                 	db	66	;'B'
   552  007CD6  45                 	db	69	;'E'
   553  007CD7  4D                 	db	77	;'M'
   554  007CD8  20                 	db	32
   555  007CD9  56                 	db	86	;'V'
   556  007CDA  49                 	db	73	;'I'
   557  007CDB  4E                 	db	78	;'N'
   558  007CDC  44                 	db	68	;'D'
   559  007CDD  4F                 	db	79	;'O'
   560  007CDE  20                 	db	32
   561  007CDF  41                 	db	65	;'A'
   562  007CE0  4F                 	db	79	;'O'
   563  007CE1  20                 	db	32
   564  007CE2  20                 	db	32
   565  007CE3  20                 	db	32
   566  007CE4  20                 	db	32
   567  007CE5  00                 	db	0
   568  007CE6                     STR_57:
   569  007CE6  5F                 	db	95	;'_'
   570  007CE7  5F                 	db	95	;'_'
   571  007CE8  5F                 	db	95	;'_'
   572  007CE9  5F                 	db	95	;'_'
   573  007CEA  5F                 	db	95	;'_'
   574  007CEB  5F                 	db	95	;'_'
   575  007CEC  5F                 	db	95	;'_'
   576  007CED  5F                 	db	95	;'_'
   577  007CEE  5F                 	db	95	;'_'
   578  007CEF  5F                 	db	95	;'_'
   579  007CF0  5F                 	db	95	;'_'
   580  007CF1  5F                 	db	95	;'_'
   581  007CF2  5F                 	db	95	;'_'
   582  007CF3  5F                 	db	95	;'_'
   583  007CF4  5F                 	db	95	;'_'
   584  007CF5  5F                 	db	95	;'_'
   585  007CF6  5F                 	db	95	;'_'
   586  007CF7  00                 	db	0
   587  007CF8                     STR_63:
   588  007CF8  20                 	db	32
   589  007CF9  4C                 	db	76	;'L'
   590  007CFA  43                 	db	67	;'C'
   591  007CFB  44                 	db	68	;'D'
   592  007CFC  20                 	db	32
   593  007CFD  20                 	db	32
   594  007CFE  20                 	db	32
   595  007CFF  20                 	db	32
   596  007D00  20                 	db	32
   597  007D01  20                 	db	32
   598  007D02  20                 	db	32
   599  007D03  20                 	db	32
   600  007D04  20                 	db	32
   601  007D05  20                 	db	32
   602  007D06  20                 	db	32
   603  007D07  20                 	db	32
   604  007D08  00                 	db	0
   605  007D09                     STR_64:
   606  007D09  3E                 	db	62	;'>'
   607  007D0A  4C                 	db	76	;'L'
   608  007D0B  43                 	db	67	;'C'
   609  007D0C  44                 	db	68	;'D'
   610  007D0D  20                 	db	32
   611  007D0E  20                 	db	32
   612  007D0F  20                 	db	32
   613  007D10  20                 	db	32
   614  007D11  20                 	db	32
   615  007D12  20                 	db	32
   616  007D13  20                 	db	32
   617  007D14  20                 	db	32
   618  007D15  20                 	db	32
   619  007D16  20                 	db	32
   620  007D17  20                 	db	32
   621  007D18  20                 	db	32
   622  007D19  00                 	db	0
   623  007D1A                     STR_71:
   624  007D1A  20                 	db	32
   625  007D1B  53                 	db	83	;'S'
   626  007D1C  6F                 	db	111	;'o'
   627  007D1D  62                 	db	98	;'b'
   628  007D1E  72                 	db	114	;'r'
   629  007D1F  65                 	db	101	;'e'
   630  007D20  20                 	db	32
   631  007D21  20                 	db	32
   632  007D22  20                 	db	32
   633  007D23  20                 	db	32
   634  007D24  20                 	db	32
   635  007D25  20                 	db	32
   636  007D26  20                 	db	32
   637  007D27  20                 	db	32
   638  007D28  20                 	db	32
   639  007D29  20                 	db	32
   640  007D2A  00                 	db	0
   641  007D2B                     STR_72:
   642  007D2B  3E                 	db	62	;'>'
   643  007D2C  53                 	db	83	;'S'
   644  007D2D  6F                 	db	111	;'o'
   645  007D2E  62                 	db	98	;'b'
   646  007D2F  72                 	db	114	;'r'
   647  007D30  65                 	db	101	;'e'
   648  007D31  20                 	db	32
   649  007D32  20                 	db	32
   650  007D33  20                 	db	32
   651  007D34  20                 	db	32
   652  007D35  20                 	db	32
   653  007D36  20                 	db	32
   654  007D37  20                 	db	32
   655  007D38  20                 	db	32
   656  007D39  20                 	db	32
   657  007D3A  20                 	db	32
   658  007D3B  00                 	db	0
   659  007D3C                     STR_59:
   660  007D3C  20                 	db	32
   661  007D3D  20                 	db	32
   662  007D3E  20                 	db	32
   663  007D3F  49                 	db	73	;'I'
   664  007D40  46                 	db	70	;'F'
   665  007D41  52                 	db	82	;'R'
   666  007D42  53                 	db	83	;'S'
   667  007D43  20                 	db	32
   668  007D44  20                 	db	32
   669  007D45  20                 	db	32
   670  007D46  20                 	db	32
   671  007D47  20                 	db	32
   672  007D48  20                 	db	32
   673  007D49  20                 	db	32
   674  007D4A  20                 	db	32
   675  007D4B  20                 	db	32
   676  007D4C  00                 	db	0
   677  007D4D                     STR_25:
   678  007D4D  20                 	db	32
   679  007D4E  56                 	db	86	;'V'
   680  007D4F  6F                 	db	111	;'o'
   681  007D50  6C                 	db	108	;'l'
   682  007D51  74                 	db	116	;'t'
   683  007D52  61                 	db	97	;'a'
   684  007D53  72                 	db	114	;'r'
   685  007D54  20                 	db	32
   686  007D55  20                 	db	32
   687  007D56  20                 	db	32
   688  007D57  20                 	db	32
   689  007D58  20                 	db	32
   690  007D59  20                 	db	32
   691  007D5A  20                 	db	32
   692  007D5B  20                 	db	32
   693  007D5C  20                 	db	32
   694  007D5D  00                 	db	0
   695  007D5E                     STR_26:
   696  007D5E  3E                 	db	62	;'>'
   697  007D5F  56                 	db	86	;'V'
   698  007D60  6F                 	db	111	;'o'
   699  007D61  6C                 	db	108	;'l'
   700  007D62  74                 	db	116	;'t'
   701  007D63  61                 	db	97	;'a'
   702  007D64  72                 	db	114	;'r'
   703  007D65  20                 	db	32
   704  007D66  20                 	db	32
   705  007D67  20                 	db	32
   706  007D68  20                 	db	32
   707  007D69  20                 	db	32
   708  007D6A  20                 	db	32
   709  007D6B  20                 	db	32
   710  007D6C  20                 	db	32
   711  007D6D  20                 	db	32
   712  007D6E  00                 	db	0
   713  007D6F                     STR_67:
   714  007D6F  20                 	db	32
   715  007D70  43                 	db	67	;'C'
   716  007D71  6F                 	db	111	;'o'
   717  007D72  6F                 	db	111	;'o'
   718  007D73  6C                 	db	108	;'l'
   719  007D74  65                 	db	101	;'e'
   720  007D75  72                 	db	114	;'r'
   721  007D76  20                 	db	32
   722  007D77  20                 	db	32
   723  007D78  20                 	db	32
   724  007D79  20                 	db	32
   725  007D7A  20                 	db	32
   726  007D7B  20                 	db	32
   727  007D7C  20                 	db	32
   728  007D7D  20                 	db	32
   729  007D7E  20                 	db	32
   730  007D7F  00                 	db	0
   731  007D80                     STR_68:
   732  007D80  3E                 	db	62	;'>'
   733  007D81  43                 	db	67	;'C'
   734  007D82  6F                 	db	111	;'o'
   735  007D83  6F                 	db	111	;'o'
   736  007D84  6C                 	db	108	;'l'
   737  007D85  65                 	db	101	;'e'
   738  007D86  72                 	db	114	;'r'
   739  007D87  20                 	db	32
   740  007D88  20                 	db	32
   741  007D89  20                 	db	32
   742  007D8A  20                 	db	32
   743  007D8B  20                 	db	32
   744  007D8C  20                 	db	32
   745  007D8D  20                 	db	32
   746  007D8E  20                 	db	32
   747  007D8F  20                 	db	32
   748  007D90  00                 	db	0
   749  007D91                     STR_65:
   750  007D91  20                 	db	32
   751  007D92  42                 	db	66	;'B'
   752  007D93  75                 	db	117	;'u'
   753  007D94  7A                 	db	122	;'z'
   754  007D95  7A                 	db	122	;'z'
   755  007D96  65                 	db	101	;'e'
   756  007D97  72                 	db	114	;'r'
   757  007D98  20                 	db	32
   758  007D99  20                 	db	32
   759  007D9A  20                 	db	32
   760  007D9B  20                 	db	32
   761  007D9C  20                 	db	32
   762  007D9D  20                 	db	32
   763  007D9E  20                 	db	32
   764  007D9F  20                 	db	32
   765  007DA0  20                 	db	32
   766  007DA1  00                 	db	0
   767  007DA2                     STR_66:
   768  007DA2  3E                 	db	62	;'>'
   769  007DA3  42                 	db	66	;'B'
   770  007DA4  75                 	db	117	;'u'
   771  007DA5  7A                 	db	122	;'z'
   772  007DA6  7A                 	db	122	;'z'
   773  007DA7  65                 	db	101	;'e'
   774  007DA8  72                 	db	114	;'r'
   775  007DA9  20                 	db	32
   776  007DAA  20                 	db	32
   777  007DAB  20                 	db	32
   778  007DAC  20                 	db	32
   779  007DAD  20                 	db	32
   780  007DAE  20                 	db	32
   781  007DAF  20                 	db	32
   782  007DB0  20                 	db	32
   783  007DB1  20                 	db	32
   784  007DB2  00                 	db	0
   785  007DB3                     STR_69:
   786  007DB3  20                 	db	32
   787  007DB4  52                 	db	82	;'R'
   788  007DB5  65                 	db	101	;'e'
   789  007DB6  6C                 	db	108	;'l'
   790  007DB7  61                 	db	97	;'a'
   791  007DB8  79                 	db	121	;'y'
   792  007DB9  73                 	db	115	;'s'
   793  007DBA  20                 	db	32
   794  007DBB  20                 	db	32
   795  007DBC  20                 	db	32
   796  007DBD  20                 	db	32
   797  007DBE  20                 	db	32
   798  007DBF  20                 	db	32
   799  007DC0  20                 	db	32
   800  007DC1  20                 	db	32
   801  007DC2  20                 	db	32
   802  007DC3  00                 	db	0
   803  007DC4                     STR_70:
   804  007DC4  3E                 	db	62	;'>'
   805  007DC5  52                 	db	82	;'R'
   806  007DC6  65                 	db	101	;'e'
   807  007DC7  6C                 	db	108	;'l'
   808  007DC8  61                 	db	97	;'a'
   809  007DC9  79                 	db	121	;'y'
   810  007DCA  73                 	db	115	;'s'
   811  007DCB  20                 	db	32
   812  007DCC  20                 	db	32
   813  007DCD  20                 	db	32
   814  007DCE  20                 	db	32
   815  007DCF  20                 	db	32
   816  007DD0  20                 	db	32
   817  007DD1  20                 	db	32
   818  007DD2  20                 	db	32
   819  007DD3  20                 	db	32
   820  007DD4  00                 	db	0
   821  007DD5                     STR_35:
   822  007DD5  20                 	db	32
   823  007DD6  50                 	db	80	;'P'
   824  007DD7  57                 	db	87	;'W'
   825  007DD8  4D                 	db	77	;'M'
   826  007DD9  20                 	db	32
   827  007DDA  32                 	db	50	;'2'
   828  007DDB  35                 	db	53	;'5'
   829  007DDC  25                 	db	37
   830  007DDD  20                 	db	32
   831  007DDE  20                 	db	32
   832  007DDF  20                 	db	32
   833  007DE0  20                 	db	32
   834  007DE1  20                 	db	32
   835  007DE2  20                 	db	32
   836  007DE3  20                 	db	32
   837  007DE4  20                 	db	32
   838  007DE5  00                 	db	0
   839  007DE6                     STR_28:
   840  007DE6  3E                 	db	62	;'>'
   841  007DE7  52                 	db	82	;'R'
   842  007DE8  65                 	db	101	;'e'
   843  007DE9  6C                 	db	108	;'l'
   844  007DEA  61                 	db	97	;'a'
   845  007DEB  79                 	db	121	;'y'
   846  007DEC  20                 	db	32
   847  007DED  31                 	db	49	;'1'
   848  007DEE  20                 	db	32
   849  007DEF  20                 	db	32
   850  007DF0  20                 	db	32
   851  007DF1  20                 	db	32
   852  007DF2  20                 	db	32
   853  007DF3  20                 	db	32
   854  007DF4  20                 	db	32
   855  007DF5  20                 	db	32
   856  007DF6  00                 	db	0
   857  007DF7                     STR_29:
   858  007DF7  20                 	db	32
   859  007DF8  52                 	db	82	;'R'
   860  007DF9  65                 	db	101	;'e'
   861  007DFA  6C                 	db	108	;'l'
   862  007DFB  61                 	db	97	;'a'
   863  007DFC  79                 	db	121	;'y'
   864  007DFD  20                 	db	32
   865  007DFE  32                 	db	50	;'2'
   866  007DFF  20                 	db	32
   867  007E00  20                 	db	32
   868  007E01  20                 	db	32
   869  007E02  20                 	db	32
   870  007E03  20                 	db	32
   871  007E04  20                 	db	32
   872  007E05  20                 	db	32
   873  007E06  20                 	db	32
   874  007E07  00                 	db	0
   875  007E08                     STR_30:
   876  007E08  3E                 	db	62	;'>'
   877  007E09  52                 	db	82	;'R'
   878  007E0A  65                 	db	101	;'e'
   879  007E0B  6C                 	db	108	;'l'
   880  007E0C  61                 	db	97	;'a'
   881  007E0D  79                 	db	121	;'y'
   882  007E0E  20                 	db	32
   883  007E0F  32                 	db	50	;'2'
   884  007E10  20                 	db	32
   885  007E11  20                 	db	32
   886  007E12  20                 	db	32
   887  007E13  20                 	db	32
   888  007E14  20                 	db	32
   889  007E15  20                 	db	32
   890  007E16  20                 	db	32
   891  007E17  20                 	db	32
   892  007E18  00                 	db	0
   893  007E19                     STR_54:
   894  007E19  3E                 	db	62	;'>'
   895  007E1A  52                 	db	82	;'R'
   896  007E1B  42                 	db	66	;'B'
   897  007E1C  32                 	db	50	;'2'
   898  007E1D  2D                 	db	45
   899  007E1E  20                 	db	32
   900  007E1F  52                 	db	82	;'R'
   901  007E20  42                 	db	66	;'B'
   902  007E21  30                 	db	48	;'0'
   903  007E22  2B                 	db	43
   904  007E23  20                 	db	32
   905  007E24  20                 	db	32
   906  007E25  20                 	db	32
   907  007E26  20                 	db	32
   908  007E27  20                 	db	32
   909  007E28  20                 	db	32
   910  007E29  00                 	db	0
   911  007E2A                     STR_53:
   912  007E2A  20                 	db	32
   913  007E2B  52                 	db	82	;'R'
   914  007E2C  42                 	db	66	;'B'
   915  007E2D  32                 	db	50	;'2'
   916  007E2E  2B                 	db	43
   917  007E2F  20                 	db	32
   918  007E30  52                 	db	82	;'R'
   919  007E31  42                 	db	66	;'B'
   920  007E32  30                 	db	48	;'0'
   921  007E33  2D                 	db	45
   922  007E34  20                 	db	32
   923  007E35  20                 	db	32
   924  007E36  20                 	db	32
   925  007E37  20                 	db	32
   926  007E38  20                 	db	32
   927  007E39  20                 	db	32
   928  007E3A  00                 	db	0
   929  007E3B                     STR_4:
   930  007E3B  50                 	db	80	;'P'
   931  007E3C  72                 	db	114	;'r'
   932  007E3D  6F                 	db	111	;'o'
   933  007E3E  6E                 	db	110	;'n'
   934  007E3F  74                 	db	116	;'t'
   935  007E40  6F                 	db	111	;'o'
   936  007E41  2E                 	db	46
   937  007E42  2E                 	db	46
   938  007E43  2E                 	db	46
   939  007E44  2E                 	db	46
   940  007E45  20                 	db	32
   941  007E46  20                 	db	32
   942  007E47  20                 	db	32
   943  007E48  20                 	db	32
   944  007E49  20                 	db	32
   945  007E4A  20                 	db	32
   946  007E4B  00                 	db	0
   947  007E4C                     STR_2:
   948  007E4C  41                 	db	65	;'A'
   949  007E4D  67                 	db	103	;'g'
   950  007E4E  75                 	db	117	;'u'
   951  007E4F  61                 	db	97	;'a'
   952  007E50  72                 	db	114	;'r'
   953  007E51  64                 	db	100	;'d'
   954  007E52  65                 	db	101	;'e'
   955  007E53  2E                 	db	46
   956  007E54  2E                 	db	46
   957  007E55  2E                 	db	46
   958  007E56  20                 	db	32
   959  007E57  20                 	db	32
   960  007E58  20                 	db	32
   961  007E59  20                 	db	32
   962  007E5A  20                 	db	32
   963  007E5B  20                 	db	32
   964  007E5C  00                 	db	0
   965  007E5D                     STR_1:
   966  007E5D  54                 	db	84	;'T'
   967  007E5E  65                 	db	101	;'e'
   968  007E5F  73                 	db	115	;'s'
   969  007E60  74                 	db	116	;'t'
   970  007E61  65                 	db	101	;'e'
   971  007E62  20                 	db	32
   972  007E63  38                 	db	56	;'8'
   973  007E64  38                 	db	56	;'8'
   974  007E65  38                 	db	56	;'8'
   975  007E66  38                 	db	56	;'8'
   976  007E67  20                 	db	32
   977  007E68  20                 	db	32
   978  007E69  20                 	db	32
   979  007E6A  20                 	db	32
   980  007E6B  20                 	db	32
   981  007E6C  20                 	db	32
   982  007E6D  00                 	db	0
   983  007E6E                     STR_34:
   984  007E6E  3E                 	db	62	;'>'
   985  007E6F  4D                 	db	77	;'M'
   986  007E70  69                 	db	105	;'i'
   987  007E71  6E                 	db	110	;'n'
   988  007E72  69                 	db	105	;'i'
   989  007E73  20                 	db	32
   990  007E74  4D                 	db	77	;'M'
   991  007E75  49                 	db	73	;'I'
   992  007E76  44                 	db	68	;'D'
   993  007E77  49                 	db	73	;'I'
   994  007E78  20                 	db	32
   995  007E79  20                 	db	32
   996  007E7A  20                 	db	32
   997  007E7B  20                 	db	32
   998  007E7C  20                 	db	32
   999  007E7D  20                 	db	32
  1000  007E7E  00                 	db	0
  1001  007E7F                     STR_22:
  1002  007E7F  3E                 	db	62	;'>'
  1003  007E80  54                 	db	84	;'T'
  1004  007E81  65                 	db	101	;'e'
  1005  007E82  73                 	db	115	;'s'
  1006  007E83  74                 	db	116	;'t'
  1007  007E84  65                 	db	101	;'e'
  1008  007E85  20                 	db	32
  1009  007E86  38                 	db	56	;'8'
  1010  007E87  38                 	db	56	;'8'
  1011  007E88  38                 	db	56	;'8'
  1012  007E89  38                 	db	56	;'8'
  1013  007E8A  20                 	db	32
  1014  007E8B  20                 	db	32
  1015  007E8C  20                 	db	32
  1016  007E8D  20                 	db	32
  1017  007E8E  20                 	db	32
  1018  007E8F  00                 	db	0
  1019  007E90                     STR_13:
  1020  007E90  54                 	db	84	;'T'
  1021  007E91  65                 	db	101	;'e'
  1022  007E92  73                 	db	115	;'s'
  1023  007E93  74                 	db	116	;'t'
  1024  007E94  65                 	db	101	;'e'
  1025  007E95  20                 	db	32
  1026  007E96  64                 	db	100	;'d'
  1027  007E97  6F                 	db	111	;'o'
  1028  007E98  20                 	db	32
  1029  007E99  4C                 	db	76	;'L'
  1030  007E9A  43                 	db	67	;'C'
  1031  007E9B  44                 	db	68	;'D'
  1032  007E9C  20                 	db	32
  1033  007E9D  20                 	db	32
  1034  007E9E  20                 	db	32
  1035  007E9F  20                 	db	32
  1036  007EA0  00                 	db	0
  1037  007EA1                     STR_58:
  1038  007EA1  20                 	db	32
  1039  007EA2  20                 	db	32
  1040  007EA3  20                 	db	32
  1041  007EA4  45                 	db	69	;'E'
  1042  007EA5  4C                 	db	76	;'L'
  1043  007EA6  45                 	db	69	;'E'
  1044  007EA7  54                 	db	84	;'T'
  1045  007EA8  52                 	db	82	;'R'
  1046  007EA9  4F                 	db	79	;'O'
  1047  007EAA  4E                 	db	78	;'N'
  1048  007EAB  49                 	db	73	;'I'
  1049  007EAC  43                 	db	67	;'C'
  1050  007EAD  41                 	db	65	;'A'
  1051  007EAE  20                 	db	32
  1052  007EAF  20                 	db	32
  1053  007EB0  20                 	db	32
  1054  007EB1  00                 	db	0
  1055  007EB2                     STR_37:
  1056  007EB2  20                 	db	32
  1057  007EB3  50                 	db	80	;'P'
  1058  007EB4  57                 	db	87	;'W'
  1059  007EB5  4D                 	db	77	;'M'
  1060  007EB6  20                 	db	32
  1061  007EB7  35                 	db	53	;'5'
  1062  007EB8  30                 	db	48	;'0'
  1063  007EB9  25                 	db	37
  1064  007EBA  20                 	db	32
  1065  007EBB  20                 	db	32
  1066  007EBC  4F                 	db	79	;'O'
  1067  007EBD  66                 	db	102	;'f'
  1068  007EBE  66                 	db	102	;'f'
  1069  007EBF  20                 	db	32
  1070  007EC0  20                 	db	32
  1071  007EC1  20                 	db	32
  1072  007EC2  00                 	db	0
  1073  007EC3                     STR_38:
  1074  007EC3  3E                 	db	62	;'>'
  1075  007EC4  50                 	db	80	;'P'
  1076  007EC5  57                 	db	87	;'W'
  1077  007EC6  4D                 	db	77	;'M'
  1078  007EC7  20                 	db	32
  1079  007EC8  35                 	db	53	;'5'
  1080  007EC9  30                 	db	48	;'0'
  1081  007ECA  25                 	db	37
  1082  007ECB  20                 	db	32
  1083  007ECC  20                 	db	32
  1084  007ECD  4F                 	db	79	;'O'
  1085  007ECE  66                 	db	102	;'f'
  1086  007ECF  66                 	db	102	;'f'
  1087  007ED0  20                 	db	32
  1088  007ED1  20                 	db	32
  1089  007ED2  20                 	db	32
  1090  007ED3  00                 	db	0
  1091  007ED4                     STR_36:
  1092  007ED4  3E                 	db	62	;'>'
  1093  007ED5  50                 	db	80	;'P'
  1094  007ED6  57                 	db	87	;'W'
  1095  007ED7  4D                 	db	77	;'M'
  1096  007ED8  20                 	db	32
  1097  007ED9  32                 	db	50	;'2'
  1098  007EDA  35                 	db	53	;'5'
  1099  007EDB  25                 	db	37
  1100  007EDC  20                 	db	32
  1101  007EDD  20                 	db	32
  1102  007EDE  4F                 	db	79	;'O'
  1103  007EDF  66                 	db	102	;'f'
  1104  007EE0  66                 	db	102	;'f'
  1105  007EE1  20                 	db	32
  1106  007EE2  20                 	db	32
  1107  007EE3  20                 	db	32
  1108  007EE4  00                 	db	0
  1109  007EE5                     STR_39:
  1110  007EE5  20                 	db	32
  1111  007EE6  50                 	db	80	;'P'
  1112  007EE7  57                 	db	87	;'W'
  1113  007EE8  4D                 	db	77	;'M'
  1114  007EE9  20                 	db	32
  1115  007EEA  37                 	db	55	;'7'
  1116  007EEB  35                 	db	53	;'5'
  1117  007EEC  25                 	db	37
  1118  007EED  20                 	db	32
  1119  007EEE  20                 	db	32
  1120  007EEF  4F                 	db	79	;'O'
  1121  007EF0  66                 	db	102	;'f'
  1122  007EF1  66                 	db	102	;'f'
  1123  007EF2  20                 	db	32
  1124  007EF3  20                 	db	32
  1125  007EF4  20                 	db	32
  1126  007EF5  00                 	db	0
  1127  007EF6                     STR_40:
  1128  007EF6  3E                 	db	62	;'>'
  1129  007EF7  50                 	db	80	;'P'
  1130  007EF8  57                 	db	87	;'W'
  1131  007EF9  4D                 	db	77	;'M'
  1132  007EFA  20                 	db	32
  1133  007EFB  37                 	db	55	;'7'
  1134  007EFC  35                 	db	53	;'5'
  1135  007EFD  25                 	db	37
  1136  007EFE  20                 	db	32
  1137  007EFF  20                 	db	32
  1138  007F00  4F                 	db	79	;'O'
  1139  007F01  66                 	db	102	;'f'
  1140  007F02  66                 	db	102	;'f'
  1141  007F03  20                 	db	32
  1142  007F04  20                 	db	32
  1143  007F05  20                 	db	32
  1144  007F06  00                 	db	0
  1145  007F07                     STR_41:
  1146  007F07  20                 	db	32
  1147  007F08  50                 	db	80	;'P'
  1148  007F09  57                 	db	87	;'W'
  1149  007F0A  4D                 	db	77	;'M'
  1150  007F0B  20                 	db	32
  1151  007F0C  31                 	db	49	;'1'
  1152  007F0D  30                 	db	48	;'0'
  1153  007F0E  30                 	db	48	;'0'
  1154  007F0F  25                 	db	37
  1155  007F10  20                 	db	32
  1156  007F11  4F                 	db	79	;'O'
  1157  007F12  66                 	db	102	;'f'
  1158  007F13  66                 	db	102	;'f'
  1159  007F14  20                 	db	32
  1160  007F15  20                 	db	32
  1161  007F16  20                 	db	32
  1162  007F17  00                 	db	0
  1163  007F18                     STR_42:
  1164  007F18  3E                 	db	62	;'>'
  1165  007F19  50                 	db	80	;'P'
  1166  007F1A  57                 	db	87	;'W'
  1167  007F1B  4D                 	db	77	;'M'
  1168  007F1C  20                 	db	32
  1169  007F1D  31                 	db	49	;'1'
  1170  007F1E  30                 	db	48	;'0'
  1171  007F1F  30                 	db	48	;'0'
  1172  007F20  25                 	db	37
  1173  007F21  20                 	db	32
  1174  007F22  4F                 	db	79	;'O'
  1175  007F23  66                 	db	102	;'f'
  1176  007F24  66                 	db	102	;'f'
  1177  007F25  20                 	db	32
  1178  007F26  20                 	db	32
  1179  007F27  20                 	db	32
  1180  007F28  00                 	db	0
  1181  007F29                     STR_46:
  1182  007F29  3E                 	db	62	;'>'
  1183  007F2A  49                 	db	73	;'I'
  1184  007F2B  6E                 	db	110	;'n'
  1185  007F2C  69                 	db	105	;'i'
  1186  007F2D  63                 	db	99	;'c'
  1187  007F2E  69                 	db	105	;'i'
  1188  007F2F  61                 	db	97	;'a'
  1189  007F30  72                 	db	114	;'r'
  1190  007F31  20                 	db	32
  1191  007F32  54                 	db	84	;'T'
  1192  007F33  65                 	db	101	;'e'
  1193  007F34  73                 	db	115	;'s'
  1194  007F35  74                 	db	116	;'t'
  1195  007F36  65                 	db	101	;'e'
  1196  007F37  20                 	db	32
  1197  007F38  20                 	db	32
  1198  007F39  00                 	db	0
  1199  007F3A                     STR_73:
  1200  007F3A  20                 	db	32
  1201  007F3B  44                 	db	68	;'D'
  1202  007F3C  69                 	db	105	;'i'
  1203  007F3D  73                 	db	115	;'s'
  1204  007F3E  70                 	db	112	;'p'
  1205  007F3F  6C                 	db	108	;'l'
  1206  007F40  61                 	db	97	;'a'
  1207  007F41  79                 	db	121	;'y'
  1208  007F42  20                 	db	32
  1209  007F43  37                 	db	55	;'7'
  1210  007F44  20                 	db	32
  1211  007F45  53                 	db	83	;'S'
  1212  007F46  65                 	db	101	;'e'
  1213  007F47  67                 	db	103	;'g'
  1214  007F48  20                 	db	32
  1215  007F49  20                 	db	32
  1216  007F4A  00                 	db	0
  1217  007F4B                     STR_62:
  1218  007F4B  3E                 	db	62	;'>'
  1219  007F4C  44                 	db	68	;'D'
  1220  007F4D  69                 	db	105	;'i'
  1221  007F4E  73                 	db	115	;'s'
  1222  007F4F  70                 	db	112	;'p'
  1223  007F50  6C                 	db	108	;'l'
  1224  007F51  61                 	db	97	;'a'
  1225  007F52  79                 	db	121	;'y'
  1226  007F53  20                 	db	32
  1227  007F54  37                 	db	55	;'7'
  1228  007F55  20                 	db	32
  1229  007F56  53                 	db	83	;'S'
  1230  007F57  65                 	db	101	;'e'
  1231  007F58  67                 	db	103	;'g'
  1232  007F59  20                 	db	32
  1233  007F5A  20                 	db	32
  1234  007F5B  00                 	db	0
  1235  007F5C                     STR_23:
  1236  007F5C  20                 	db	32
  1237  007F5D  43                 	db	67	;'C'
  1238  007F5E  6F                 	db	111	;'o'
  1239  007F5F  6E                 	db	110	;'n'
  1240  007F60  74                 	db	116	;'t'
  1241  007F61  61                 	db	97	;'a'
  1242  007F62  72                 	db	114	;'r'
  1243  007F63  20                 	db	32
  1244  007F64  39                 	db	57	;'9'
  1245  007F65  39                 	db	57	;'9'
  1246  007F66  39                 	db	57	;'9'
  1247  007F67  39                 	db	57	;'9'
  1248  007F68  2D                 	db	45
  1249  007F69  3E                 	db	62	;'>'
  1250  007F6A  30                 	db	48	;'0'
  1251  007F6B  20                 	db	32
  1252  007F6C  00                 	db	0
  1253  007F6D                     STR_24:
  1254  007F6D  3E                 	db	62	;'>'
  1255  007F6E  43                 	db	67	;'C'
  1256  007F6F  6F                 	db	111	;'o'
  1257  007F70  6E                 	db	110	;'n'
  1258  007F71  74                 	db	116	;'t'
  1259  007F72  61                 	db	97	;'a'
  1260  007F73  72                 	db	114	;'r'
  1261  007F74  20                 	db	32
  1262  007F75  39                 	db	57	;'9'
  1263  007F76  39                 	db	57	;'9'
  1264  007F77  39                 	db	57	;'9'
  1265  007F78  39                 	db	57	;'9'
  1266  007F79  2D                 	db	45
  1267  007F7A  3E                 	db	62	;'>'
  1268  007F7B  30                 	db	48	;'0'
  1269  007F7C  20                 	db	32
  1270  007F7D  00                 	db	0
  1271  007F7E                     STR_6:
  1272  007F7E  52                 	db	82	;'R'
  1273  007F7F  42                 	db	66	;'B'
  1274  007F80  31                 	db	49	;'1'
  1275  007F81  20                 	db	32
  1276  007F82  70                 	db	112	;'p'
  1277  007F83  61                 	db	97	;'a'
  1278  007F84  72                 	db	114	;'r'
  1279  007F85  61                 	db	97	;'a'
  1280  007F86  20                 	db	32
  1281  007F87  76                 	db	118	;'v'
  1282  007F88  6F                 	db	111	;'o'
  1283  007F89  6C                 	db	108	;'l'
  1284  007F8A  74                 	db	116	;'t'
  1285  007F8B  61                 	db	97	;'a'
  1286  007F8C  72                 	db	114	;'r'
  1287  007F8D  20                 	db	32
  1288  007F8E  00                 	db	0
  1289  007F8F                     STR_50:
  1290  007F8F  3E                 	db	62	;'>'
  1291  007F90  50                 	db	80	;'P'
  1292  007F91  6F                 	db	111	;'o'
  1293  007F92  74                 	db	116	;'t'
  1294  007F93  65                 	db	101	;'e'
  1295  007F94  6E                 	db	110	;'n'
  1296  007F95  63                 	db	99	;'c'
  1297  007F96  69                 	db	105	;'i'
  1298  007F97  6F                 	db	111	;'o'
  1299  007F98  6D                 	db	109	;'m'
  1300  007F99  65                 	db	101	;'e'
  1301  007F9A  74                 	db	116	;'t'
  1302  007F9B  72                 	db	114	;'r'
  1303  007F9C  6F                 	db	111	;'o'
  1304  007F9D  20                 	db	32
  1305  007F9E  31                 	db	49	;'1'
  1306  007F9F  00                 	db	0
  1307  007FA0                     STR_51:
  1308  007FA0  20                 	db	32
  1309  007FA1  50                 	db	80	;'P'
  1310  007FA2  6F                 	db	111	;'o'
  1311  007FA3  74                 	db	116	;'t'
  1312  007FA4  65                 	db	101	;'e'
  1313  007FA5  6E                 	db	110	;'n'
  1314  007FA6  63                 	db	99	;'c'
  1315  007FA7  69                 	db	105	;'i'
  1316  007FA8  6F                 	db	111	;'o'
  1317  007FA9  6D                 	db	109	;'m'
  1318  007FAA  65                 	db	101	;'e'
  1319  007FAB  74                 	db	116	;'t'
  1320  007FAC  72                 	db	114	;'r'
  1321  007FAD  6F                 	db	111	;'o'
  1322  007FAE  20                 	db	32
  1323  007FAF  32                 	db	50	;'2'
  1324  007FB0  00                 	db	0
  1325  007FB1                     STR_52:
  1326  007FB1  3E                 	db	62	;'>'
  1327  007FB2  50                 	db	80	;'P'
  1328  007FB3  6F                 	db	111	;'o'
  1329  007FB4  74                 	db	116	;'t'
  1330  007FB5  65                 	db	101	;'e'
  1331  007FB6  6E                 	db	110	;'n'
  1332  007FB7  63                 	db	99	;'c'
  1333  007FB8  69                 	db	105	;'i'
  1334  007FB9  6F                 	db	111	;'o'
  1335  007FBA  6D                 	db	109	;'m'
  1336  007FBB  65                 	db	101	;'e'
  1337  007FBC  74                 	db	116	;'t'
  1338  007FBD  72                 	db	114	;'r'
  1339  007FBE  6F                 	db	111	;'o'
  1340  007FBF  20                 	db	32
  1341  007FC0  32                 	db	50	;'2'
  1342  007FC1  00                 	db	0
  1343  007FC2                     STR_8:
  1344  007FC2  52                 	db	82	;'R'
  1345  007FC3  42                 	db	66	;'B'
  1346  007FC4  32                 	db	50	;'2'
  1347  007FC5  3A                 	db	58	;':'
  1348  007FC6  20                 	db	32
  1349  007FC7  4F                 	db	79	;'O'
  1350  007FC8  4E                 	db	78	;'N'
  1351  007FC9  20                 	db	32
  1352  007FCA  52                 	db	82	;'R'
  1353  007FCB  42                 	db	66	;'B'
  1354  007FCC  30                 	db	48	;'0'
  1355  007FCD  3A                 	db	58	;':'
  1356  007FCE  20                 	db	32
  1357  007FCF  4F                 	db	79	;'O'
  1358  007FD0  46                 	db	70	;'F'
  1359  007FD1  46                 	db	70	;'F'
  1360  007FD2  00                 	db	0
  1361  007FD3                     STR_5:
  1362  007FD3  44                 	db	68	;'D'
  1363  007FD4  69                 	db	105	;'i'
  1364  007FD5  73                 	db	115	;'s'
  1365  007FD6  70                 	db	112	;'p'
  1366  007FD7  6C                 	db	108	;'l'
  1367  007FD8  61                 	db	97	;'a'
  1368  007FD9  79                 	db	121	;'y'
  1369  007FDA  20                 	db	32
  1370  007FDB  65                 	db	101	;'e'
  1371  007FDC  6D                 	db	109	;'m'
  1372  007FDD  20                 	db	32
  1373  007FDE  74                 	db	116	;'t'
  1374  007FDF  65                 	db	101	;'e'
  1375  007FE0  73                 	db	115	;'s'
  1376  007FE1  74                 	db	116	;'t'
  1377  007FE2  65                 	db	101	;'e'
  1378  007FE3  00                 	db	0
  1379  007FE4                     STR_9:
  1380  007FE4  52                 	db	82	;'R'
  1381  007FE5  65                 	db	101	;'e'
  1382  007FE6  6C                 	db	108	;'l'
  1383  007FE7  61                 	db	97	;'a'
  1384  007FE8  79                 	db	121	;'y'
  1385  007FE9  20                 	db	32
  1386  007FEA  25                 	db	37
  1387  007FEB  64                 	db	100	;'d'
  1388  007FEC  20                 	db	32
  1389  007FED  4F                 	db	79	;'O'
  1390  007FEE  4E                 	db	78	;'N'
  1391  007FEF  20                 	db	32
  1392  007FF0  00                 	db	0
  1393  007FF1                     STR_10:
  1394  007FF1  52                 	db	82	;'R'
  1395  007FF2  65                 	db	101	;'e'
  1396  007FF3  6C                 	db	108	;'l'
  1397  007FF4  61                 	db	97	;'a'
  1398  007FF5  79                 	db	121	;'y'
  1399  007FF6  20                 	db	32
  1400  007FF7  25                 	db	37
  1401  007FF8  64                 	db	100	;'d'
  1402  007FF9  20                 	db	32
  1403  007FFA  4F                 	db	79	;'O'
  1404  007FFB  46                 	db	70	;'F'
  1405  007FFC  46                 	db	70	;'F'
  1406  007FFD  00                 	db	0
  1407  007FFE  00                 	db	0	; dummy byte at the end
  1408  0000                     
  1409                           ; #config settings
  1410                           
  1411                           	psect	cinit
  1412  005148                     __pcinit:
  1413                           	callstack 0
  1414  005148                     start_initialization:
  1415                           	callstack 0
  1416  005148                     __initialization:
  1417                           	callstack 0
  1418                           
  1419                           ; Initialize objects allocated to BANK2 (227 bytes)
  1420                           ; load TBLPTR registers with __pidataBANK2
  1421  005148  0E4D               	movlw	low __pidataBANK2
  1422  00514A  6EF6               	movwf	tblptrl,c
  1423  00514C  0E58               	movlw	high __pidataBANK2
  1424  00514E  6EF7               	movwf	tblptrh,c
  1425  005150  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1426  005152  6EF8               	movwf	tblptru,c
  1427  005154  EE02  F000         	lfsr	0,__pdataBANK2
  1428  005158  EE10 F0E3          	lfsr	1,227
  1429  00515C                     copy_data0:
  1430  00515C  0009               	tblrd		*+
  1431  00515E  CFF5 FFEE          	movff	tablat,postinc0
  1432  005162  50E5               	movf	postdec1,w,c
  1433  005164  50E1               	movf	fsr1l,w,c
  1434  005166  E1FA               	bnz	copy_data0
  1435                           
  1436                           ; Initialize objects allocated to BANK1 (54 bytes)
  1437                           ; load TBLPTR registers with __pidataBANK1
  1438  005168  0E7E               	movlw	low __pidataBANK1
  1439  00516A  6EF6               	movwf	tblptrl,c
  1440  00516C  0E4C               	movlw	high __pidataBANK1
  1441  00516E  6EF7               	movwf	tblptrh,c
  1442  005170  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1443  005172  6EF8               	movwf	tblptru,c
  1444  005174  EE01  F0A4         	lfsr	0,__pdataBANK1
  1445  005178  EE10 F036          	lfsr	1,54
  1446  00517C                     copy_data1:
  1447  00517C  0009               	tblrd		*+
  1448  00517E  CFF5 FFEE          	movff	tablat,postinc0
  1449  005182  50E5               	movf	postdec1,w,c
  1450  005184  50E1               	movf	fsr1l,w,c
  1451  005186  E1FA               	bnz	copy_data1
  1452                           
  1453                           ; Initialize objects allocated to BANK0 (5 bytes)
  1454                           ; load TBLPTR registers with __pidataBANK0
  1455  005188  0E59               	movlw	low __pidataBANK0
  1456  00518A  6EF6               	movwf	tblptrl,c
  1457  00518C  0E4B               	movlw	high __pidataBANK0
  1458  00518E  6EF7               	movwf	tblptrh,c
  1459  005190  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1460  005192  6EF8               	movwf	tblptru,c
  1461  005194  EE00  F0E5         	lfsr	0,__pdataBANK0
  1462  005198  EE10 F005          	lfsr	1,5
  1463  00519C                     copy_data2:
  1464  00519C  0009               	tblrd		*+
  1465  00519E  CFF5 FFEE          	movff	tablat,postinc0
  1466  0051A2  50E5               	movf	postdec1,w,c
  1467  0051A4  50E1               	movf	fsr1l,w,c
  1468  0051A6  E1FA               	bnz	copy_data2
  1469                           
  1470                           ; Clear objects allocated to BANK1 (32 bytes)
  1471  0051A8  EE01  F0DA         	lfsr	0,__pbssBANK1
  1472  0051AC  0E20               	movlw	32
  1473  0051AE                     clear_0:
  1474  0051AE  6AEE               	clrf	postinc0,c
  1475  0051B0  06E8               	decf	wreg,f,c
  1476  0051B2  E1FD               	bnz	clear_0
  1477                           
  1478                           ; Clear objects allocated to BANK0 (8 bytes)
  1479  0051B4  EE00  F0DD         	lfsr	0,__pbssBANK0
  1480  0051B8  0E08               	movlw	8
  1481  0051BA                     clear_1:
  1482  0051BA  6AEE               	clrf	postinc0,c
  1483  0051BC  06E8               	decf	wreg,f,c
  1484  0051BE  E1FD               	bnz	clear_1
  1485  0051C0                     end_of_initialization:
  1486                           	callstack 0
  1487  0051C0                     __end_of__initialization:
  1488                           	callstack 0
  1489  0051C0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1490  0051C2  6EF8               	movwf	tblptru,c
  1491  0051C4  0100               	movlb	0
  1492  0051C6  EF47  F039         	goto	_main	;jump to C main() function
  1493                           
  1494                           	psect	bssBANK0
  1495  0000DD                     __pbssBANK0:
  1496                           	callstack 0
  1497  0000DD                     _nout:
  1498                           	callstack 0
  1499  0000DD                     	ds	2
  1500  0000DF                     _width:
  1501                           	callstack 0
  1502  0000DF                     	ds	2
  1503  0000E1                     _prec:
  1504                           	callstack 0
  1505  0000E1                     	ds	2
  1506  0000E3                     _flags:
  1507                           	callstack 0
  1508  0000E3                     	ds	2
  1509                           
  1510                           	psect	dataBANK0
  1511  0000E5                     __pdataBANK0:
  1512                           	callstack 0
  1513  0000E5                     testarDisplay1@F3511:
  1514                           	callstack 0
  1515  0000E5                     	ds	5
  1516                           
  1517                           	psect	bssBANK1
  1518  0001DA                     __pbssBANK1:
  1519                           	callstack 0
  1520  0001DA                     _dbuf:
  1521                           	callstack 0
  1522  0001DA                     	ds	32
  1523                           
  1524                           	psect	dataBANK1
  1525  0001A4                     __pdataBANK1:
  1526                           	callstack 0
  1527  0001A4                     miniMidi@F3559:
  1528                           	callstack 0
  1529  0001A4                     	ds	54
  1530                           
  1531                           	psect	dataBANK2
  1532  000200                     __pdataBANK2:
  1533                           	callstack 0
  1534  000200                     showSobre@F3576:
  1535                           	callstack 0
  1536  000200                     	ds	119
  1537  000277                     miniMidi@F3561:
  1538                           	callstack 0
  1539  000277                     	ds	108
  1540                           
  1541                           	psect	cstackBANK1
  1542  000100                     __pcstackBANK1:
  1543                           	callstack 0
  1544  000100                     miniMidi@tempo:
  1545                           	callstack 0
  1546                           
  1547                           ; 54 bytes @ 0x0
  1548  000100                     	ds	54
  1549  000136                     miniMidi@notas:
  1550                           	callstack 0
  1551                           
  1552                           ; 108 bytes @ 0x36
  1553  000136                     	ds	108
  1554  0001A2                     miniMidi@cont:
  1555                           	callstack 0
  1556                           
  1557                           ; 1 bytes @ 0xA2
  1558  0001A2                     	ds	1
  1559  0001A3                     miniMidi@pos:
  1560                           	callstack 0
  1561                           
  1562                           ; 1 bytes @ 0xA3
  1563  0001A3                     	ds	1
  1564                           
  1565                           	psect	cstackBANK0
  1566  000060                     __pcstackBANK0:
  1567                           	callstack 0
  1568  000060                     sprintf@ap:
  1569                           	callstack 0
  1570  000060                     showSobre@sobre:
  1571                           	callstack 0
  1572                           
  1573                           ; 119 bytes @ 0x0
  1574  000060                     	ds	2
  1575  000062                     sprintf@f:
  1576                           	callstack 0
  1577                           
  1578                           ; 6 bytes @ 0x2
  1579  000062                     	ds	6
  1580  000068                     ??_testarDisplay2:
  1581  000068                     ??_testarRelays:
  1582  000068                     ??_testarCoolerPot:
  1583  000068                     ??_testarCoolerPotUpDown:
  1584  000068                     testarBuzzerPWM@msg:
  1585                           	callstack 0
  1586                           
  1587                           ; 16 bytes @ 0x8
  1588  000068                     	ds	1
  1589  000069                     testarCoolerPot@msg:
  1590                           	callstack 0
  1591  000069                     testarCoolerPotUpDown@msg:
  1592                           	callstack 0
  1593                           
  1594                           ; 16 bytes @ 0x9
  1595  000069                     	ds	1
  1596  00006A                     testarDisplay2@sconta:
  1597                           	callstack 0
  1598  00006A                     testarRelays@msg2:
  1599                           	callstack 0
  1600                           
  1601                           ; 16 bytes @ 0xA
  1602  00006A                     	ds	14
  1603  000078                     testarBuzzerPWM@pwm:
  1604                           	callstack 0
  1605                           
  1606                           ; 1 bytes @ 0x18
  1607  000078                     	ds	1
  1608  000079                     ??_subMenuBuzzer:
  1609  000079                     testarCoolerPot@opcao:
  1610                           	callstack 0
  1611  000079                     testarCoolerPotUpDown@vaux:
  1612                           	callstack 0
  1613                           
  1614                           ; 2 bytes @ 0x19
  1615  000079                     	ds	1
  1616  00007A                     testarDisplay2@ct:
  1617                           	callstack 0
  1618  00007A                     testarRelays@msg1:
  1619                           	callstack 0
  1620                           
  1621                           ; 16 bytes @ 0x1A
  1622  00007A                     	ds	1
  1623  00007B                     testarCoolerPotUpDown@DD1:
  1624                           	callstack 0
  1625  00007B                     testarCoolerPot@vaux:
  1626                           	callstack 0
  1627  00007B                     subMenuBuzzer@vopc:
  1628                           	callstack 0
  1629                           
  1630                           ; 2 bytes @ 0x1B
  1631  00007B                     	ds	1
  1632  00007C                     testarDisplay2@unidade:
  1633                           	callstack 0
  1634  00007C                     testarCoolerPotUpDown@DD2:
  1635                           	callstack 0
  1636                           
  1637                           ; 1 bytes @ 0x1C
  1638  00007C                     	ds	1
  1639  00007D                     testarDisplay2@dezena:
  1640                           	callstack 0
  1641  00007D                     testarCoolerPot@DD1:
  1642                           	callstack 0
  1643  00007D                     testarCoolerPotUpDown@DD3:
  1644                           	callstack 0
  1645                           
  1646                           ; 1 bytes @ 0x1D
  1647  00007D                     	ds	1
  1648  00007E                     testarDisplay2@centena:
  1649                           	callstack 0
  1650  00007E                     testarCoolerPot@DD2:
  1651                           	callstack 0
  1652  00007E                     testarCoolerPotUpDown@DD4:
  1653                           	callstack 0
  1654                           
  1655                           ; 1 bytes @ 0x1E
  1656  00007E                     	ds	1
  1657  00007F                     testarDisplay2@milhar:
  1658                           	callstack 0
  1659  00007F                     testarCoolerPot@DD3:
  1660                           	callstack 0
  1661  00007F                     testarCoolerPotUpDown@t:
  1662                           	callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x1F
  1665  00007F                     	ds	1
  1666  000080                     testarCoolerPot@DD4:
  1667                           	callstack 0
  1668  000080                     testarDisplay2@aux:
  1669                           	callstack 0
  1670                           
  1671                           ; 2 bytes @ 0x20
  1672  000080                     	ds	1
  1673  000081                     testarCoolerPot@pot:
  1674                           	callstack 0
  1675  000081                     testarCoolerPotUpDown@vlrUpDown:
  1676                           	callstack 0
  1677                           
  1678                           ; 2 bytes @ 0x21
  1679  000081                     	ds	1
  1680  000082                     testarDisplay2@conta:
  1681                           	callstack 0
  1682  000082                     testarCoolerPot@t:
  1683                           	callstack 0
  1684                           
  1685                           ; 2 bytes @ 0x22
  1686  000082                     	ds	2
  1687  000084                     ??_subMenuDisplay7Seg:
  1688  000084                     testarCoolerPot@vTemp:
  1689                           	callstack 0
  1690                           
  1691                           ; 2 bytes @ 0x24
  1692  000084                     	ds	2
  1693  000086                     ??_subMenuCooler:
  1694  000086                     subMenuDisplay7Seg@vopc:
  1695                           	callstack 0
  1696                           
  1697                           ; 2 bytes @ 0x26
  1698  000086                     	ds	2
  1699  000088                     subMenuCooler@vopc:
  1700                           	callstack 0
  1701                           
  1702                           ; 2 bytes @ 0x28
  1703  000088                     	ds	2
  1704  00008A                     testarRelays@relay:
  1705                           	callstack 0
  1706                           
  1707                           ; 1 bytes @ 0x2A
  1708  00008A                     	ds	1
  1709  00008B                     ??_subMenuRelays:
  1710                           
  1711                           ; 1 bytes @ 0x2B
  1712  00008B                     	ds	2
  1713  00008D                     subMenuRelays@vopc:
  1714                           	callstack 0
  1715                           
  1716                           ; 2 bytes @ 0x2D
  1717  00008D                     	ds	74
  1718  0000D7                     showSobre@idx:
  1719                           	callstack 0
  1720                           
  1721                           ; 2 bytes @ 0x77
  1722  0000D7                     	ds	2
  1723  0000D9                     ??_main:
  1724                           
  1725                           ; 1 bytes @ 0x79
  1726  0000D9                     	ds	2
  1727  0000DB                     main@opcao:
  1728                           	callstack 0
  1729                           
  1730                           ; 2 bytes @ 0x7B
  1731  0000DB                     	ds	2
  1732                           
  1733                           	psect	cstackCOMRAM
  1734  000001                     __pcstackCOMRAM:
  1735                           	callstack 0
  1736  000001                     ??_ConfiguraLCD4:
  1737  000001                     ??_EscreveLCD4:
  1738  000001                     ?_strlen:
  1739                           	callstack 0
  1740  000001                     ?_capturaUpDown:
  1741                           	callstack 0
  1742  000001                     ?___wmul:
  1743                           	callstack 0
  1744  000001                     ?___awdiv:
  1745                           	callstack 0
  1746  000001                     ?___awmod:
  1747                           	callstack 0
  1748  000001                     ?___lwdiv:
  1749                           	callstack 0
  1750  000001                     ?___lwmod:
  1751                           	callstack 0
  1752  000001                     ?___aldiv:
  1753                           	callstack 0
  1754  000001                     ?___xxtofl:
  1755                           	callstack 0
  1756  000001                     ?___aodiv:
  1757                           	callstack 0
  1758  000001                     ?___aomod:
  1759                           	callstack 0
  1760  000001                     Escreve7Seg@DADO:
  1761                           	callstack 0
  1762  000001                     resetaTimer@tempo:
  1763                           	callstack 0
  1764  000001                     capturaUpDown@opt:
  1765                           	callstack 0
  1766  000001                     Delay_ms@milisegundos:
  1767                           	callstack 0
  1768  000001                     ___wmul@multiplier:
  1769                           	callstack 0
  1770  000001                     ___awdiv@dividend:
  1771                           	callstack 0
  1772  000001                     ___awmod@dividend:
  1773                           	callstack 0
  1774  000001                     ___lwdiv@dividend:
  1775                           	callstack 0
  1776  000001                     ___lwmod@dividend:
  1777                           	callstack 0
  1778  000001                     fputc@c:
  1779                           	callstack 0
  1780  000001                     strlen@s:
  1781                           	callstack 0
  1782  000001                     ___aldiv@dividend:
  1783                           	callstack 0
  1784  000001                     ___xxtofl@val:
  1785                           	callstack 0
  1786  000001                     ___aodiv@dividend:
  1787                           	callstack 0
  1788  000001                     ___aomod@dividend:
  1789                           	callstack 0
  1790                           
  1791                           ; 8 bytes @ 0x0
  1792  000001                     	ds	1
  1793  000002                     ConfiguraLCD4@INST:
  1794                           	callstack 0
  1795  000002                     EscreveLCD4@DADO:
  1796                           	callstack 0
  1797  000002                     Escreve7Seg@PONTO:
  1798                           	callstack 0
  1799                           
  1800                           ; 1 bytes @ 0x1
  1801  000002                     	ds	1
  1802  000003                     ??_Escreve7Seg:
  1803  000003                     ??_Delay_ms:
  1804  000003                     ??_InicializaLCD4:
  1805  000003                     resetaTimer@ciclos:
  1806                           	callstack 0
  1807  000003                     ___wmul@multiplicand:
  1808                           	callstack 0
  1809  000003                     ___awdiv@divisor:
  1810                           	callstack 0
  1811  000003                     ___awmod@divisor:
  1812                           	callstack 0
  1813  000003                     ___lwdiv@divisor:
  1814                           	callstack 0
  1815  000003                     ___lwmod@divisor:
  1816                           	callstack 0
  1817  000003                     fputc@fp:
  1818                           	callstack 0
  1819  000003                     strlen@a:
  1820                           	callstack 0
  1821                           
  1822                           ; 2 bytes @ 0x2
  1823  000003                     	ds	1
  1824  000004                     
  1825                           ; 1 bytes @ 0x3
  1826  000004                     	ds	1
  1827  000005                     ??_fputc:
  1828  000005                     ??___xxtofl:
  1829  000005                     Escreve7Seg@DISPLAY:
  1830                           	callstack 0
  1831  000005                     ___awdiv@counter:
  1832                           	callstack 0
  1833  000005                     ___awmod@counter:
  1834                           	callstack 0
  1835  000005                     ___lwmod@counter:
  1836                           	callstack 0
  1837  000005                     ___wmul@product:
  1838                           	callstack 0
  1839  000005                     ___lwdiv@quotient:
  1840                           	callstack 0
  1841  000005                     ___aldiv@divisor:
  1842                           	callstack 0
  1843                           
  1844                           ; 4 bytes @ 0x4
  1845  000005                     	ds	1
  1846  000006                     ___awdiv@sign:
  1847                           	callstack 0
  1848  000006                     ___awmod@sign:
  1849                           	callstack 0
  1850                           
  1851                           ; 1 bytes @ 0x5
  1852  000006                     	ds	1
  1853  000007                     ___lwdiv@counter:
  1854                           	callstack 0
  1855  000007                     EscreveLinhaLCD4@FRASE:
  1856                           	callstack 0
  1857  000007                     ___awdiv@quotient:
  1858                           	callstack 0
  1859                           
  1860                           ; 2 bytes @ 0x6
  1861  000007                     	ds	1
  1862  000008                     ??_setaPWM1:
  1863  000008                     ??_setaPWM2:
  1864                           
  1865                           ; 1 bytes @ 0x7
  1866  000008                     	ds	1
  1867  000009                     EscreveLinhaLCD4@LINHA:
  1868                           	callstack 0
  1869  000009                     ___aldiv@counter:
  1870                           	callstack 0
  1871  000009                     ___xxtofl@sign:
  1872                           	callstack 0
  1873  000009                     ___aodiv@divisor:
  1874                           	callstack 0
  1875  000009                     ___aomod@divisor:
  1876                           	callstack 0
  1877                           
  1878                           ; 8 bytes @ 0x8
  1879  000009                     	ds	1
  1880  00000A                     ??_testarDisplay1:
  1881  00000A                     ??_testarLCD:
  1882  00000A                     setaPWM1@porcento:
  1883                           	callstack 0
  1884  00000A                     setaPWM2@porcento:
  1885                           	callstack 0
  1886  00000A                     ___aldiv@sign:
  1887                           	callstack 0
  1888  00000A                     ___xxtofl@exp:
  1889                           	callstack 0
  1890  00000A                     fputs@s:
  1891                           	callstack 0
  1892                           
  1893                           ; 2 bytes @ 0x9
  1894  00000A                     	ds	1
  1895  00000B                     setaPWM1@val:
  1896                           	callstack 0
  1897  00000B                     setaPWM2@val:
  1898                           	callstack 0
  1899  00000B                     ___aldiv@quotient:
  1900                           	callstack 0
  1901  00000B                     ___xxtofl@arg:
  1902                           	callstack 0
  1903                           
  1904                           ; 4 bytes @ 0xA
  1905  00000B                     	ds	1
  1906  00000C                     testarLCD@l:
  1907                           	callstack 0
  1908  00000C                     fputs@fp:
  1909                           	callstack 0
  1910  00000C                     testarDisplay1@displays:
  1911                           	callstack 0
  1912                           
  1913                           ; 5 bytes @ 0xB
  1914  00000C                     	ds	2
  1915  00000E                     fputs@c:
  1916                           	callstack 0
  1917  00000E                     testarLCD@l_565:
  1918                           	callstack 0
  1919                           
  1920                           ; 2 bytes @ 0xD
  1921  00000E                     	ds	1
  1922  00000F                     ?___flmul:
  1923                           	callstack 0
  1924  00000F                     setaFreqPWM@freq:
  1925                           	callstack 0
  1926  00000F                     fputs@i:
  1927                           	callstack 0
  1928  00000F                     ___flmul@b:
  1929                           	callstack 0
  1930                           
  1931                           ; 4 bytes @ 0xE
  1932  00000F                     	ds	1
  1933  000010                     ??_subMenuLCD:
  1934                           
  1935                           ; 1 bytes @ 0xF
  1936  000010                     	ds	1
  1937  000011                     ?_pad:
  1938                           	callstack 0
  1939  000011                     ___aodiv@counter:
  1940                           	callstack 0
  1941  000011                     ___aomod@counter:
  1942                           	callstack 0
  1943  000011                     pad@fp:
  1944                           	callstack 0
  1945                           
  1946                           ; 2 bytes @ 0x10
  1947  000011                     	ds	1
  1948  000012                     ___aodiv@sign:
  1949                           	callstack 0
  1950  000012                     ___aomod@sign:
  1951                           	callstack 0
  1952  000012                     subMenuLCD@vopc:
  1953                           	callstack 0
  1954                           
  1955                           ; 2 bytes @ 0x11
  1956  000012                     	ds	1
  1957  000013                     ?_abs:
  1958                           	callstack 0
  1959  000013                     pad@buf:
  1960                           	callstack 0
  1961  000013                     abs@a:
  1962                           	callstack 0
  1963  000013                     ___flmul@a:
  1964                           	callstack 0
  1965  000013                     ___aodiv@quotient:
  1966                           	callstack 0
  1967                           
  1968                           ; 8 bytes @ 0x12
  1969  000013                     	ds	2
  1970  000015                     ??_abs:
  1971  000015                     pad@p:
  1972                           	callstack 0
  1973                           
  1974                           ; 2 bytes @ 0x14
  1975  000015                     	ds	2
  1976  000017                     ??___flmul:
  1977  000017                     ??_pad:
  1978                           
  1979                           ; 1 bytes @ 0x16
  1980  000017                     	ds	1
  1981  000018                     pad@i:
  1982                           	callstack 0
  1983                           
  1984                           ; 2 bytes @ 0x17
  1985  000018                     	ds	2
  1986  00001A                     pad@w:
  1987                           	callstack 0
  1988                           
  1989                           ; 2 bytes @ 0x19
  1990  00001A                     	ds	1
  1991  00001B                     ___flmul@sign:
  1992                           	callstack 0
  1993                           
  1994                           ; 1 bytes @ 0x1A
  1995  00001B                     	ds	1
  1996  00001C                     ?_dtoa:
  1997                           	callstack 0
  1998  00001C                     dtoa@fp:
  1999                           	callstack 0
  2000  00001C                     ___flmul@grs:
  2001                           	callstack 0
  2002                           
  2003                           ; 4 bytes @ 0x1B
  2004  00001C                     	ds	2
  2005  00001E                     dtoa@d:
  2006                           	callstack 0
  2007                           
  2008                           ; 8 bytes @ 0x1D
  2009  00001E                     	ds	2
  2010  000020                     ___flmul@aexp:
  2011                           	callstack 0
  2012                           
  2013                           ; 1 bytes @ 0x1F
  2014  000020                     	ds	1
  2015  000021                     ___flmul@bexp:
  2016                           	callstack 0
  2017                           
  2018                           ; 1 bytes @ 0x20
  2019  000021                     	ds	1
  2020  000022                     ___flmul@prod:
  2021                           	callstack 0
  2022                           
  2023                           ; 4 bytes @ 0x21
  2024  000022                     	ds	4
  2025  000026                     ??_dtoa:
  2026  000026                     ___flmul@temp:
  2027                           	callstack 0
  2028                           
  2029                           ; 2 bytes @ 0x25
  2030  000026                     	ds	2
  2031  000028                     ?___fltol:
  2032                           	callstack 0
  2033  000028                     ___fltol@f1:
  2034                           	callstack 0
  2035                           
  2036                           ; 4 bytes @ 0x27
  2037  000028                     	ds	4
  2038  00002C                     ??___fltol:
  2039                           
  2040                           ; 1 bytes @ 0x2B
  2041  00002C                     	ds	2
  2042  00002E                     _dtoa$1242:
  2043                           	callstack 0
  2044                           
  2045                           ; 2 bytes @ 0x2D
  2046  00002E                     	ds	2
  2047  000030                     ___fltol@sign1:
  2048                           	callstack 0
  2049  000030                     dtoa@p:
  2050                           	callstack 0
  2051                           
  2052                           ; 2 bytes @ 0x2F
  2053  000030                     	ds	1
  2054  000031                     ___fltol@exp1:
  2055                           	callstack 0
  2056                           
  2057                           ; 1 bytes @ 0x30
  2058  000031                     	ds	1
  2059  000032                     dtoa@w:
  2060                           	callstack 0
  2061                           
  2062                           ; 2 bytes @ 0x31
  2063  000032                     	ds	2
  2064  000034                     dtoa@s:
  2065                           	callstack 0
  2066                           
  2067                           ; 2 bytes @ 0x33
  2068  000034                     	ds	2
  2069  000036                     dtoa@n:
  2070                           	callstack 0
  2071                           
  2072                           ; 8 bytes @ 0x35
  2073  000036                     	ds	8
  2074  00003E                     dtoa@i:
  2075                           	callstack 0
  2076                           
  2077                           ; 2 bytes @ 0x3D
  2078  00003E                     	ds	2
  2079  000040                     ?_vfpfcnvrt:
  2080                           	callstack 0
  2081  000040                     vfpfcnvrt@fp:
  2082                           	callstack 0
  2083                           
  2084                           ; 2 bytes @ 0x3F
  2085  000040                     	ds	2
  2086  000042                     vfpfcnvrt@fmt:
  2087                           	callstack 0
  2088                           
  2089                           ; 2 bytes @ 0x41
  2090  000042                     	ds	2
  2091  000044                     vfpfcnvrt@ap:
  2092                           	callstack 0
  2093                           
  2094                           ; 2 bytes @ 0x43
  2095  000044                     	ds	2
  2096  000046                     ??_vfpfcnvrt:
  2097                           
  2098                           ; 1 bytes @ 0x45
  2099  000046                     	ds	2
  2100  000048                     vfpfcnvrt@ll:
  2101                           	callstack 0
  2102                           
  2103                           ; 8 bytes @ 0x47
  2104  000048                     	ds	8
  2105  000050                     vfpfcnvrt@done:
  2106                           	callstack 0
  2107                           
  2108                           ; 2 bytes @ 0x4F
  2109  000050                     	ds	2
  2110  000052                     ?_vfprintf:
  2111                           	callstack 0
  2112  000052                     vfprintf@fp:
  2113                           	callstack 0
  2114                           
  2115                           ; 2 bytes @ 0x51
  2116  000052                     	ds	2
  2117  000054                     vfprintf@fmt:
  2118                           	callstack 0
  2119                           
  2120                           ; 2 bytes @ 0x53
  2121  000054                     	ds	2
  2122  000056                     vfprintf@ap:
  2123                           	callstack 0
  2124                           
  2125                           ; 2 bytes @ 0x55
  2126  000056                     	ds	2
  2127  000058                     vfprintf@cfmt:
  2128                           	callstack 0
  2129                           
  2130                           ; 2 bytes @ 0x57
  2131  000058                     	ds	2
  2132  00005A                     ?_sprintf:
  2133                           	callstack 0
  2134  00005A                     sprintf@s:
  2135                           	callstack 0
  2136                           
  2137                           ; 2 bytes @ 0x59
  2138  00005A                     	ds	2
  2139  00005C                     sprintf@fmt:
  2140                           	callstack 0
  2141                           
  2142                           ; 2 bytes @ 0x5B
  2143  00005C                     	ds	4
  2144  000060                     
  2145                           ; 1 bytes @ 0x5F
  2146 ;;
  2147 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2148 ;;
  2149 ;; *************** function _main *****************
  2150 ;; Defined at:
  2151 ;;		line 780 in file "MyIHM_1A.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  opcao           2  123[BANK0 ] short 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2165 ;;      Params:         0       0       0       0       0       0       0       0       0
  2166 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2167 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2168 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2169 ;;Total ram usage:        4 bytes
  2170 ;; Hardware stack levels required when called: 10
  2171 ;; This function calls:
  2172 ;;		_Delay_ms
  2173 ;;		_EscreveLinhaLCD4
  2174 ;;		_InicializaPIC
  2175 ;;		_showSobre
  2176 ;;		_subMenuBuzzer
  2177 ;;		_subMenuCooler
  2178 ;;		_subMenuDisplay7Seg
  2179 ;;		_subMenuLCD
  2180 ;;		_subMenuRelays
  2181 ;; This function is called by:
  2182 ;;		Startup code after reset
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text0
  2187  00728E                     __ptext0:
  2188                           	callstack 0
  2189  00728E                     _main:
  2190                           	callstack 21
  2191  00728E                     
  2192                           ;MyIHM_1A.c: 781:     InicializaPIC();
  2193  00728E  ECC6  F025         	call	_InicializaPIC	;wreg free
  2194  007292                     
  2195                           ;MyIHM_1A.c: 783:     short opcao =1 ;
  2196  007292  0E00               	movlw	0
  2197  007294  0100               	movlb	0	; () banked
  2198  007296  6FDC               	movwf	(main@opcao+1)& (0+255),b
  2199  007298  0E01               	movlw	1
  2200  00729A  6FDB               	movwf	main@opcao& (0+255),b
  2201  00729C                     
  2202                           ; BSR set to: 0
  2203                           ;MyIHM_1A.c: 785:     EscreveLinhaLCD4(1, "   ELETRONICA   ");
  2204  00729C  0EA1               	movlw	low STR_58
  2205  00729E  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2206  0072A0  0E7E               	movlw	high STR_58
  2207  0072A2  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2208  0072A4  0E01               	movlw	1
  2209  0072A6  ECE5  F028         	call	_EscreveLinhaLCD4
  2210  0072AA                     
  2211                           ;MyIHM_1A.c: 786:     EscreveLinhaLCD4(2, "   IFRS         ");
  2212  0072AA  0E3C               	movlw	low STR_59
  2213  0072AC  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2214  0072AE  0E7D               	movlw	high STR_59
  2215  0072B0  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2216  0072B2  0E02               	movlw	2
  2217  0072B4  ECE5  F028         	call	_EscreveLinhaLCD4
  2218  0072B8                     
  2219                           ;MyIHM_1A.c: 787:     Delay_ms(700);
  2220  0072B8  0E02               	movlw	2
  2221  0072BA  6E02               	movwf	(Delay_ms@milisegundos+1)^0,c
  2222  0072BC  0EBC               	movlw	188
  2223  0072BE  6E01               	movwf	Delay_ms@milisegundos^0,c
  2224  0072C0  EC0E  F026         	call	_Delay_ms	;wreg free
  2225  0072C4                     
  2226                           ;MyIHM_1A.c: 789:     EscreveLinhaLCD4(1, " BEM VINDO AO    ");
  2227  0072C4  0ED4               	movlw	low STR_60
  2228  0072C6  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2229  0072C8  0E7C               	movlw	high STR_60
  2230  0072CA  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2231  0072CC  0E01               	movlw	1
  2232  0072CE  ECE5  F028         	call	_EscreveLinhaLCD4
  2233  0072D2                     
  2234                           ;MyIHM_1A.c: 790:     EscreveLinhaLCD4(2, " SISTEMA         ");
  2235  0072D2  0E7A               	movlw	low STR_61
  2236  0072D4  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2237  0072D6  0E7C               	movlw	high STR_61
  2238  0072D8  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2239  0072DA  0E02               	movlw	2
  2240  0072DC  ECE5  F028         	call	_EscreveLinhaLCD4
  2241  0072E0                     
  2242                           ;MyIHM_1A.c: 791:     Delay_ms(700);
  2243  0072E0  0E02               	movlw	2
  2244  0072E2  6E02               	movwf	(Delay_ms@milisegundos+1)^0,c
  2245  0072E4  0EBC               	movlw	188
  2246  0072E6  6E01               	movwf	Delay_ms@milisegundos^0,c
  2247  0072E8  EC0E  F026         	call	_Delay_ms	;wreg free
  2248  0072EC                     l4500:
  2249                           
  2250                           ;MyIHM_1A.c: 795:         if(PORTBbits.RB0 == 0 ){
  2251  0072EC  B081               	btfsc	129,0,c	;volatile
  2252  0072EE  EF7B  F039         	goto	u4111
  2253  0072F2  EF7D  F039         	goto	u4110
  2254  0072F6                     u4111:
  2255  0072F6  EF89  F039         	goto	l388
  2256  0072FA                     u4110:
  2257  0072FA                     
  2258                           ;MyIHM_1A.c: 796:             opcao++;
  2259  0072FA  0100               	movlb	0	; () banked
  2260  0072FC  4BDB               	infsnz	main@opcao& (0+255),f,b
  2261  0072FE  2BDC               	incf	(main@opcao+1)& (0+255),f,b
  2262  007300                     l389:
  2263  007300  A081               	btfss	129,0,c	;volatile
  2264  007302  EF85  F039         	goto	u4121
  2265  007306  EF87  F039         	goto	u4120
  2266  00730A                     u4121:
  2267  00730A  EF80  F039         	goto	l389
  2268  00730E                     u4120:
  2269  00730E  EF69  F03A         	goto	l4560
  2270  007312                     l388:
  2271  007312  B481               	btfsc	129,2,c	;volatile
  2272  007314  EF8E  F039         	goto	u4131
  2273  007318  EF90  F039         	goto	u4130
  2274  00731C                     u4131:
  2275  00731C  EF69  F03A         	goto	l4560
  2276  007320                     u4130:
  2277  007320                     
  2278                           ;MyIHM_1A.c: 799:             opcao--;
  2279  007320  0100               	movlb	0	; () banked
  2280  007322  07DB               	decf	main@opcao& (0+255),f,b
  2281  007324  A0D8               	btfss	status,0,c
  2282  007326  07DC               	decf	(main@opcao+1)& (0+255),f,b
  2283  007328                     l394:
  2284  007328  A481               	btfss	129,2,c	;volatile
  2285  00732A  EF99  F039         	goto	u4141
  2286  00732E  EF9B  F039         	goto	u4140
  2287  007332                     u4141:
  2288  007332  EF94  F039         	goto	l394
  2289  007336                     u4140:
  2290  007336  EF69  F03A         	goto	l4560
  2291  00733A                     l4506:
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;MyIHM_1A.c: 805:                 EscreveLinhaLCD4(1, ">Display 7 Seg  ");
  2295  00733A  0E4B               	movlw	low STR_62
  2296  00733C  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2297  00733E  0E7F               	movlw	high STR_62
  2298  007340  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2299  007342  0E01               	movlw	1
  2300  007344  ECE5  F028         	call	_EscreveLinhaLCD4
  2301                           
  2302                           ;MyIHM_1A.c: 806:                 EscreveLinhaLCD4(2, " LCD            ");
  2303  007348  0EF8               	movlw	low STR_63
  2304  00734A  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2305  00734C  0E7C               	movlw	high STR_63
  2306  00734E  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2307  007350  0E02               	movlw	2
  2308  007352  ECE5  F028         	call	_EscreveLinhaLCD4
  2309  007356                     
  2310                           ;MyIHM_1A.c: 807:                 if (PORTBbits.RB1==0 ){
  2311  007356  B281               	btfsc	129,1,c	;volatile
  2312  007358  EFB0  F039         	goto	u4151
  2313  00735C  EFB2  F039         	goto	u4150
  2314  007360                     u4151:
  2315  007360  EF76  F039         	goto	l4500
  2316  007364                     u4150:
  2317  007364                     l400:
  2318  007364  A281               	btfss	129,1,c	;volatile
  2319  007366  EFB7  F039         	goto	u4161
  2320  00736A  EFB9  F039         	goto	u4160
  2321  00736E                     u4161:
  2322  00736E  EFB2  F039         	goto	l400
  2323  007372                     u4160:
  2324  007372                     
  2325                           ;MyIHM_1A.c: 809:                     subMenuDisplay7Seg();
  2326  007372  EC26  F02E         	call	_subMenuDisplay7Seg	;wreg free
  2327  007376  EF76  F039         	goto	l4500
  2328  00737A                     l4514:
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;MyIHM_1A.c: 814:                 EscreveLinhaLCD4(1, ">LCD            ");
  2332  00737A  0E09               	movlw	low STR_64
  2333  00737C  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2334  00737E  0E7D               	movlw	high STR_64
  2335  007380  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2336  007382  0E01               	movlw	1
  2337  007384  ECE5  F028         	call	_EscreveLinhaLCD4
  2338                           
  2339                           ;MyIHM_1A.c: 815:                 EscreveLinhaLCD4(2, " Buzzer         ");
  2340  007388  0E91               	movlw	low STR_65
  2341  00738A  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2342  00738C  0E7D               	movlw	high STR_65
  2343  00738E  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2344  007390  0E02               	movlw	2
  2345  007392  ECE5  F028         	call	_EscreveLinhaLCD4
  2346  007396                     
  2347                           ;MyIHM_1A.c: 816:                 if (PORTBbits.RB1==0 ){
  2348  007396  B281               	btfsc	129,1,c	;volatile
  2349  007398  EFD0  F039         	goto	u4171
  2350  00739C  EFD2  F039         	goto	u4170
  2351  0073A0                     u4171:
  2352  0073A0  EF76  F039         	goto	l4500
  2353  0073A4                     u4170:
  2354  0073A4                     l406:
  2355  0073A4  A281               	btfss	129,1,c	;volatile
  2356  0073A6  EFD7  F039         	goto	u4181
  2357  0073AA  EFD9  F039         	goto	u4180
  2358  0073AE                     u4181:
  2359  0073AE  EFD2  F039         	goto	l406
  2360  0073B2                     u4180:
  2361  0073B2                     
  2362                           ;MyIHM_1A.c: 818:                     subMenuLCD();
  2363  0073B2  EC51  F02B         	call	_subMenuLCD	;wreg free
  2364  0073B6  EF76  F039         	goto	l4500
  2365  0073BA                     l4522:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;MyIHM_1A.c: 823:                 EscreveLinhaLCD4(1, ">Buzzer         ");
  2369  0073BA  0EA2               	movlw	low STR_66
  2370  0073BC  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2371  0073BE  0E7D               	movlw	high STR_66
  2372  0073C0  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2373  0073C2  0E01               	movlw	1
  2374  0073C4  ECE5  F028         	call	_EscreveLinhaLCD4
  2375                           
  2376                           ;MyIHM_1A.c: 824:                 EscreveLinhaLCD4(2, " Cooler         ");
  2377  0073C8  0E6F               	movlw	low STR_67
  2378  0073CA  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2379  0073CC  0E7D               	movlw	high STR_67
  2380  0073CE  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2381  0073D0  0E02               	movlw	2
  2382  0073D2  ECE5  F028         	call	_EscreveLinhaLCD4
  2383  0073D6                     
  2384                           ;MyIHM_1A.c: 825:                 if (PORTBbits.RB1==0 ){
  2385  0073D6  B281               	btfsc	129,1,c	;volatile
  2386  0073D8  EFF0  F039         	goto	u4191
  2387  0073DC  EFF2  F039         	goto	u4190
  2388  0073E0                     u4191:
  2389  0073E0  EF76  F039         	goto	l4500
  2390  0073E4                     u4190:
  2391  0073E4                     l411:
  2392  0073E4  A281               	btfss	129,1,c	;volatile
  2393  0073E6  EFF7  F039         	goto	u4201
  2394  0073EA  EFF9  F039         	goto	u4200
  2395  0073EE                     u4201:
  2396  0073EE  EFF2  F039         	goto	l411
  2397  0073F2                     u4200:
  2398  0073F2                     
  2399                           ;MyIHM_1A.c: 827:                     subMenuBuzzer();
  2400  0073F2  ECB8  F034         	call	_subMenuBuzzer	;wreg free
  2401  0073F6  EF76  F039         	goto	l4500
  2402  0073FA                     l4530:
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;MyIHM_1A.c: 831:                 EscreveLinhaLCD4(1, ">Cooler         ");
  2406  0073FA  0E80               	movlw	low STR_68
  2407  0073FC  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2408  0073FE  0E7D               	movlw	high STR_68
  2409  007400  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2410  007402  0E01               	movlw	1
  2411  007404  ECE5  F028         	call	_EscreveLinhaLCD4
  2412                           
  2413                           ;MyIHM_1A.c: 832:                 EscreveLinhaLCD4(2, " Relays         ");
  2414  007408  0EB3               	movlw	low STR_69
  2415  00740A  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2416  00740C  0E7D               	movlw	high STR_69
  2417  00740E  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2418  007410  0E02               	movlw	2
  2419  007412  ECE5  F028         	call	_EscreveLinhaLCD4
  2420  007416                     
  2421                           ;MyIHM_1A.c: 833:                  if (PORTBbits.RB1==0 ){
  2422  007416  B281               	btfsc	129,1,c	;volatile
  2423  007418  EF10  F03A         	goto	u4211
  2424  00741C  EF12  F03A         	goto	u4210
  2425  007420                     u4211:
  2426  007420  EF76  F039         	goto	l4500
  2427  007424                     u4210:
  2428  007424                     l416:
  2429  007424  A281               	btfss	129,1,c	;volatile
  2430  007426  EF17  F03A         	goto	u4221
  2431  00742A  EF19  F03A         	goto	u4220
  2432  00742E                     u4221:
  2433  00742E  EF12  F03A         	goto	l416
  2434  007432                     u4220:
  2435  007432                     
  2436                           ;MyIHM_1A.c: 835:                     subMenuCooler();
  2437  007432  EC3E  F02F         	call	_subMenuCooler	;wreg free
  2438  007436  EF76  F039         	goto	l4500
  2439  00743A                     l4538:
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;MyIHM_1A.c: 839:                 EscreveLinhaLCD4(1, ">Relays         ");
  2443  00743A  0EC4               	movlw	low STR_70
  2444  00743C  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2445  00743E  0E7D               	movlw	high STR_70
  2446  007440  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2447  007442  0E01               	movlw	1
  2448  007444  ECE5  F028         	call	_EscreveLinhaLCD4
  2449                           
  2450                           ;MyIHM_1A.c: 840:                 EscreveLinhaLCD4(2, " Sobre          ");
  2451  007448  0E1A               	movlw	low STR_71
  2452  00744A  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2453  00744C  0E7D               	movlw	high STR_71
  2454  00744E  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2455  007450  0E02               	movlw	2
  2456  007452  ECE5  F028         	call	_EscreveLinhaLCD4
  2457  007456                     
  2458                           ;MyIHM_1A.c: 841:                  if (PORTBbits.RB1==0 ){
  2459  007456  B281               	btfsc	129,1,c	;volatile
  2460  007458  EF30  F03A         	goto	u4231
  2461  00745C  EF32  F03A         	goto	u4230
  2462  007460                     u4231:
  2463  007460  EF76  F039         	goto	l4500
  2464  007464                     u4230:
  2465  007464                     l421:
  2466  007464  A281               	btfss	129,1,c	;volatile
  2467  007466  EF37  F03A         	goto	u4241
  2468  00746A  EF39  F03A         	goto	u4240
  2469  00746E                     u4241:
  2470  00746E  EF32  F03A         	goto	l421
  2471  007472                     u4240:
  2472  007472                     
  2473                           ;MyIHM_1A.c: 843:                     subMenuRelays();
  2474  007472  ECB1  F02E         	call	_subMenuRelays	;wreg free
  2475  007476  EF76  F039         	goto	l4500
  2476  00747A                     l4546:
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;MyIHM_1A.c: 847:                 EscreveLinhaLCD4(1, ">Sobre          ");
  2480  00747A  0E2B               	movlw	low STR_72
  2481  00747C  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2482  00747E  0E7D               	movlw	high STR_72
  2483  007480  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2484  007482  0E01               	movlw	1
  2485  007484  ECE5  F028         	call	_EscreveLinhaLCD4
  2486                           
  2487                           ;MyIHM_1A.c: 848:                 EscreveLinhaLCD4(2, " Display 7 Seg  ");
  2488  007488  0E3A               	movlw	low STR_73
  2489  00748A  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2490  00748C  0E7F               	movlw	high STR_73
  2491  00748E  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2492  007490  0E02               	movlw	2
  2493  007492  ECE5  F028         	call	_EscreveLinhaLCD4
  2494  007496                     
  2495                           ;MyIHM_1A.c: 849:                  if (PORTBbits.RB1==0 ){
  2496  007496  B281               	btfsc	129,1,c	;volatile
  2497  007498  EF50  F03A         	goto	u4251
  2498  00749C  EF52  F03A         	goto	u4250
  2499  0074A0                     u4251:
  2500  0074A0  EF76  F039         	goto	l4500
  2501  0074A4                     u4250:
  2502  0074A4                     l426:
  2503  0074A4  A281               	btfss	129,1,c	;volatile
  2504  0074A6  EF57  F03A         	goto	u4261
  2505  0074AA  EF59  F03A         	goto	u4260
  2506  0074AE                     u4261:
  2507  0074AE  EF52  F03A         	goto	l426
  2508  0074B2                     u4260:
  2509  0074B2                     
  2510                           ;MyIHM_1A.c: 851:                    showSobre();
  2511  0074B2  ECB6  F02B         	call	_showSobre	;wreg free
  2512  0074B6  EF76  F039         	goto	l4500
  2513  0074BA                     l4554:
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;MyIHM_1A.c: 856:                 opcao = 1; break;
  2517  0074BA  0E00               	movlw	0
  2518  0074BC  6FDC               	movwf	(main@opcao+1)& (0+255),b
  2519  0074BE  0E01               	movlw	1
  2520  0074C0  6FDB               	movwf	main@opcao& (0+255),b
  2521  0074C2  EF76  F039         	goto	l4500
  2522  0074C6                     l4556:
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;MyIHM_1A.c: 859:                 opcao = 6; break;
  2526  0074C6  0E00               	movlw	0
  2527  0074C8  6FDC               	movwf	(main@opcao+1)& (0+255),b
  2528  0074CA  0E06               	movlw	6
  2529  0074CC  6FDB               	movwf	main@opcao& (0+255),b
  2530  0074CE  EF76  F039         	goto	l4500
  2531  0074D2                     l4560:
  2532  0074D2  C0DB  F0D9         	movff	main@opcao,??_main
  2533  0074D6  C0DC  F0DA         	movff	main@opcao+1,??_main+1
  2534                           
  2535                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2536                           ; Switch size 1, requested type "simple"
  2537                           ; Number of cases is 1, Range of values is 0 to 0
  2538                           ; switch strategies available:
  2539                           ; Name         Instructions Cycles
  2540                           ; simple_byte            4     3 (average)
  2541                           ;	Chosen strategy is simple_byte
  2542  0074DA  0100               	movlb	0	; () banked
  2543  0074DC  51DA               	movf	(??_main+1)& (0+255),w,b
  2544  0074DE  0A00               	xorlw	0	; case 0
  2545  0074E0  B4D8               	btfsc	status,2,c
  2546  0074E2  EF75  F03A         	goto	l4786
  2547  0074E6  EF76  F039         	goto	l4500
  2548  0074EA                     l4786:
  2549                           
  2550                           ; BSR set to: 0
  2551                           ; Switch size 1, requested type "simple"
  2552                           ; Number of cases is 8, Range of values is 0 to 7
  2553                           ; switch strategies available:
  2554                           ; Name         Instructions Cycles
  2555                           ; simple_byte           25    13 (average)
  2556                           ;	Chosen strategy is simple_byte
  2557  0074EA  51D9               	movf	??_main& (0+255),w,b
  2558  0074EC  0A00               	xorlw	0	; case 0
  2559  0074EE  B4D8               	btfsc	status,2,c
  2560  0074F0  EF63  F03A         	goto	l4556
  2561  0074F4  0A01               	xorlw	1	; case 1
  2562  0074F6  B4D8               	btfsc	status,2,c
  2563  0074F8  EF9D  F039         	goto	l4506
  2564  0074FC  0A03               	xorlw	3	; case 2
  2565  0074FE  B4D8               	btfsc	status,2,c
  2566  007500  EFBD  F039         	goto	l4514
  2567  007504  0A01               	xorlw	1	; case 3
  2568  007506  B4D8               	btfsc	status,2,c
  2569  007508  EFDD  F039         	goto	l4522
  2570  00750C  0A07               	xorlw	7	; case 4
  2571  00750E  B4D8               	btfsc	status,2,c
  2572  007510  EFFD  F039         	goto	l4530
  2573  007514  0A01               	xorlw	1	; case 5
  2574  007516  B4D8               	btfsc	status,2,c
  2575  007518  EF1D  F03A         	goto	l4538
  2576  00751C  0A03               	xorlw	3	; case 6
  2577  00751E  B4D8               	btfsc	status,2,c
  2578  007520  EF3D  F03A         	goto	l4546
  2579  007524  0A01               	xorlw	1	; case 7
  2580  007526  B4D8               	btfsc	status,2,c
  2581  007528  EF5D  F03A         	goto	l4554
  2582  00752C  EF76  F039         	goto	l4500
  2583  007530  EF00  F000         	goto	start
  2584  007534                     __end_of_main:
  2585                           	callstack 0
  2586                           
  2587 ;; *************** function _subMenuRelays *****************
  2588 ;; Defined at:
  2589 ;;		line 569 in file "MyIHM_1A.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  vopc            2   45[BANK0 ] int 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  2  257[None  ] short 
  2596 ;; Registers used:
  2597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2603 ;;      Params:         0       0       0       0       0       0       0       0       0
  2604 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2605 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2606 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2607 ;;Total ram usage:        4 bytes
  2608 ;; Hardware stack levels used: 1
  2609 ;; Hardware stack levels required when called: 9
  2610 ;; This function calls:
  2611 ;;		_EscreveLinhaLCD4
  2612 ;;		_capturaUpDown
  2613 ;;		_testarRelays
  2614 ;; This function is called by:
  2615 ;;		_main
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text1
  2620  005D62                     __ptext1:
  2621                           	callstack 0
  2622  005D62                     _subMenuRelays:
  2623                           	callstack 21
  2624  005D62                     l4302:
  2625                           
  2626                           ;MyIHM_1A.c: 570:     int vopc = 1;
  2627  005D62  0E00               	movlw	0
  2628  005D64  0100               	movlb	0	; () banked
  2629  005D66  6F8E               	movwf	(subMenuRelays@vopc+1)& (0+255),b
  2630  005D68  0E01               	movlw	1
  2631  005D6A  6F8D               	movwf	subMenuRelays@vopc& (0+255),b
  2632  005D6C                     l4304:
  2633                           
  2634                           ;MyIHM_1A.c: 572:         vopc = capturaUpDown(vopc);
  2635  005D6C  C08D  F001         	movff	subMenuRelays@vopc,capturaUpDown@opt
  2636  005D70  C08E  F002         	movff	subMenuRelays@vopc+1,capturaUpDown@opt+1
  2637  005D74  ECC4  F026         	call	_capturaUpDown	;wreg free
  2638  005D78  C001  F08D         	movff	?_capturaUpDown,subMenuRelays@vopc
  2639  005D7C  C002  F08E         	movff	?_capturaUpDown+1,subMenuRelays@vopc+1
  2640                           
  2641                           ;MyIHM_1A.c: 573:         switch(vopc){
  2642  005D80  EF22  F02F         	goto	l4330
  2643  005D84                     l4306:
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;MyIHM_1A.c: 575:                 EscreveLinhaLCD4(1, ">Relay 1        ");
  2647  005D84  0EE6               	movlw	low STR_28
  2648  005D86  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2649  005D88  0E7D               	movlw	high STR_28
  2650  005D8A  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2651  005D8C  0E01               	movlw	1
  2652  005D8E  ECE5  F028         	call	_EscreveLinhaLCD4
  2653                           
  2654                           ;MyIHM_1A.c: 576:                 EscreveLinhaLCD4(2, " Relay 2        ");
  2655  005D92  0EF7               	movlw	low STR_29
  2656  005D94  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2657  005D96  0E7D               	movlw	high STR_29
  2658  005D98  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2659  005D9A  0E02               	movlw	2
  2660  005D9C  ECE5  F028         	call	_EscreveLinhaLCD4
  2661  005DA0                     
  2662                           ;MyIHM_1A.c: 577:                 if (PORTBbits.RB1 == 0){
  2663  005DA0  B281               	btfsc	129,1,c	;volatile
  2664  005DA2  EFD5  F02E         	goto	u3761
  2665  005DA6  EFD7  F02E         	goto	u3760
  2666  005DAA                     u3761:
  2667  005DAA  EFB6  F02E         	goto	l4304
  2668  005DAE                     u3760:
  2669  005DAE                     l262:
  2670  005DAE  A281               	btfss	129,1,c	;volatile
  2671  005DB0  EFDC  F02E         	goto	u3771
  2672  005DB4  EFDE  F02E         	goto	u3770
  2673  005DB8                     u3771:
  2674  005DB8  EFD7  F02E         	goto	l262
  2675  005DBC                     u3770:
  2676  005DBC                     
  2677                           ;MyIHM_1A.c: 579:                     testarRelays(1);
  2678  005DBC  0E01               	movlw	1
  2679  005DBE  EC62  F031         	call	_testarRelays
  2680  005DC2  EFB6  F02E         	goto	l4304
  2681  005DC6                     l4314:
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;MyIHM_1A.c: 583:                  EscreveLinhaLCD4(1, ">Relay 2        ");
  2685  005DC6  0E08               	movlw	low STR_30
  2686  005DC8  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2687  005DCA  0E7E               	movlw	high STR_30
  2688  005DCC  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2689  005DCE  0E01               	movlw	1
  2690  005DD0  ECE5  F028         	call	_EscreveLinhaLCD4
  2691                           
  2692                           ;MyIHM_1A.c: 584:                  EscreveLinhaLCD4(2, " Voltar         ");
  2693  005DD4  0E4D               	movlw	low STR_25
  2694  005DD6  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2695  005DD8  0E7D               	movlw	high STR_25
  2696  005DDA  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2697  005DDC  0E02               	movlw	2
  2698  005DDE  ECE5  F028         	call	_EscreveLinhaLCD4
  2699  005DE2                     
  2700                           ;MyIHM_1A.c: 585:                   if (PORTBbits.RB1 == 0 ){
  2701  005DE2  B281               	btfsc	129,1,c	;volatile
  2702  005DE4  EFF6  F02E         	goto	u3781
  2703  005DE8  EFF8  F02E         	goto	u3780
  2704  005DEC                     u3781:
  2705  005DEC  EFB6  F02E         	goto	l4304
  2706  005DF0                     u3780:
  2707  005DF0                     l268:
  2708  005DF0  A281               	btfss	129,1,c	;volatile
  2709  005DF2  EFFD  F02E         	goto	u3791
  2710  005DF6  EFFF  F02E         	goto	u3790
  2711  005DFA                     u3791:
  2712  005DFA  EFF8  F02E         	goto	l268
  2713  005DFE                     u3790:
  2714  005DFE                     
  2715                           ;MyIHM_1A.c: 587:                       testarRelays(2);
  2716  005DFE  0E02               	movlw	2
  2717  005E00  EC62  F031         	call	_testarRelays
  2718  005E04  EFB6  F02E         	goto	l4304
  2719  005E08                     l4322:
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;MyIHM_1A.c: 591:                 EscreveLinhaLCD4(1, ">Voltar         ");
  2723  005E08  0E5E               	movlw	low STR_26
  2724  005E0A  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2725  005E0C  0E7D               	movlw	high STR_26
  2726  005E0E  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2727  005E10  0E01               	movlw	1
  2728  005E12  ECE5  F028         	call	_EscreveLinhaLCD4
  2729                           
  2730                           ;MyIHM_1A.c: 592:                 EscreveLinhaLCD4(2, "________________");
  2731  005E16  0EE7               	movlw	low (STR_57+1)
  2732  005E18  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  2733  005E1A  0E7C               	movlw	high (STR_57+1)
  2734  005E1C  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  2735  005E1E  0E02               	movlw	2
  2736  005E20  ECE5  F028         	call	_EscreveLinhaLCD4
  2737  005E24                     
  2738                           ;MyIHM_1A.c: 593:                 if (PORTBbits.RB1 == 0 ){
  2739  005E24  B281               	btfsc	129,1,c	;volatile
  2740  005E26  EF17  F02F         	goto	u3801
  2741  005E2A  EF19  F02F         	goto	u3800
  2742  005E2E                     u3801:
  2743  005E2E  EFB6  F02E         	goto	l4304
  2744  005E32                     u3800:
  2745  005E32                     l273:
  2746  005E32  A281               	btfss	129,1,c	;volatile
  2747  005E34  EF1E  F02F         	goto	u3811
  2748  005E38  EF20  F02F         	goto	u3810
  2749  005E3C                     u3811:
  2750  005E3C  EF19  F02F         	goto	l273
  2751  005E40                     u3810:
  2752  005E40  EF3D  F02F         	goto	l276
  2753  005E44                     l4330:
  2754  005E44  C08D  F08B         	movff	subMenuRelays@vopc,??_subMenuRelays
  2755  005E48  C08E  F08C         	movff	subMenuRelays@vopc+1,??_subMenuRelays+1
  2756                           
  2757                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2758                           ; Switch size 1, requested type "simple"
  2759                           ; Number of cases is 1, Range of values is 0 to 0
  2760                           ; switch strategies available:
  2761                           ; Name         Instructions Cycles
  2762                           ; simple_byte            4     3 (average)
  2763                           ;	Chosen strategy is simple_byte
  2764  005E4C  0100               	movlb	0	; () banked
  2765  005E4E  518C               	movf	(??_subMenuRelays+1)& (0+255),w,b
  2766  005E50  0A00               	xorlw	0	; case 0
  2767  005E52  B4D8               	btfsc	status,2,c
  2768  005E54  EF2E  F02F         	goto	l4788
  2769  005E58  EFB1  F02E         	goto	l4302
  2770  005E5C                     l4788:
  2771                           
  2772                           ; BSR set to: 0
  2773                           ; Switch size 1, requested type "simple"
  2774                           ; Number of cases is 3, Range of values is 1 to 3
  2775                           ; switch strategies available:
  2776                           ; Name         Instructions Cycles
  2777                           ; simple_byte           10     6 (average)
  2778                           ;	Chosen strategy is simple_byte
  2779  005E5C  518B               	movf	??_subMenuRelays& (0+255),w,b
  2780  005E5E  0A01               	xorlw	1	; case 1
  2781  005E60  B4D8               	btfsc	status,2,c
  2782  005E62  EFC2  F02E         	goto	l4306
  2783  005E66  0A03               	xorlw	3	; case 2
  2784  005E68  B4D8               	btfsc	status,2,c
  2785  005E6A  EFE3  F02E         	goto	l4314
  2786  005E6E  0A01               	xorlw	1	; case 3
  2787  005E70  B4D8               	btfsc	status,2,c
  2788  005E72  EF04  F02F         	goto	l4322
  2789  005E76  EFB1  F02E         	goto	l4302
  2790  005E7A                     l276:
  2791  005E7A  0012               	return		;funcret
  2792  005E7C                     __end_of_subMenuRelays:
  2793                           	callstack 0
  2794                           
  2795 ;; *************** function _testarRelays *****************
  2796 ;; Defined at:
  2797 ;;		line 262 in file "MyIHM_1A.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  relay           1    wreg     unsigned char 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;  relay           1   42[BANK0 ] unsigned char 
  2802 ;;  msg1           16   26[BANK0 ] const unsigned char [16]
  2803 ;;  msg2           16   10[BANK0 ] const unsigned char [16]
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      void 
  2806 ;; Registers used:
  2807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2813 ;;      Params:         0       0       0       0       0       0       0       0       0
  2814 ;;      Locals:         0      33       0       0       0       0       0       0       0
  2815 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2816 ;;      Totals:         0      35       0       0       0       0       0       0       0
  2817 ;;Total ram usage:       35 bytes
  2818 ;; Hardware stack levels used: 1
  2819 ;; Hardware stack levels required when called: 8
  2820 ;; This function calls:
  2821 ;;		_EscreveLinhaLCD4
  2822 ;;		_sprintf
  2823 ;; This function is called by:
  2824 ;;		_subMenuRelays
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text2
  2829  0062C4                     __ptext2:
  2830                           	callstack 0
  2831  0062C4                     _testarRelays:
  2832                           	callstack 21
  2833                           
  2834                           ;incstack = 0
  2835                           ;testarRelays@relay stored from wreg
  2836  0062C4  0100               	movlb	0	; () banked
  2837  0062C6  6F8A               	movwf	testarRelays@relay& (0+255),b
  2838  0062C8                     
  2839                           ;MyIHM_1A.c: 265:     const char msg1[16];;MyIHM_1A.c: 266:     const char msg2[16];;MyI
      +                          HM_1A.c: 268:     TRISC = 0x00;
  2840  0062C8  0E00               	movlw	0
  2841  0062CA  6E94               	movwf	148,c	;volatile
  2842                           
  2843                           ;MyIHM_1A.c: 269:     TRISE = 0x00;
  2844  0062CC  0E00               	movlw	0
  2845  0062CE  6E96               	movwf	150,c	;volatile
  2846                           
  2847                           ;MyIHM_1A.c: 271:     PORTC = 0x00;
  2848  0062D0  0E00               	movlw	0
  2849  0062D2  6E82               	movwf	130,c	;volatile
  2850                           
  2851                           ;MyIHM_1A.c: 272:     PORTE = 0x00;
  2852  0062D4  0E00               	movlw	0
  2853  0062D6  6E84               	movwf	132,c	;volatile
  2854  0062D8                     
  2855                           ;MyIHM_1A.c: 274:     sprintf(msg2,"RB2: ON RB0: OFF");
  2856  0062D8  0E6A               	movlw	low testarRelays@msg2
  2857  0062DA  6E5A               	movwf	sprintf@s^0,c
  2858  0062DC  0E00               	movlw	high testarRelays@msg2
  2859  0062DE  6E5B               	movwf	(sprintf@s+1)^0,c
  2860  0062E0  0EC2               	movlw	low STR_8
  2861  0062E2  6E5C               	movwf	sprintf@fmt^0,c
  2862  0062E4  0E7F               	movlw	high STR_8
  2863  0062E6  6E5D               	movwf	(sprintf@fmt+1)^0,c
  2864  0062E8  ECEC  F026         	call	_sprintf	;wreg free
  2865                           
  2866                           ;MyIHM_1A.c: 276:     while(PORTBbits.RB1 != 0){
  2867  0062EC  EF14  F032         	goto	l3998
  2868  0062F0                     l125:
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;MyIHM_1A.c: 279:                 if(PORTBbits.RB2 == 0){
  2872  0062F0  B481               	btfsc	129,2,c	;volatile
  2873  0062F2  EF7D  F031         	goto	u3311
  2874  0062F6  EF7F  F031         	goto	u3310
  2875  0062FA                     u3311:
  2876  0062FA  EF96  F031         	goto	l126
  2877  0062FE                     u3310:
  2878  0062FE                     
  2879                           ; BSR set to: 0
  2880                           ;MyIHM_1A.c: 280:                     PORTCbits.RC0 = 1;
  2881  0062FE  8082               	bsf	130,0,c	;volatile
  2882  006300                     l127:
  2883  006300  A481               	btfss	129,2,c	;volatile
  2884  006302  EF85  F031         	goto	u3321
  2885  006306  EF87  F031         	goto	u3320
  2886  00630A                     u3321:
  2887  00630A  EF80  F031         	goto	l127
  2888  00630E                     u3320:
  2889  00630E                     
  2890                           ;MyIHM_1A.c: 282:                     sprintf(msg1,"Relay %d ON ",relay);
  2891  00630E  0E7A               	movlw	low testarRelays@msg1
  2892  006310  6E5A               	movwf	sprintf@s^0,c
  2893  006312  0E00               	movlw	high testarRelays@msg1
  2894  006314  6E5B               	movwf	(sprintf@s+1)^0,c
  2895  006316  0EE4               	movlw	low STR_9
  2896  006318  6E5C               	movwf	sprintf@fmt^0,c
  2897  00631A  0E7F               	movlw	high STR_9
  2898  00631C  6E5D               	movwf	(sprintf@fmt+1)^0,c
  2899  00631E  C08A  F05E         	movff	testarRelays@relay,?_sprintf+4
  2900  006322  6A5F               	clrf	(?_sprintf+5)^0,c
  2901  006324  ECEC  F026         	call	_sprintf	;wreg free
  2902                           
  2903                           ;MyIHM_1A.c: 283:                 }else if (PORTBbits.RB0 == 0){
  2904  006328  EF06  F032         	goto	l3996
  2905  00632C                     l126:
  2906                           
  2907                           ; BSR set to: 0
  2908  00632C  B081               	btfsc	129,0,c	;volatile
  2909  00632E  EF9B  F031         	goto	u3331
  2910  006332  EF9D  F031         	goto	u3330
  2911  006336                     u3331:
  2912  006336  EF06  F032         	goto	l3996
  2913  00633A                     u3330:
  2914  00633A                     
  2915                           ; BSR set to: 0
  2916                           ;MyIHM_1A.c: 284:                     PORTCbits.RC0 = 0;
  2917  00633A  9082               	bcf	130,0,c	;volatile
  2918  00633C                     l132:
  2919  00633C  A081               	btfss	129,0,c	;volatile
  2920  00633E  EFA3  F031         	goto	u3341
  2921  006342  EFA5  F031         	goto	u3340
  2922  006346                     u3341:
  2923  006346  EF9E  F031         	goto	l132
  2924  00634A                     u3340:
  2925  00634A                     
  2926                           ;MyIHM_1A.c: 286:                     sprintf(msg1,"Relay %d OFF",relay);
  2927  00634A  0E7A               	movlw	low testarRelays@msg1
  2928  00634C  6E5A               	movwf	sprintf@s^0,c
  2929  00634E  0E00               	movlw	high testarRelays@msg1
  2930  006350  6E5B               	movwf	(sprintf@s+1)^0,c
  2931  006352  0EF1               	movlw	low STR_10
  2932  006354  6E5C               	movwf	sprintf@fmt^0,c
  2933  006356  0E7F               	movlw	high STR_10
  2934  006358  6E5D               	movwf	(sprintf@fmt+1)^0,c
  2935  00635A  C08A  F05E         	movff	testarRelays@relay,?_sprintf+4
  2936  00635E  6A5F               	clrf	(?_sprintf+5)^0,c
  2937  006360  ECEC  F026         	call	_sprintf	;wreg free
  2938  006364  EF06  F032         	goto	l3996
  2939  006368                     l136:
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;MyIHM_1A.c: 289:                 if(PORTBbits.RB2 == 0){
  2943  006368  B481               	btfsc	129,2,c	;volatile
  2944  00636A  EFB9  F031         	goto	u3351
  2945  00636E  EFBB  F031         	goto	u3350
  2946  006372                     u3351:
  2947  006372  EFD2  F031         	goto	l137
  2948  006376                     u3350:
  2949  006376                     
  2950                           ; BSR set to: 0
  2951                           ;MyIHM_1A.c: 290:                     PORTEbits.RE0 = 1;
  2952  006376  8084               	bsf	132,0,c	;volatile
  2953  006378                     l138:
  2954  006378  A481               	btfss	129,2,c	;volatile
  2955  00637A  EFC1  F031         	goto	u3361
  2956  00637E  EFC3  F031         	goto	u3360
  2957  006382                     u3361:
  2958  006382  EFBC  F031         	goto	l138
  2959  006386                     u3360:
  2960  006386                     
  2961                           ;MyIHM_1A.c: 292:                     sprintf(msg1,"Relay %d ON ",relay);
  2962  006386  0E7A               	movlw	low testarRelays@msg1
  2963  006388  6E5A               	movwf	sprintf@s^0,c
  2964  00638A  0E00               	movlw	high testarRelays@msg1
  2965  00638C  6E5B               	movwf	(sprintf@s+1)^0,c
  2966  00638E  0EE4               	movlw	low STR_9
  2967  006390  6E5C               	movwf	sprintf@fmt^0,c
  2968  006392  0E7F               	movlw	high STR_9
  2969  006394  6E5D               	movwf	(sprintf@fmt+1)^0,c
  2970  006396  C08A  F05E         	movff	testarRelays@relay,?_sprintf+4
  2971  00639A  6A5F               	clrf	(?_sprintf+5)^0,c
  2972  00639C  ECEC  F026         	call	_sprintf	;wreg free
  2973                           
  2974                           ;MyIHM_1A.c: 293:                 }else if (PORTBbits.RB0 == 0){
  2975  0063A0  EF06  F032         	goto	l3996
  2976  0063A4                     l137:
  2977                           
  2978                           ; BSR set to: 0
  2979  0063A4  B081               	btfsc	129,0,c	;volatile
  2980  0063A6  EFD7  F031         	goto	u3371
  2981  0063AA  EFD9  F031         	goto	u3370
  2982  0063AE                     u3371:
  2983  0063AE  EF06  F032         	goto	l3996
  2984  0063B2                     u3370:
  2985  0063B2                     
  2986                           ; BSR set to: 0
  2987                           ;MyIHM_1A.c: 294:                     PORTEbits.RE0 = 0;
  2988  0063B2  9084               	bcf	132,0,c	;volatile
  2989  0063B4                     l143:
  2990  0063B4  A081               	btfss	129,0,c	;volatile
  2991  0063B6  EFDF  F031         	goto	u3381
  2992  0063BA  EFE1  F031         	goto	u3380
  2993  0063BE                     u3381:
  2994  0063BE  EFDA  F031         	goto	l143
  2995  0063C2                     u3380:
  2996  0063C2                     
  2997                           ;MyIHM_1A.c: 296:                     sprintf(msg1,"Relay %d OFF",relay);
  2998  0063C2  0E7A               	movlw	low testarRelays@msg1
  2999  0063C4  6E5A               	movwf	sprintf@s^0,c
  3000  0063C6  0E00               	movlw	high testarRelays@msg1
  3001  0063C8  6E5B               	movwf	(sprintf@s+1)^0,c
  3002  0063CA  0EF1               	movlw	low STR_10
  3003  0063CC  6E5C               	movwf	sprintf@fmt^0,c
  3004  0063CE  0E7F               	movlw	high STR_10
  3005  0063D0  6E5D               	movwf	(sprintf@fmt+1)^0,c
  3006  0063D2  C08A  F05E         	movff	testarRelays@relay,?_sprintf+4
  3007  0063D6  6A5F               	clrf	(?_sprintf+5)^0,c
  3008  0063D8  ECEC  F026         	call	_sprintf	;wreg free
  3009  0063DC  EF06  F032         	goto	l3996
  3010  0063E0                     l3994:
  3011  0063E0  0100               	movlb	0	; () banked
  3012  0063E2  518A               	movf	testarRelays@relay& (0+255),w,b
  3013  0063E4  6F68               	movwf	??_testarRelays& (0+255),b
  3014  0063E6  6B69               	clrf	(??_testarRelays+1)& (0+255),b
  3015                           
  3016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3017                           ; Switch size 1, requested type "simple"
  3018                           ; Number of cases is 1, Range of values is 0 to 0
  3019                           ; switch strategies available:
  3020                           ; Name         Instructions Cycles
  3021                           ; simple_byte            4     3 (average)
  3022                           ;	Chosen strategy is simple_byte
  3023  0063E8  5169               	movf	(??_testarRelays+1)& (0+255),w,b
  3024  0063EA  0A00               	xorlw	0	; case 0
  3025  0063EC  B4D8               	btfsc	status,2,c
  3026  0063EE  EFFB  F031         	goto	l4790
  3027  0063F2  EF06  F032         	goto	l3996
  3028  0063F6                     l4790:
  3029                           
  3030                           ; BSR set to: 0
  3031                           ; Switch size 1, requested type "simple"
  3032                           ; Number of cases is 2, Range of values is 1 to 2
  3033                           ; switch strategies available:
  3034                           ; Name         Instructions Cycles
  3035                           ; simple_byte            7     4 (average)
  3036                           ;	Chosen strategy is simple_byte
  3037  0063F6  5168               	movf	??_testarRelays& (0+255),w,b
  3038  0063F8  0A01               	xorlw	1	; case 1
  3039  0063FA  B4D8               	btfsc	status,2,c
  3040  0063FC  EF78  F031         	goto	l125
  3041  006400  0A03               	xorlw	3	; case 2
  3042  006402  B4D8               	btfsc	status,2,c
  3043  006404  EFB4  F031         	goto	l136
  3044  006408  EF06  F032         	goto	l3996
  3045  00640C                     l3996:
  3046                           
  3047                           ;MyIHM_1A.c: 299:         EscreveLinhaLCD4(1,msg1);
  3048  00640C  0E7A               	movlw	low testarRelays@msg1
  3049  00640E  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3050  006410  0E00               	movlw	high testarRelays@msg1
  3051  006412  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3052  006414  0E01               	movlw	1
  3053  006416  ECE5  F028         	call	_EscreveLinhaLCD4
  3054                           
  3055                           ;MyIHM_1A.c: 300:         EscreveLinhaLCD4(2,msg2);
  3056  00641A  0E6A               	movlw	low testarRelays@msg2
  3057  00641C  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3058  00641E  0E00               	movlw	high testarRelays@msg2
  3059  006420  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3060  006422  0E02               	movlw	2
  3061  006424  ECE5  F028         	call	_EscreveLinhaLCD4
  3062  006428                     l3998:
  3063                           
  3064                           ;MyIHM_1A.c: 276:     while(PORTBbits.RB1 != 0){
  3065  006428  B281               	btfsc	129,1,c	;volatile
  3066  00642A  EF19  F032         	goto	u3391
  3067  00642E  EF1B  F032         	goto	u3390
  3068  006432                     u3391:
  3069  006432  EFF0  F031         	goto	l3994
  3070  006436                     u3390:
  3071  006436                     l147:
  3072  006436  A281               	btfss	129,1,c	;volatile
  3073  006438  EF20  F032         	goto	u3401
  3074  00643C  EF22  F032         	goto	u3400
  3075  006440                     u3401:
  3076  006440  EF1B  F032         	goto	l147
  3077  006444                     u3400:
  3078  006444  0012               	return		;funcret
  3079  006446                     __end_of_testarRelays:
  3080                           	callstack 0
  3081                           
  3082 ;; *************** function _subMenuLCD *****************
  3083 ;; Defined at:
  3084 ;;		line 666 in file "MyIHM_1A.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  vopc            2   17[COMRAM] int 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  2  320[None  ] short 
  3091 ;; Registers used:
  3092 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3098 ;;      Params:         0       0       0       0       0       0       0       0       0
  3099 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3100 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3101 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3102 ;;Total ram usage:        4 bytes
  3103 ;; Hardware stack levels used: 1
  3104 ;; Hardware stack levels required when called: 3
  3105 ;; This function calls:
  3106 ;;		_EscreveLinhaLCD4
  3107 ;;		_capturaUpDown
  3108 ;;		_testarLCD
  3109 ;; This function is called by:
  3110 ;;		_main
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text3
  3115  0056A2                     __ptext3:
  3116                           	callstack 0
  3117  0056A2                     _subMenuLCD:
  3118                           	callstack 27
  3119  0056A2                     l4394:
  3120                           
  3121                           ;MyIHM_1A.c: 667:     int vopc = 1;
  3122  0056A2  0E00               	movlw	0
  3123  0056A4  6E13               	movwf	(subMenuLCD@vopc+1)^0,c
  3124  0056A6  0E01               	movlw	1
  3125  0056A8  6E12               	movwf	subMenuLCD@vopc^0,c
  3126  0056AA                     l4396:
  3127                           
  3128                           ;MyIHM_1A.c: 669:         vopc = capturaUpDown(vopc);
  3129  0056AA  C012  F001         	movff	subMenuLCD@vopc,capturaUpDown@opt
  3130  0056AE  C013  F002         	movff	subMenuLCD@vopc+1,capturaUpDown@opt+1
  3131  0056B2  ECC4  F026         	call	_capturaUpDown	;wreg free
  3132  0056B6  C001  F012         	movff	?_capturaUpDown,subMenuLCD@vopc
  3133  0056BA  C002  F013         	movff	?_capturaUpDown+1,subMenuLCD@vopc+1
  3134                           
  3135                           ;MyIHM_1A.c: 670:         switch(vopc){
  3136  0056BE  EF9F  F02B         	goto	l4414
  3137  0056C2                     l4398:
  3138                           
  3139                           ;MyIHM_1A.c: 672:                 EscreveLinhaLCD4(1, ">Iniciar Teste  ");
  3140  0056C2  0E29               	movlw	low STR_46
  3141  0056C4  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3142  0056C6  0E7F               	movlw	high STR_46
  3143  0056C8  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3144  0056CA  0E01               	movlw	1
  3145  0056CC  ECE5  F028         	call	_EscreveLinhaLCD4
  3146                           
  3147                           ;MyIHM_1A.c: 673:                 EscreveLinhaLCD4(2, " Voltar         ");
  3148  0056D0  0E4D               	movlw	low STR_25
  3149  0056D2  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3150  0056D4  0E7D               	movlw	high STR_25
  3151  0056D6  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3152  0056D8  0E02               	movlw	2
  3153  0056DA  ECE5  F028         	call	_EscreveLinhaLCD4
  3154  0056DE                     
  3155                           ;MyIHM_1A.c: 674:                 if (PORTBbits.RB1 == 0){
  3156  0056DE  B281               	btfsc	129,1,c	;volatile
  3157  0056E0  EF74  F02B         	goto	u3941
  3158  0056E4  EF76  F02B         	goto	u3940
  3159  0056E8                     u3941:
  3160  0056E8  EF55  F02B         	goto	l4396
  3161  0056EC                     u3940:
  3162  0056EC                     l325:
  3163  0056EC  A281               	btfss	129,1,c	;volatile
  3164  0056EE  EF7B  F02B         	goto	u3951
  3165  0056F2  EF7D  F02B         	goto	u3950
  3166  0056F6                     u3951:
  3167  0056F6  EF76  F02B         	goto	l325
  3168  0056FA                     u3950:
  3169  0056FA                     
  3170                           ;MyIHM_1A.c: 676:                    testarLCD();
  3171  0056FA  EC2C  F029         	call	_testarLCD	;wreg free
  3172  0056FE  EF55  F02B         	goto	l4396
  3173  005702                     l4406:
  3174                           
  3175                           ;MyIHM_1A.c: 680:                 EscreveLinhaLCD4(1, ">Voltar         ");
  3176  005702  0E5E               	movlw	low STR_26
  3177  005704  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3178  005706  0E7D               	movlw	high STR_26
  3179  005708  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3180  00570A  0E01               	movlw	1
  3181  00570C  ECE5  F028         	call	_EscreveLinhaLCD4
  3182                           
  3183                           ;MyIHM_1A.c: 681:                 EscreveLinhaLCD4(2, "________________");
  3184  005710  0EE7               	movlw	low (STR_57+1)
  3185  005712  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3186  005714  0E7C               	movlw	high (STR_57+1)
  3187  005716  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3188  005718  0E02               	movlw	2
  3189  00571A  ECE5  F028         	call	_EscreveLinhaLCD4
  3190  00571E                     
  3191                           ;MyIHM_1A.c: 682:                 if (PORTBbits.RB1 == 0 ){
  3192  00571E  B281               	btfsc	129,1,c	;volatile
  3193  005720  EF94  F02B         	goto	u3961
  3194  005724  EF96  F02B         	goto	u3960
  3195  005728                     u3961:
  3196  005728  EF55  F02B         	goto	l4396
  3197  00572C                     u3960:
  3198  00572C                     l331:
  3199  00572C  A281               	btfss	129,1,c	;volatile
  3200  00572E  EF9B  F02B         	goto	u3971
  3201  005732  EF9D  F02B         	goto	u3970
  3202  005736                     u3971:
  3203  005736  EF96  F02B         	goto	l331
  3204  00573A                     u3970:
  3205  00573A  EFB5  F02B         	goto	l334
  3206  00573E                     l4414:
  3207  00573E  C012  F010         	movff	subMenuLCD@vopc,??_subMenuLCD
  3208  005742  C013  F011         	movff	subMenuLCD@vopc+1,??_subMenuLCD+1
  3209                           
  3210                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3211                           ; Switch size 1, requested type "simple"
  3212                           ; Number of cases is 1, Range of values is 0 to 0
  3213                           ; switch strategies available:
  3214                           ; Name         Instructions Cycles
  3215                           ; simple_byte            4     3 (average)
  3216                           ;	Chosen strategy is simple_byte
  3217  005746  5011               	movf	(??_subMenuLCD+1)^0,w,c
  3218  005748  0A00               	xorlw	0	; case 0
  3219  00574A  B4D8               	btfsc	status,2,c
  3220  00574C  EFAA  F02B         	goto	l4792
  3221  005750  EF51  F02B         	goto	l4394
  3222  005754                     l4792:
  3223                           
  3224                           ; Switch size 1, requested type "simple"
  3225                           ; Number of cases is 2, Range of values is 1 to 2
  3226                           ; switch strategies available:
  3227                           ; Name         Instructions Cycles
  3228                           ; simple_byte            7     4 (average)
  3229                           ;	Chosen strategy is simple_byte
  3230  005754  5010               	movf	??_subMenuLCD^0,w,c
  3231  005756  0A01               	xorlw	1	; case 1
  3232  005758  B4D8               	btfsc	status,2,c
  3233  00575A  EF61  F02B         	goto	l4398
  3234  00575E  0A03               	xorlw	3	; case 2
  3235  005760  B4D8               	btfsc	status,2,c
  3236  005762  EF81  F02B         	goto	l4406
  3237  005766  EF51  F02B         	goto	l4394
  3238  00576A                     l334:
  3239  00576A  0012               	return		;funcret
  3240  00576C                     __end_of_subMenuLCD:
  3241                           	callstack 0
  3242                           
  3243 ;; *************** function _testarLCD *****************
  3244 ;; Defined at:
  3245 ;;		line 304 in file "MyIHM_1A.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;		None
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  l               2   13[COMRAM] int 
  3250 ;;  l               2   11[COMRAM] int 
  3251 ;;  idx             1    0        unsigned char 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3261 ;;      Params:         0       0       0       0       0       0       0       0       0
  3262 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3263 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3264 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3265 ;;Total ram usage:        6 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 2
  3268 ;; This function calls:
  3269 ;;		_ConfiguraLCD4
  3270 ;;		_EscreveLCD4
  3271 ;;		_EscreveLinhaLCD4
  3272 ;; This function is called by:
  3273 ;;		_subMenuLCD
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text4
  3278  005258                     __ptext4:
  3279                           	callstack 0
  3280  005258                     _testarLCD:
  3281                           	callstack 27
  3282  005258                     
  3283                           ;MyIHM_1A.c: 307:     EscreveLinhaLCD4(1,"Teste do LCD    ");
  3284  005258  0E90               	movlw	low STR_13
  3285  00525A  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3286  00525C  0E7E               	movlw	high STR_13
  3287  00525E  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3288  005260  0E01               	movlw	1
  3289  005262  ECE5  F028         	call	_EscreveLinhaLCD4
  3290  005266                     
  3291                           ;MyIHM_1A.c: 308:     EscreveLinhaLCD4(2,"RB1 para voltar ");
  3292  005266  0E7E               	movlw	low STR_6
  3293  005268  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3294  00526A  0E7F               	movlw	high STR_6
  3295  00526C  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3296  00526E  0E02               	movlw	2
  3297  005270  ECE5  F028         	call	_EscreveLinhaLCD4
  3298  005274                     
  3299                           ;MyIHM_1A.c: 313:     {;MyIHM_1A.c: 314:         ConfiguraLCD4(0x80);
  3300  005274  0E80               	movlw	128
  3301  005276  EC6D  F027         	call	_ConfiguraLCD4
  3302  00527A                     
  3303                           ;MyIHM_1A.c: 315:         for(int l = 0; l <16; l++){
  3304  00527A  0E00               	movlw	0
  3305  00527C  6E0D               	movwf	(testarLCD@l+1)^0,c
  3306  00527E  0E00               	movlw	0
  3307  005280  6E0C               	movwf	testarLCD@l^0,c
  3308  005282                     l4020:
  3309                           
  3310                           ;MyIHM_1A.c: 316:             EscreveLCD4(0xFF);
  3311  005282  0EFF               	movlw	255
  3312  005284  EC9C  F026         	call	_EscreveLCD4
  3313  005288                     
  3314                           ;MyIHM_1A.c: 317:         }
  3315  005288  4A0C               	infsnz	testarLCD@l^0,f,c
  3316  00528A  2A0D               	incf	(testarLCD@l+1)^0,f,c
  3317  00528C  BE0D               	btfsc	(testarLCD@l+1)^0,7,c
  3318  00528E  EF52  F029         	goto	u3411
  3319  005292  500D               	movf	(testarLCD@l+1)^0,w,c
  3320  005294  E109               	bnz	u3410
  3321  005296  0E10               	movlw	16
  3322  005298  5C0C               	subwf	testarLCD@l^0,w,c
  3323  00529A  A0D8               	btfss	status,0,c
  3324  00529C  EF52  F029         	goto	u3411
  3325  0052A0  EF54  F029         	goto	u3410
  3326  0052A4                     u3411:
  3327  0052A4  EF41  F029         	goto	l4020
  3328  0052A8                     u3410:
  3329  0052A8                     
  3330                           ;MyIHM_1A.c: 318:         ConfiguraLCD4(0xC0);
  3331  0052A8  0EC0               	movlw	192
  3332  0052AA  EC6D  F027         	call	_ConfiguraLCD4
  3333  0052AE                     
  3334                           ;MyIHM_1A.c: 319:         for(int l = 0; l <16; l++){
  3335  0052AE  0E00               	movlw	0
  3336  0052B0  6E0F               	movwf	(testarLCD@l_565+1)^0,c
  3337  0052B2  0E00               	movlw	0
  3338  0052B4  6E0E               	movwf	testarLCD@l_565^0,c
  3339  0052B6                     l4034:
  3340                           
  3341                           ;MyIHM_1A.c: 320:             EscreveLCD4(0xFF);
  3342  0052B6  0EFF               	movlw	255
  3343  0052B8  EC9C  F026         	call	_EscreveLCD4
  3344  0052BC                     
  3345                           ;MyIHM_1A.c: 321:         }
  3346  0052BC  4A0E               	infsnz	testarLCD@l_565^0,f,c
  3347  0052BE  2A0F               	incf	(testarLCD@l_565+1)^0,f,c
  3348  0052C0  BE0F               	btfsc	(testarLCD@l_565+1)^0,7,c
  3349  0052C2  EF6C  F029         	goto	u3421
  3350  0052C6  500F               	movf	(testarLCD@l_565+1)^0,w,c
  3351  0052C8  E109               	bnz	u3420
  3352  0052CA  0E10               	movlw	16
  3353  0052CC  5C0E               	subwf	testarLCD@l_565^0,w,c
  3354  0052CE  A0D8               	btfss	status,0,c
  3355  0052D0  EF6C  F029         	goto	u3421
  3356  0052D4  EF6E  F029         	goto	u3420
  3357  0052D8                     u3421:
  3358  0052D8  EF5B  F029         	goto	l4034
  3359  0052DC                     u3420:
  3360  0052DC                     
  3361                           ;MyIHM_1A.c: 322:     };MyIHM_1A.c: 323:     _delay((unsigned long)((2000)*(8000000/4000
      +                          .0)));
  3362  0052DC  0E15               	movlw	21
  3363  0052DE  6E0B               	movwf	(??_testarLCD+1)^0,c
  3364  0052E0  0E4B               	movlw	75
  3365  0052E2  6E0A               	movwf	??_testarLCD^0,c
  3366  0052E4  0EBE               	movlw	190
  3367  0052E6                     u4277:
  3368  0052E6  2EE8               	decfsz	wreg,f,c
  3369  0052E8  D7FE               	bra	u4277
  3370  0052EA  2E0A               	decfsz	??_testarLCD^0,f,c
  3371  0052EC  D7FC               	bra	u4277
  3372  0052EE  2E0B               	decfsz	(??_testarLCD+1)^0,f,c
  3373  0052F0  D7FA               	bra	u4277
  3374  0052F2  D000               	nop2	
  3375  0052F4  0012               	return		;funcret
  3376  0052F6                     __end_of_testarLCD:
  3377                           	callstack 0
  3378                           
  3379 ;; *************** function _subMenuDisplay7Seg *****************
  3380 ;; Defined at:
  3381 ;;		line 533 in file "MyIHM_1A.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;		None
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;  vopc            2   38[BANK0 ] int 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  2  233[None  ] short 
  3388 ;; Registers used:
  3389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3395 ;;      Params:         0       0       0       0       0       0       0       0       0
  3396 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3397 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3398 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3399 ;;Total ram usage:        4 bytes
  3400 ;; Hardware stack levels used: 1
  3401 ;; Hardware stack levels required when called: 9
  3402 ;; This function calls:
  3403 ;;		_EscreveLinhaLCD4
  3404 ;;		_capturaUpDown
  3405 ;;		_testarDisplay1
  3406 ;;		_testarDisplay2
  3407 ;; This function is called by:
  3408 ;;		_main
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text5
  3413  005C4C                     __ptext5:
  3414                           	callstack 0
  3415  005C4C                     _subMenuDisplay7Seg:
  3416                           	callstack 21
  3417  005C4C                     l4270:
  3418                           
  3419                           ;MyIHM_1A.c: 534:     int vopc = 1;
  3420  005C4C  0E00               	movlw	0
  3421  005C4E  0100               	movlb	0	; () banked
  3422  005C50  6F87               	movwf	(subMenuDisplay7Seg@vopc+1)& (0+255),b
  3423  005C52  0E01               	movlw	1
  3424  005C54  6F86               	movwf	subMenuDisplay7Seg@vopc& (0+255),b
  3425  005C56                     l4272:
  3426                           
  3427                           ;MyIHM_1A.c: 536:         vopc = capturaUpDown(vopc);
  3428  005C56  C086  F001         	movff	subMenuDisplay7Seg@vopc,capturaUpDown@opt
  3429  005C5A  C087  F002         	movff	subMenuDisplay7Seg@vopc+1,capturaUpDown@opt+1
  3430  005C5E  ECC4  F026         	call	_capturaUpDown	;wreg free
  3431  005C62  C001  F086         	movff	?_capturaUpDown,subMenuDisplay7Seg@vopc
  3432  005C66  C002  F087         	movff	?_capturaUpDown+1,subMenuDisplay7Seg@vopc+1
  3433                           
  3434                           ;MyIHM_1A.c: 537:         switch(vopc){
  3435  005C6A  EF95  F02E         	goto	l4296
  3436  005C6E                     l4274:
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;MyIHM_1A.c: 539:                 EscreveLinhaLCD4(1, ">Teste 8888     ");
  3440  005C6E  0E7F               	movlw	low STR_22
  3441  005C70  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3442  005C72  0E7E               	movlw	high STR_22
  3443  005C74  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3444  005C76  0E01               	movlw	1
  3445  005C78  ECE5  F028         	call	_EscreveLinhaLCD4
  3446                           
  3447                           ;MyIHM_1A.c: 540:                 EscreveLinhaLCD4(2, " Contar 9999->0 ");
  3448  005C7C  0E5C               	movlw	low STR_23
  3449  005C7E  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3450  005C80  0E7F               	movlw	high STR_23
  3451  005C82  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3452  005C84  0E02               	movlw	2
  3453  005C86  ECE5  F028         	call	_EscreveLinhaLCD4
  3454  005C8A                     
  3455                           ;MyIHM_1A.c: 541:                 if (PORTBbits.RB1 == 0){
  3456  005C8A  B281               	btfsc	129,1,c	;volatile
  3457  005C8C  EF4A  F02E         	goto	u3701
  3458  005C90  EF4C  F02E         	goto	u3700
  3459  005C94                     u3701:
  3460  005C94  EF2B  F02E         	goto	l4272
  3461  005C98                     u3700:
  3462  005C98                     l238:
  3463  005C98  A281               	btfss	129,1,c	;volatile
  3464  005C9A  EF51  F02E         	goto	u3711
  3465  005C9E  EF53  F02E         	goto	u3710
  3466  005CA2                     u3711:
  3467  005CA2  EF4C  F02E         	goto	l238
  3468  005CA6                     u3710:
  3469  005CA6                     
  3470                           ;MyIHM_1A.c: 543:                     testarDisplay1();
  3471  005CA6  EC7B  F029         	call	_testarDisplay1	;wreg free
  3472  005CAA  EF2B  F02E         	goto	l4272
  3473  005CAE                     l4282:
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;MyIHM_1A.c: 547:                  EscreveLinhaLCD4(1, ">Contar 9999->0 ");
  3477  005CAE  0E6D               	movlw	low STR_24
  3478  005CB0  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3479  005CB2  0E7F               	movlw	high STR_24
  3480  005CB4  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3481  005CB6  0E01               	movlw	1
  3482  005CB8  ECE5  F028         	call	_EscreveLinhaLCD4
  3483                           
  3484                           ;MyIHM_1A.c: 548:                  EscreveLinhaLCD4(2, " Voltar         ");
  3485  005CBC  0E4D               	movlw	low STR_25
  3486  005CBE  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3487  005CC0  0E7D               	movlw	high STR_25
  3488  005CC2  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3489  005CC4  0E02               	movlw	2
  3490  005CC6  ECE5  F028         	call	_EscreveLinhaLCD4
  3491  005CCA                     
  3492                           ;MyIHM_1A.c: 549:                  if (PORTBbits.RB1 == 0 ) {
  3493  005CCA  B281               	btfsc	129,1,c	;volatile
  3494  005CCC  EF6A  F02E         	goto	u3721
  3495  005CD0  EF6C  F02E         	goto	u3720
  3496  005CD4                     u3721:
  3497  005CD4  EF2B  F02E         	goto	l4272
  3498  005CD8                     u3720:
  3499  005CD8                     
  3500                           ;MyIHM_1A.c: 550:                     testarDisplay2();
  3501  005CD8  ECC1  F033         	call	_testarDisplay2	;wreg free
  3502  005CDC                     l244:
  3503  005CDC  A281               	btfss	129,1,c	;volatile
  3504  005CDE  EF73  F02E         	goto	u3731
  3505  005CE2  EF75  F02E         	goto	u3730
  3506  005CE6                     u3731:
  3507  005CE6  EF6E  F02E         	goto	l244
  3508  005CEA                     u3730:
  3509  005CEA  EF2B  F02E         	goto	l4272
  3510  005CEE                     l4288:
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;MyIHM_1A.c: 555:                 EscreveLinhaLCD4(1, ">Voltar         ");
  3514  005CEE  0E5E               	movlw	low STR_26
  3515  005CF0  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3516  005CF2  0E7D               	movlw	high STR_26
  3517  005CF4  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3518  005CF6  0E01               	movlw	1
  3519  005CF8  ECE5  F028         	call	_EscreveLinhaLCD4
  3520                           
  3521                           ;MyIHM_1A.c: 556:                 EscreveLinhaLCD4(2, "________________");
  3522  005CFC  0EE7               	movlw	low (STR_57+1)
  3523  005CFE  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3524  005D00  0E7C               	movlw	high (STR_57+1)
  3525  005D02  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3526  005D04  0E02               	movlw	2
  3527  005D06  ECE5  F028         	call	_EscreveLinhaLCD4
  3528  005D0A                     
  3529                           ;MyIHM_1A.c: 557:                 if (PORTBbits.RB1 == 0 ){
  3530  005D0A  B281               	btfsc	129,1,c	;volatile
  3531  005D0C  EF8A  F02E         	goto	u3741
  3532  005D10  EF8C  F02E         	goto	u3740
  3533  005D14                     u3741:
  3534  005D14  EF2B  F02E         	goto	l4272
  3535  005D18                     u3740:
  3536  005D18                     l249:
  3537  005D18  A281               	btfss	129,1,c	;volatile
  3538  005D1A  EF91  F02E         	goto	u3751
  3539  005D1E  EF93  F02E         	goto	u3750
  3540  005D22                     u3751:
  3541  005D22  EF8C  F02E         	goto	l249
  3542  005D26                     u3750:
  3543  005D26  EFB0  F02E         	goto	l252
  3544  005D2A                     l4296:
  3545  005D2A  C086  F084         	movff	subMenuDisplay7Seg@vopc,??_subMenuDisplay7Seg
  3546  005D2E  C087  F085         	movff	subMenuDisplay7Seg@vopc+1,??_subMenuDisplay7Seg+1
  3547                           
  3548                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3549                           ; Switch size 1, requested type "simple"
  3550                           ; Number of cases is 1, Range of values is 0 to 0
  3551                           ; switch strategies available:
  3552                           ; Name         Instructions Cycles
  3553                           ; simple_byte            4     3 (average)
  3554                           ;	Chosen strategy is simple_byte
  3555  005D32  0100               	movlb	0	; () banked
  3556  005D34  5185               	movf	(??_subMenuDisplay7Seg+1)& (0+255),w,b
  3557  005D36  0A00               	xorlw	0	; case 0
  3558  005D38  B4D8               	btfsc	status,2,c
  3559  005D3A  EFA1  F02E         	goto	l4794
  3560  005D3E  EF26  F02E         	goto	l4270
  3561  005D42                     l4794:
  3562                           
  3563                           ; BSR set to: 0
  3564                           ; Switch size 1, requested type "simple"
  3565                           ; Number of cases is 3, Range of values is 1 to 3
  3566                           ; switch strategies available:
  3567                           ; Name         Instructions Cycles
  3568                           ; simple_byte           10     6 (average)
  3569                           ;	Chosen strategy is simple_byte
  3570  005D42  5184               	movf	??_subMenuDisplay7Seg& (0+255),w,b
  3571  005D44  0A01               	xorlw	1	; case 1
  3572  005D46  B4D8               	btfsc	status,2,c
  3573  005D48  EF37  F02E         	goto	l4274
  3574  005D4C  0A03               	xorlw	3	; case 2
  3575  005D4E  B4D8               	btfsc	status,2,c
  3576  005D50  EF57  F02E         	goto	l4282
  3577  005D54  0A01               	xorlw	1	; case 3
  3578  005D56  B4D8               	btfsc	status,2,c
  3579  005D58  EF77  F02E         	goto	l4288
  3580  005D5C  EF26  F02E         	goto	l4270
  3581  005D60                     l252:
  3582  005D60  0012               	return		;funcret
  3583  005D62                     __end_of_subMenuDisplay7Seg:
  3584                           	callstack 0
  3585                           
  3586 ;; *************** function _testarDisplay2 *****************
  3587 ;; Defined at:
  3588 ;;		line 199 in file "MyIHM_1A.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;		None
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;  sconta         16   10[BANK0 ] const unsigned char [16]
  3593 ;;  conta           2   34[BANK0 ] unsigned int 
  3594 ;;  aux             2   32[BANK0 ] unsigned int 
  3595 ;;  ct              2   26[BANK0 ] unsigned int 
  3596 ;;  t2              2    0        unsigned int 
  3597 ;;  t1              2    0        unsigned int 
  3598 ;;  milhar          1   31[BANK0 ] unsigned char 
  3599 ;;  centena         1   30[BANK0 ] unsigned char 
  3600 ;;  dezena          1   29[BANK0 ] unsigned char 
  3601 ;;  unidade         1   28[BANK0 ] unsigned char 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      void 
  3604 ;; Registers used:
  3605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3611 ;;      Params:         0       0       0       0       0       0       0       0       0
  3612 ;;      Locals:         0      26       0       0       0       0       0       0       0
  3613 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3614 ;;      Totals:         0      28       0       0       0       0       0       0       0
  3615 ;;Total ram usage:       28 bytes
  3616 ;; Hardware stack levels used: 1
  3617 ;; Hardware stack levels required when called: 8
  3618 ;; This function calls:
  3619 ;;		_Escreve7Seg
  3620 ;;		_EscreveLinhaLCD4
  3621 ;;		___lwdiv
  3622 ;;		___lwmod
  3623 ;;		_sprintf
  3624 ;; This function is called by:
  3625 ;;		_subMenuDisplay7Seg
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text6
  3630  006782                     __ptext6:
  3631                           	callstack 0
  3632  006782                     _testarDisplay2:
  3633                           	callstack 21
  3634  006782                     
  3635                           ;MyIHM_1A.c: 203:     EscreveLinhaLCD4(1, "Display em teste");
  3636  006782  0ED3               	movlw	low STR_5
  3637  006784  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3638  006786  0E7F               	movlw	high STR_5
  3639  006788  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3640  00678A  0E01               	movlw	1
  3641  00678C  ECE5  F028         	call	_EscreveLinhaLCD4
  3642                           
  3643                           ;MyIHM_1A.c: 204:     EscreveLinhaLCD4(2, "RB1 para voltar ");
  3644  006790  0E7E               	movlw	low STR_6
  3645  006792  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3646  006794  0E7F               	movlw	high STR_6
  3647  006796  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3648  006798  0E02               	movlw	2
  3649  00679A  ECE5  F028         	call	_EscreveLinhaLCD4
  3650  00679E                     
  3651                           ;MyIHM_1A.c: 205:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  3652  00679E  0E0B               	movlw	11
  3653  0067A0  0100               	movlb	0	; () banked
  3654  0067A2  6F69               	movwf	(??_testarDisplay2+1)& (0+255),b
  3655  0067A4  0E26               	movlw	38
  3656  0067A6  6F68               	movwf	??_testarDisplay2& (0+255),b
  3657  0067A8  0E5D               	movlw	93
  3658  0067AA                     u4287:
  3659  0067AA  2EE8               	decfsz	wreg,f,c
  3660  0067AC  D7FE               	bra	u4287
  3661  0067AE  2F68               	decfsz	??_testarDisplay2& (0+255),f,b
  3662  0067B0  D7FC               	bra	u4287
  3663  0067B2  2F69               	decfsz	(??_testarDisplay2+1)& (0+255),f,b
  3664  0067B4  D7FA               	bra	u4287
  3665  0067B6  D000               	nop2	
  3666  0067B8                     
  3667                           ;MyIHM_1A.c: 211:     PORTA = 0b00000000;
  3668  0067B8  0E00               	movlw	0
  3669  0067BA  6E80               	movwf	128,c	;volatile
  3670  0067BC                     
  3671                           ;MyIHM_1A.c: 212:     PORTD = 0b00000000;
  3672  0067BC  0E00               	movlw	0
  3673  0067BE  6E83               	movwf	131,c	;volatile
  3674  0067C0                     
  3675                           ;MyIHM_1A.c: 213:     TRISA = 0b00000000;
  3676  0067C0  0E00               	movlw	0
  3677  0067C2  6E92               	movwf	146,c	;volatile
  3678  0067C4                     
  3679                           ;MyIHM_1A.c: 214:     TRISD = 0b00000000;
  3680  0067C4  0E00               	movlw	0
  3681  0067C6  6E95               	movwf	149,c	;volatile
  3682  0067C8                     
  3683                           ;MyIHM_1A.c: 216:     ADCON1 = 0b00001111;
  3684  0067C8  0E0F               	movlw	15
  3685  0067CA  6EC1               	movwf	193,c	;volatile
  3686  0067CC                     
  3687                           ;MyIHM_1A.c: 218:     const char sconta[16];;MyIHM_1A.c: 219:     unsigned int conta,aux
      +                          ;;MyIHM_1A.c: 220:     unsigned char unidade, dezena, centena, milhar;;MyIHM_1A.c: 222: 
      +                              unsigned int t1,t2,ct;;MyIHM_1A.c: 225:     conta =9999;
  3688  0067CC  0E27               	movlw	39
  3689  0067CE  0100               	movlb	0	; () banked
  3690  0067D0  6F83               	movwf	(testarDisplay2@conta+1)& (0+255),b
  3691  0067D2  0E0F               	movlw	15
  3692  0067D4  6F82               	movwf	testarDisplay2@conta& (0+255),b
  3693  0067D6                     l3926:
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;MyIHM_1A.c: 230:         milhar = conta/1000;
  3697  0067D6  C082  F001         	movff	testarDisplay2@conta,___lwdiv@dividend
  3698  0067DA  C083  F002         	movff	testarDisplay2@conta+1,___lwdiv@dividend+1
  3699  0067DE  0E03               	movlw	3
  3700  0067E0  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3701  0067E2  0EE8               	movlw	232
  3702  0067E4  6E03               	movwf	___lwdiv@divisor^0,c
  3703  0067E6  EC6A  F028         	call	___lwdiv	;wreg free
  3704  0067EA  5001               	movf	?___lwdiv^0,w,c
  3705  0067EC  0100               	movlb	0	; () banked
  3706  0067EE  6F7F               	movwf	testarDisplay2@milhar& (0+255),b
  3707  0067F0                     
  3708                           ; BSR set to: 0
  3709                           ;MyIHM_1A.c: 231:         aux = conta%1000;
  3710  0067F0  C082  F001         	movff	testarDisplay2@conta,___lwmod@dividend
  3711  0067F4  C083  F002         	movff	testarDisplay2@conta+1,___lwmod@dividend+1
  3712  0067F8  0E03               	movlw	3
  3713  0067FA  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3714  0067FC  0EE8               	movlw	232
  3715  0067FE  6E03               	movwf	___lwmod@divisor^0,c
  3716  006800  ECCC  F027         	call	___lwmod	;wreg free
  3717  006804  C001  F080         	movff	?___lwmod,testarDisplay2@aux
  3718  006808  C002  F081         	movff	?___lwmod+1,testarDisplay2@aux+1
  3719  00680C                     
  3720                           ;MyIHM_1A.c: 232:         centena = (aux)/100;
  3721  00680C  C080  F001         	movff	testarDisplay2@aux,___lwdiv@dividend
  3722  006810  C081  F002         	movff	testarDisplay2@aux+1,___lwdiv@dividend+1
  3723  006814  0E00               	movlw	0
  3724  006816  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3725  006818  0E64               	movlw	100
  3726  00681A  6E03               	movwf	___lwdiv@divisor^0,c
  3727  00681C  EC6A  F028         	call	___lwdiv	;wreg free
  3728  006820  5001               	movf	?___lwdiv^0,w,c
  3729  006822  0100               	movlb	0	; () banked
  3730  006824  6F7E               	movwf	testarDisplay2@centena& (0+255),b
  3731  006826                     
  3732                           ; BSR set to: 0
  3733                           ;MyIHM_1A.c: 233:         aux = aux%100;
  3734  006826  C080  F001         	movff	testarDisplay2@aux,___lwmod@dividend
  3735  00682A  C081  F002         	movff	testarDisplay2@aux+1,___lwmod@dividend+1
  3736  00682E  0E00               	movlw	0
  3737  006830  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3738  006832  0E64               	movlw	100
  3739  006834  6E03               	movwf	___lwmod@divisor^0,c
  3740  006836  ECCC  F027         	call	___lwmod	;wreg free
  3741  00683A  C001  F080         	movff	?___lwmod,testarDisplay2@aux
  3742  00683E  C002  F081         	movff	?___lwmod+1,testarDisplay2@aux+1
  3743  006842                     
  3744                           ;MyIHM_1A.c: 234:         dezena = (aux)/10;
  3745  006842  C080  F001         	movff	testarDisplay2@aux,___lwdiv@dividend
  3746  006846  C081  F002         	movff	testarDisplay2@aux+1,___lwdiv@dividend+1
  3747  00684A  0E00               	movlw	0
  3748  00684C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3749  00684E  0E0A               	movlw	10
  3750  006850  6E03               	movwf	___lwdiv@divisor^0,c
  3751  006852  EC6A  F028         	call	___lwdiv	;wreg free
  3752  006856  5001               	movf	?___lwdiv^0,w,c
  3753  006858  0100               	movlb	0	; () banked
  3754  00685A  6F7D               	movwf	testarDisplay2@dezena& (0+255),b
  3755  00685C                     
  3756                           ; BSR set to: 0
  3757                           ;MyIHM_1A.c: 235:         unidade = conta%10;
  3758  00685C  C082  F001         	movff	testarDisplay2@conta,___lwmod@dividend
  3759  006860  C083  F002         	movff	testarDisplay2@conta+1,___lwmod@dividend+1
  3760  006864  0E00               	movlw	0
  3761  006866  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3762  006868  0E0A               	movlw	10
  3763  00686A  6E03               	movwf	___lwmod@divisor^0,c
  3764  00686C  ECCC  F027         	call	___lwmod	;wreg free
  3765  006870  5001               	movf	?___lwmod^0,w,c
  3766  006872  0100               	movlb	0	; () banked
  3767  006874  6F7C               	movwf	testarDisplay2@unidade& (0+255),b
  3768  006876                     
  3769                           ; BSR set to: 0
  3770                           ;MyIHM_1A.c: 238:         sprintf(sconta, "De %0000d a  0    ",conta);
  3771  006876  0E6A               	movlw	low testarDisplay2@sconta
  3772  006878  6E5A               	movwf	sprintf@s^0,c
  3773  00687A  0E00               	movlw	high testarDisplay2@sconta
  3774  00687C  6E5B               	movwf	(sprintf@s+1)^0,c
  3775  00687E  0E43               	movlw	low STR_7
  3776  006880  6E5C               	movwf	sprintf@fmt^0,c
  3777  006882  0E7C               	movlw	high STR_7
  3778  006884  6E5D               	movwf	(sprintf@fmt+1)^0,c
  3779  006886  C082  F05E         	movff	testarDisplay2@conta,?_sprintf+4
  3780  00688A  C083  F05F         	movff	testarDisplay2@conta+1,?_sprintf+5
  3781  00688E  ECEC  F026         	call	_sprintf	;wreg free
  3782  006892                     
  3783                           ;MyIHM_1A.c: 241:         EscreveLinhaLCD4(2,sconta);
  3784  006892  0E6A               	movlw	low testarDisplay2@sconta
  3785  006894  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3786  006896  0E00               	movlw	high testarDisplay2@sconta
  3787  006898  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3788  00689A  0E02               	movlw	2
  3789  00689C  ECE5  F028         	call	_EscreveLinhaLCD4
  3790  0068A0                     
  3791                           ;MyIHM_1A.c: 242:         ct = 0;
  3792  0068A0  0E00               	movlw	0
  3793  0068A2  0100               	movlb	0	; () banked
  3794  0068A4  6F7B               	movwf	(testarDisplay2@ct+1)& (0+255),b
  3795  0068A6  0E00               	movlw	0
  3796  0068A8  6F7A               	movwf	testarDisplay2@ct& (0+255),b
  3797  0068AA                     
  3798                           ; BSR set to: 0
  3799                           ;MyIHM_1A.c: 246:         {;MyIHM_1A.c: 247:             Escreve7Seg(1, milhar, 0); _del
      +                          ay((unsigned long)((18)*(8000000/4000.0)));
  3800  0068AA  C07F  F001         	movff	testarDisplay2@milhar,Escreve7Seg@DADO
  3801  0068AE  0E00               	movlw	0
  3802  0068B0  6E02               	movwf	Escreve7Seg@PONTO^0,c
  3803  0068B2  0E01               	movlw	1
  3804  0068B4  ECA1  F030         	call	_Escreve7Seg
  3805  0068B8  0E2F               	movlw	47
  3806  0068BA  0100               	movlb	0	; () banked
  3807  0068BC  6F68               	movwf	??_testarDisplay2& (0+255),b
  3808  0068BE  0EBF               	movlw	191
  3809  0068C0                     u4297:
  3810  0068C0  2EE8               	decfsz	wreg,f,c
  3811  0068C2  D7FE               	bra	u4297
  3812  0068C4  2F68               	decfsz	??_testarDisplay2& (0+255),f,b
  3813  0068C6  D7FC               	bra	u4297
  3814  0068C8  D000               	nop2	
  3815  0068CA                     
  3816                           ;MyIHM_1A.c: 248:             Escreve7Seg(2, centena,0); _delay((unsigned long)((18)*(80
      +                          00000/4000.0)));
  3817  0068CA  C07E  F001         	movff	testarDisplay2@centena,Escreve7Seg@DADO
  3818  0068CE  0E00               	movlw	0
  3819  0068D0  6E02               	movwf	Escreve7Seg@PONTO^0,c
  3820  0068D2  0E02               	movlw	2
  3821  0068D4  ECA1  F030         	call	_Escreve7Seg
  3822  0068D8  0E2F               	movlw	47
  3823  0068DA  0100               	movlb	0	; () banked
  3824  0068DC  6F68               	movwf	??_testarDisplay2& (0+255),b
  3825  0068DE  0EBF               	movlw	191
  3826  0068E0                     u4307:
  3827  0068E0  2EE8               	decfsz	wreg,f,c
  3828  0068E2  D7FE               	bra	u4307
  3829  0068E4  2F68               	decfsz	??_testarDisplay2& (0+255),f,b
  3830  0068E6  D7FC               	bra	u4307
  3831  0068E8  D000               	nop2	
  3832  0068EA                     
  3833                           ;MyIHM_1A.c: 249:             Escreve7Seg(3, dezena ,0); _delay((unsigned long)((18)*(80
      +                          00000/4000.0)));
  3834  0068EA  C07D  F001         	movff	testarDisplay2@dezena,Escreve7Seg@DADO
  3835  0068EE  0E00               	movlw	0
  3836  0068F0  6E02               	movwf	Escreve7Seg@PONTO^0,c
  3837  0068F2  0E03               	movlw	3
  3838  0068F4  ECA1  F030         	call	_Escreve7Seg
  3839  0068F8  0E2F               	movlw	47
  3840  0068FA  0100               	movlb	0	; () banked
  3841  0068FC  6F68               	movwf	??_testarDisplay2& (0+255),b
  3842  0068FE  0EBF               	movlw	191
  3843  006900                     u4317:
  3844  006900  2EE8               	decfsz	wreg,f,c
  3845  006902  D7FE               	bra	u4317
  3846  006904  2F68               	decfsz	??_testarDisplay2& (0+255),f,b
  3847  006906  D7FC               	bra	u4317
  3848  006908  D000               	nop2	
  3849  00690A                     
  3850                           ;MyIHM_1A.c: 250:             Escreve7Seg(4, unidade,0); _delay((unsigned long)((18)*(80
      +                          00000/4000.0)));
  3851  00690A  C07C  F001         	movff	testarDisplay2@unidade,Escreve7Seg@DADO
  3852  00690E  0E00               	movlw	0
  3853  006910  6E02               	movwf	Escreve7Seg@PONTO^0,c
  3854  006912  0E04               	movlw	4
  3855  006914  ECA1  F030         	call	_Escreve7Seg
  3856  006918  0E2F               	movlw	47
  3857  00691A  0100               	movlb	0	; () banked
  3858  00691C  6F68               	movwf	??_testarDisplay2& (0+255),b
  3859  00691E  0EBF               	movlw	191
  3860  006920                     u4327:
  3861  006920  2EE8               	decfsz	wreg,f,c
  3862  006922  D7FE               	bra	u4327
  3863  006924  2F68               	decfsz	??_testarDisplay2& (0+255),f,b
  3864  006926  D7FC               	bra	u4327
  3865  006928  D000               	nop2	
  3866  00692A                     
  3867                           ;MyIHM_1A.c: 251:             PORTAbits.RA5 = 0;
  3868  00692A  9A80               	bcf	128,5,c	;volatile
  3869  00692C                     
  3870                           ;MyIHM_1A.c: 253:             ct++;
  3871  00692C  0100               	movlb	0	; () banked
  3872  00692E  4B7A               	infsnz	testarDisplay2@ct& (0+255),f,b
  3873  006930  2B7B               	incf	(testarDisplay2@ct+1)& (0+255),f,b
  3874  006932                     
  3875                           ; BSR set to: 0
  3876                           ;MyIHM_1A.c: 254:         };MyIHM_1A.c: 256:         conta--;
  3877  006932  0782               	decf	testarDisplay2@conta& (0+255),f,b
  3878  006934  A0D8               	btfss	status,0,c
  3879  006936  0783               	decf	(testarDisplay2@conta+1)& (0+255),f,b
  3880  006938                     
  3881                           ; BSR set to: 0
  3882                           ;MyIHM_1A.c: 257:         if (conta == 0) conta = 9999;
  3883  006938  5182               	movf	testarDisplay2@conta& (0+255),w,b
  3884  00693A  1183               	iorwf	(testarDisplay2@conta+1)& (0+255),w,b
  3885  00693C  A4D8               	btfss	status,2,c
  3886  00693E  EFA3  F034         	goto	u3281
  3887  006942  EFA5  F034         	goto	u3280
  3888  006946                     u3281:
  3889  006946  EFA9  F034         	goto	l3970
  3890  00694A                     u3280:
  3891  00694A                     
  3892                           ; BSR set to: 0
  3893  00694A  0E27               	movlw	39
  3894  00694C  6F83               	movwf	(testarDisplay2@conta+1)& (0+255),b
  3895  00694E  0E0F               	movlw	15
  3896  006950  6F82               	movwf	testarDisplay2@conta& (0+255),b
  3897  006952                     l3970:
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;MyIHM_1A.c: 259:     } while( PORTBbits.RB1 != 0 );
  3901  006952  B281               	btfsc	129,1,c	;volatile
  3902  006954  EFAE  F034         	goto	u3291
  3903  006958  EFB0  F034         	goto	u3290
  3904  00695C                     u3291:
  3905  00695C  EFEB  F033         	goto	l3926
  3906  006960                     u3290:
  3907  006960                     l116:
  3908  006960  A281               	btfss	129,1,c	;volatile
  3909  006962  EFB5  F034         	goto	u3301
  3910  006966  EFB7  F034         	goto	u3300
  3911  00696A                     u3301:
  3912  00696A  EFB0  F034         	goto	l116
  3913  00696E                     u3300:
  3914  00696E  0012               	return		;funcret
  3915  006970                     __end_of_testarDisplay2:
  3916                           	callstack 0
  3917                           
  3918 ;; *************** function _testarDisplay1 *****************
  3919 ;; Defined at:
  3920 ;;		line 161 in file "MyIHM_1A.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;		None
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  displays        5   11[COMRAM] unsigned char [5]
  3925 ;;  idx             1    0        unsigned char 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3935 ;;      Params:         0       0       0       0       0       0       0       0       0
  3936 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3937 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3938 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3939 ;;Total ram usage:        7 bytes
  3940 ;; Hardware stack levels used: 1
  3941 ;; Hardware stack levels required when called: 2
  3942 ;; This function calls:
  3943 ;;		_EscreveLinhaLCD4
  3944 ;; This function is called by:
  3945 ;;		_subMenuDisplay7Seg
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text7
  3950  0052F6                     __ptext7:
  3951                           	callstack 0
  3952  0052F6                     _testarDisplay1:
  3953                           	callstack 27
  3954  0052F6                     
  3955                           ;MyIHM_1A.c: 165:     unsigned char displays[5] = {
  3956  0052F6  EE20  F0E5         	lfsr	2,testarDisplay1@F3511
  3957  0052FA  EE10  F00C         	lfsr	1,testarDisplay1@displays
  3958  0052FE  0E04               	movlw	4
  3959  005300                     u3271:
  3960  005300  CFDB FFE3          	movff	plusw2,plusw1
  3961  005304  06E8               	decf	wreg,f,c
  3962  005306  E2FC               	bc	u3271
  3963  005308                     
  3964                           ;MyIHM_1A.c: 173:     EscreveLinhaLCD4(1, "Teste 8888      ");
  3965  005308  0E5D               	movlw	low STR_1
  3966  00530A  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3967  00530C  0E7E               	movlw	high STR_1
  3968  00530E  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3969  005310  0E01               	movlw	1
  3970  005312  ECE5  F028         	call	_EscreveLinhaLCD4
  3971  005316                     
  3972                           ;MyIHM_1A.c: 174:     EscreveLinhaLCD4(2, "Aguarde...      ");
  3973  005316  0E4C               	movlw	low STR_2
  3974  005318  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  3975  00531A  0E7E               	movlw	high STR_2
  3976  00531C  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  3977  00531E  0E02               	movlw	2
  3978  005320  ECE5  F028         	call	_EscreveLinhaLCD4
  3979  005324                     
  3980                           ;MyIHM_1A.c: 175:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  3981  005324  0E0B               	movlw	11
  3982  005326  6E0B               	movwf	(??_testarDisplay1+1)^0,c
  3983  005328  0E26               	movlw	38
  3984  00532A  6E0A               	movwf	??_testarDisplay1^0,c
  3985  00532C  0E5E               	movlw	94
  3986  00532E                     u4337:
  3987  00532E  2EE8               	decfsz	wreg,f,c
  3988  005330  D7FE               	bra	u4337
  3989  005332  2E0A               	decfsz	??_testarDisplay1^0,f,c
  3990  005334  D7FC               	bra	u4337
  3991  005336  2E0B               	decfsz	(??_testarDisplay1+1)^0,f,c
  3992  005338  D7FA               	bra	u4337
  3993  00533A                     
  3994                           ;MyIHM_1A.c: 177:     TRISA = 0b00000000;
  3995  00533A  0E00               	movlw	0
  3996  00533C  6E92               	movwf	146,c	;volatile
  3997  00533E                     
  3998                           ;MyIHM_1A.c: 179:     PORTD = 0b01111111;
  3999  00533E  0E7F               	movlw	127
  4000  005340  6E83               	movwf	131,c	;volatile
  4001  005342                     
  4002                           ;MyIHM_1A.c: 181:     PORTAbits.RA2 = 1;
  4003  005342  8480               	bsf	128,2,c	;volatile
  4004  005344                     
  4005                           ;MyIHM_1A.c: 182:     PORTAbits.RA3 = 1;
  4006  005344  8680               	bsf	128,3,c	;volatile
  4007  005346                     
  4008                           ;MyIHM_1A.c: 183:     PORTAbits.RA4 = 1;
  4009  005346  8880               	bsf	128,4,c	;volatile
  4010  005348                     
  4011                           ;MyIHM_1A.c: 184:     PORTAbits.RA5 = 1;
  4012  005348  8A80               	bsf	128,5,c	;volatile
  4013  00534A                     
  4014                           ;MyIHM_1A.c: 186:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  4015  00534A  0E1F               	movlw	31
  4016  00534C  6E0B               	movwf	(??_testarDisplay1+1)^0,c
  4017  00534E  0E71               	movlw	113
  4018  005350  6E0A               	movwf	??_testarDisplay1^0,c
  4019  005352  0E1E               	movlw	30
  4020  005354                     u4347:
  4021  005354  2EE8               	decfsz	wreg,f,c
  4022  005356  D7FE               	bra	u4347
  4023  005358  2E0A               	decfsz	??_testarDisplay1^0,f,c
  4024  00535A  D7FC               	bra	u4347
  4025  00535C  2E0B               	decfsz	(??_testarDisplay1+1)^0,f,c
  4026  00535E  D7FA               	bra	u4347
  4027  005360  D000               	nop2	
  4028  005362                     
  4029                           ;MyIHM_1A.c: 188:     PORTAbits.RA2 = 0;
  4030  005362  9480               	bcf	128,2,c	;volatile
  4031  005364                     
  4032                           ;MyIHM_1A.c: 189:     PORTAbits.RA3 = 0;
  4033  005364  9680               	bcf	128,3,c	;volatile
  4034  005366                     
  4035                           ;MyIHM_1A.c: 190:     PORTAbits.RA4 = 0;
  4036  005366  9880               	bcf	128,4,c	;volatile
  4037  005368                     
  4038                           ;MyIHM_1A.c: 191:     PORTAbits.RA5 = 0;
  4039  005368  9A80               	bcf	128,5,c	;volatile
  4040  00536A                     
  4041                           ;MyIHM_1A.c: 193:     EscreveLinhaLCD4(1, "Teste 8888      ");
  4042  00536A  0E5D               	movlw	low STR_1
  4043  00536C  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  4044  00536E  0E7E               	movlw	high STR_1
  4045  005370  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  4046  005372  0E01               	movlw	1
  4047  005374  ECE5  F028         	call	_EscreveLinhaLCD4
  4048  005378                     
  4049                           ;MyIHM_1A.c: 194:     EscreveLinhaLCD4(2, "Pronto....      ");
  4050  005378  0E3B               	movlw	low STR_4
  4051  00537A  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  4052  00537C  0E7E               	movlw	high STR_4
  4053  00537E  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  4054  005380  0E02               	movlw	2
  4055  005382  ECE5  F028         	call	_EscreveLinhaLCD4
  4056  005386                     
  4057                           ;MyIHM_1A.c: 195:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  4058  005386  0E0B               	movlw	11
  4059  005388  6E0B               	movwf	(??_testarDisplay1+1)^0,c
  4060  00538A  0E26               	movlw	38
  4061  00538C  6E0A               	movwf	??_testarDisplay1^0,c
  4062  00538E  0E5E               	movlw	94
  4063  005390                     u4357:
  4064  005390  2EE8               	decfsz	wreg,f,c
  4065  005392  D7FE               	bra	u4357
  4066  005394  2E0A               	decfsz	??_testarDisplay1^0,f,c
  4067  005396  D7FC               	bra	u4357
  4068  005398  2E0B               	decfsz	(??_testarDisplay1+1)^0,f,c
  4069  00539A  D7FA               	bra	u4357
  4070  00539C  0012               	return		;funcret
  4071  00539E                     __end_of_testarDisplay1:
  4072                           	callstack 0
  4073                           
  4074 ;; *************** function _subMenuCooler *****************
  4075 ;; Defined at:
  4076 ;;		line 694 in file "MyIHM_1A.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;  vopc            2   40[BANK0 ] int 
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  2  339[None  ] short 
  4083 ;; Registers used:
  4084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4090 ;;      Params:         0       0       0       0       0       0       0       0       0
  4091 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4092 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4093 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4094 ;;Total ram usage:        4 bytes
  4095 ;; Hardware stack levels used: 1
  4096 ;; Hardware stack levels required when called: 9
  4097 ;; This function calls:
  4098 ;;		_EscreveLinhaLCD4
  4099 ;;		_capturaUpDown
  4100 ;;		_testarCoolerPot
  4101 ;;		_testarCoolerPotUpDown
  4102 ;; This function is called by:
  4103 ;;		_main
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text8
  4108  005E7C                     __ptext8:
  4109                           	callstack 0
  4110  005E7C                     _subMenuCooler:
  4111                           	callstack 21
  4112  005E7C                     l4420:
  4113                           
  4114                           ;MyIHM_1A.c: 695:     int vopc = 1;
  4115  005E7C  0E00               	movlw	0
  4116  005E7E  0100               	movlb	0	; () banked
  4117  005E80  6F89               	movwf	(subMenuCooler@vopc+1)& (0+255),b
  4118  005E82  0E01               	movlw	1
  4119  005E84  6F88               	movwf	subMenuCooler@vopc& (0+255),b
  4120  005E86                     l4422:
  4121                           
  4122                           ;MyIHM_1A.c: 697:         vopc = capturaUpDown(vopc);
  4123  005E86  C088  F001         	movff	subMenuCooler@vopc,capturaUpDown@opt
  4124  005E8A  C089  F002         	movff	subMenuCooler@vopc+1,capturaUpDown@opt+1
  4125  005E8E  ECC4  F026         	call	_capturaUpDown	;wreg free
  4126  005E92  C001  F088         	movff	?_capturaUpDown,subMenuCooler@vopc
  4127  005E96  C002  F089         	movff	?_capturaUpDown+1,subMenuCooler@vopc+1
  4128                           
  4129                           ;MyIHM_1A.c: 698:         switch(vopc){
  4130  005E9A  EFCF  F02F         	goto	l4456
  4131  005E9E                     l4424:
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;MyIHM_1A.c: 700:                 EscreveLinhaLCD4(1, ">Potenciometro 1");
  4135  005E9E  0E8F               	movlw	low STR_50
  4136  005EA0  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  4137  005EA2  0E7F               	movlw	high STR_50
  4138  005EA4  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  4139  005EA6  0E01               	movlw	1
  4140  005EA8  ECE5  F028         	call	_EscreveLinhaLCD4
  4141                           
  4142                           ;MyIHM_1A.c: 701:                 EscreveLinhaLCD4(2, " Potenciometro 2");
  4143  005EAC  0EA0               	movlw	low STR_51
  4144  005EAE  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  4145  005EB0  0E7F               	movlw	high STR_51
  4146  005EB2  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  4147  005EB4  0E02               	movlw	2
  4148  005EB6  ECE5  F028         	call	_EscreveLinhaLCD4
  4149  005EBA                     
  4150                           ;MyIHM_1A.c: 702:                 if (PORTBbits.RB1 == 0 ){
  4151  005EBA  B281               	btfsc	129,1,c	;volatile
  4152  005EBC  EF62  F02F         	goto	u3981
  4153  005EC0  EF64  F02F         	goto	u3980
  4154  005EC4                     u3981:
  4155  005EC4  EF43  F02F         	goto	l4422
  4156  005EC8                     u3980:
  4157  005EC8                     l344:
  4158  005EC8  A281               	btfss	129,1,c	;volatile
  4159  005ECA  EF69  F02F         	goto	u3991
  4160  005ECE  EF6B  F02F         	goto	u3990
  4161  005ED2                     u3991:
  4162  005ED2  EF64  F02F         	goto	l344
  4163  005ED6                     u3990:
  4164  005ED6                     
  4165                           ;MyIHM_1A.c: 704:                     testarCoolerPot(0);
  4166  005ED6  0E00               	movlw	0
  4167  005ED8  ECB3  F035         	call	_testarCoolerPot
  4168  005EDC  EF43  F02F         	goto	l4422
  4169  005EE0                     l4432:
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;MyIHM_1A.c: 708:                  EscreveLinhaLCD4(1, ">Potenciometro 2");
  4173  005EE0  0EB1               	movlw	low STR_52
  4174  005EE2  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  4175  005EE4  0E7F               	movlw	high STR_52
  4176  005EE6  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  4177  005EE8  0E01               	movlw	1
  4178  005EEA  ECE5  F028         	call	_EscreveLinhaLCD4
  4179                           
  4180                           ;MyIHM_1A.c: 709:                  EscreveLinhaLCD4(2, " RB2+ RB0-      ");
  4181  005EEE  0E2A               	movlw	low STR_53
  4182  005EF0  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  4183  005EF2  0E7E               	movlw	high STR_53
  4184  005EF4  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  4185  005EF6  0E02               	movlw	2
  4186  005EF8  ECE5  F028         	call	_EscreveLinhaLCD4
  4187  005EFC                     
  4188                           ;MyIHM_1A.c: 710:                  if (PORTBbits.RB1 == 0){
  4189  005EFC  B281               	btfsc	129,1,c	;volatile
  4190  005EFE  EF83  F02F         	goto	u4001
  4191  005F02  EF85  F02F         	goto	u4000
  4192  005F06                     u4001:
  4193  005F06  EF43  F02F         	goto	l4422
  4194  005F0A                     u4000:
  4195  005F0A                     l350:
  4196  005F0A  A281               	btfss	129,1,c	;volatile
  4197  005F0C  EF8A  F02F         	goto	u4011
  4198  005F10  EF8C  F02F         	goto	u4010
  4199  005F14                     u4011:
  4200  005F14  EF85  F02F         	goto	l350
  4201  005F18                     u4010:
  4202  005F18                     
  4203                           ;MyIHM_1A.c: 712:                      testarCoolerPot(1);
  4204  005F18  0E01               	movlw	1
  4205  005F1A  ECB3  F035         	call	_testarCoolerPot
  4206  005F1E  EF43  F02F         	goto	l4422
  4207  005F22                     l4440:
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;MyIHM_1A.c: 716:                  EscreveLinhaLCD4(1, ">RB2- RB0+      ");
  4211  005F22  0E19               	movlw	low STR_54
  4212  005F24  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  4213  005F26  0E7E               	movlw	high STR_54
  4214  005F28  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  4215  005F2A  0E01               	movlw	1
  4216  005F2C  ECE5  F028         	call	_EscreveLinhaLCD4
  4217                           
  4218                           ;MyIHM_1A.c: 717:                  EscreveLinhaLCD4(2, " Voltar         ");
  4219  005F30  0E4D               	movlw	low STR_25
  4220  005F32  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  4221  005F34  0E7D               	movlw	high STR_25
  4222  005F36  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  4223  005F38  0E02               	movlw	2
  4224  005F3A  ECE5  F028         	call	_EscreveLinhaLCD4
  4225  005F3E                     
  4226                           ;MyIHM_1A.c: 718:                  if(PORTBbits.RB1==0){
  4227  005F3E  B281               	btfsc	129,1,c	;volatile
  4228  005F40  EFA4  F02F         	goto	u4021
  4229  005F44  EFA6  F02F         	goto	u4020
  4230  005F48                     u4021:
  4231  005F48  EF43  F02F         	goto	l4422
  4232  005F4C                     u4020:
  4233  005F4C                     l355:
  4234  005F4C  A281               	btfss	129,1,c	;volatile
  4235  005F4E  EFAB  F02F         	goto	u4031
  4236  005F52  EFAD  F02F         	goto	u4030
  4237  005F56                     u4031:
  4238  005F56  EFA6  F02F         	goto	l355
  4239  005F5A                     u4030:
  4240  005F5A                     
  4241                           ;MyIHM_1A.c: 720:                      testarCoolerPotUpDown();
  4242  005F5A  ECDB  F036         	call	_testarCoolerPotUpDown	;wreg free
  4243  005F5E  EF43  F02F         	goto	l4422
  4244  005F62                     l4448:
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;MyIHM_1A.c: 724:                 EscreveLinhaLCD4(1, ">Voltar          ");
  4248  005F62  0E68               	movlw	low STR_56
  4249  005F64  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  4250  005F66  0E7C               	movlw	high STR_56
  4251  005F68  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  4252  005F6A  0E01               	movlw	1
  4253  005F6C  ECE5  F028         	call	_EscreveLinhaLCD4
  4254                           
  4255                           ;MyIHM_1A.c: 725:                 EscreveLinhaLCD4(2, "_________________");
  4256  005F70  0EE6               	movlw	low STR_57
  4257  005F72  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  4258  005F74  0E7C               	movlw	high STR_57
  4259  005F76  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  4260  005F78  0E02               	movlw	2
  4261  005F7A  ECE5  F028         	call	_EscreveLinhaLCD4
  4262  005F7E                     
  4263                           ;MyIHM_1A.c: 726:                 if (PORTBbits.RB1 == 0 ){
  4264  005F7E  B281               	btfsc	129,1,c	;volatile
  4265  005F80  EFC4  F02F         	goto	u4041
  4266  005F84  EFC6  F02F         	goto	u4040
  4267  005F88                     u4041:
  4268  005F88  EF43  F02F         	goto	l4422
  4269  005F8C                     u4040:
  4270  005F8C                     l360:
  4271  005F8C  A281               	btfss	129,1,c	;volatile
  4272  005F8E  EFCB  F02F         	goto	u4051
  4273  005F92  EFCD  F02F         	goto	u4050
  4274  005F96                     u4051:
  4275  005F96  EFC6  F02F         	goto	l360
  4276  005F9A                     u4050:
  4277  005F9A  EFEE  F02F         	goto	l363
  4278  005F9E                     l4456:
  4279  005F9E  C088  F086         	movff	subMenuCooler@vopc,??_subMenuCooler
  4280  005FA2  C089  F087         	movff	subMenuCooler@vopc+1,??_subMenuCooler+1
  4281                           
  4282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4283                           ; Switch size 1, requested type "simple"
  4284                           ; Number of cases is 1, Range of values is 0 to 0
  4285                           ; switch strategies available:
  4286                           ; Name         Instructions Cycles
  4287                           ; simple_byte            4     3 (average)
  4288                           ;	Chosen strategy is simple_byte
  4289  005FA6  0100               	movlb	0	; () banked
  4290  005FA8  5187               	movf	(??_subMenuCooler+1)& (0+255),w,b
  4291  005FAA  0A00               	xorlw	0	; case 0
  4292  005FAC  B4D8               	btfsc	status,2,c
  4293  005FAE  EFDB  F02F         	goto	l4796
  4294  005FB2  EF3E  F02F         	goto	l4420
  4295  005FB6                     l4796:
  4296                           
  4297                           ; BSR set to: 0
  4298                           ; Switch size 1, requested type "simple"
  4299                           ; Number of cases is 4, Range of values is 1 to 4
  4300                           ; switch strategies available:
  4301                           ; Name         Instructions Cycles
  4302                           ; simple_byte           13     7 (average)
  4303                           ;	Chosen strategy is simple_byte
  4304  005FB6  5186               	movf	??_subMenuCooler& (0+255),w,b
  4305  005FB8  0A01               	xorlw	1	; case 1
  4306  005FBA  B4D8               	btfsc	status,2,c
  4307  005FBC  EF4F  F02F         	goto	l4424
  4308  005FC0  0A03               	xorlw	3	; case 2
  4309  005FC2  B4D8               	btfsc	status,2,c
  4310  005FC4  EF70  F02F         	goto	l4432
  4311  005FC8  0A01               	xorlw	1	; case 3
  4312  005FCA  B4D8               	btfsc	status,2,c
  4313  005FCC  EF91  F02F         	goto	l4440
  4314  005FD0  0A07               	xorlw	7	; case 4
  4315  005FD2  B4D8               	btfsc	status,2,c
  4316  005FD4  EFB1  F02F         	goto	l4448
  4317  005FD8  EF3E  F02F         	goto	l4420
  4318  005FDC                     l363:
  4319  005FDC  0012               	return		;funcret
  4320  005FDE                     __end_of_subMenuCooler:
  4321                           	callstack 0
  4322                           
  4323 ;; *************** function _testarCoolerPotUpDown *****************
  4324 ;; Defined at:
  4325 ;;		line 408 in file "MyIHM_1A.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;		None
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  msg            16    9[BANK0 ] unsigned char [16]
  4330 ;;  vlrUpDown       2   33[BANK0 ] short 
  4331 ;;  t               2   31[BANK0 ] unsigned short 
  4332 ;;  vaux            2   25[BANK0 ] unsigned short 
  4333 ;;  opcao           2    0        unsigned short 
  4334 ;;  DD4             1   30[BANK0 ] unsigned char 
  4335 ;;  DD3             1   29[BANK0 ] unsigned char 
  4336 ;;  DD2             1   28[BANK0 ] unsigned char 
  4337 ;;  DD1             1   27[BANK0 ] unsigned char 
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  1    wreg      void 
  4340 ;; Registers used:
  4341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4347 ;;      Params:         0       0       0       0       0       0       0       0       0
  4348 ;;      Locals:         0      26       0       0       0       0       0       0       0
  4349 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4350 ;;      Totals:         0      27       0       0       0       0       0       0       0
  4351 ;;Total ram usage:       27 bytes
  4352 ;; Hardware stack levels used: 1
  4353 ;; Hardware stack levels required when called: 8
  4354 ;; This function calls:
  4355 ;;		_Escreve7Seg
  4356 ;;		_EscreveLinhaLCD4
  4357 ;;		___awdiv
  4358 ;;		___awmod
  4359 ;;		___lwdiv
  4360 ;;		_inicializaPWM
  4361 ;;		_inicializaTimer
  4362 ;;		_setaFreqPWM
  4363 ;;		_setaPWM1
  4364 ;;		_sprintf
  4365 ;; This function is called by:
  4366 ;;		_subMenuCooler
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text9
  4371  006DB6                     __ptext9:
  4372                           	callstack 0
  4373  006DB6                     _testarCoolerPotUpDown:
  4374                           	callstack 21
  4375  006DB6                     
  4376                           ;MyIHM_1A.c: 414:     unsigned char DD1, DD2, DD3, DD4;;MyIHM_1A.c: 415:     unsigned sh
      +                          ort t, opcao;;MyIHM_1A.c: 416:     short vlrUpDown = 1;
  4377  006DB6  0E00               	movlw	0
  4378  006DB8  0100               	movlb	0	; () banked
  4379  006DBA  6F82               	movwf	(testarCoolerPotUpDown@vlrUpDown+1)& (0+255),b
  4380  006DBC  0E01               	movlw	1
  4381  006DBE  6F81               	movwf	testarCoolerPotUpDown@vlrUpDown& (0+255),b
  4382                           
  4383                           ;MyIHM_1A.c: 419:     PORTA = 0b00000000;
  4384  006DC0  0E00               	movlw	0
  4385  006DC2  6E80               	movwf	128,c	;volatile
  4386                           
  4387                           ;MyIHM_1A.c: 420:     PORTD = 0b00000000;
  4388  006DC4  0E00               	movlw	0
  4389  006DC6  6E83               	movwf	131,c	;volatile
  4390                           
  4391                           ;MyIHM_1A.c: 422:     TRISA = 0b00000000;
  4392  006DC8  0E00               	movlw	0
  4393  006DCA  6E92               	movwf	146,c	;volatile
  4394                           
  4395                           ;MyIHM_1A.c: 423:     TRISD = 0b00000000;
  4396  006DCC  0E00               	movlw	0
  4397  006DCE  6E95               	movwf	149,c	;volatile
  4398  006DD0                     
  4399                           ; BSR set to: 0
  4400                           ;MyIHM_1A.c: 425:     inicializaTimer();
  4401  006DD0  ECAF  F025         	call	_inicializaTimer	;wreg free
  4402  006DD4                     
  4403                           ;MyIHM_1A.c: 426:     inicializaPWM();
  4404  006DD4  ECBB  F025         	call	_inicializaPWM	;wreg free
  4405  006DD8                     
  4406                           ;MyIHM_1A.c: 427:     setaFreqPWM(1000);
  4407  006DD8  0E03               	movlw	3
  4408  006DDA  6E10               	movwf	(setaFreqPWM@freq+1)^0,c
  4409  006DDC  0EE8               	movlw	232
  4410  006DDE  6E0F               	movwf	setaFreqPWM@freq^0,c
  4411  006DE0  ECFB  F025         	call	_setaFreqPWM	;wreg free
  4412  006DE4                     
  4413                           ;MyIHM_1A.c: 429:     _delay((unsigned long)((10)*(8000000/4000.0)));
  4414  006DE4  0E1A               	movlw	26
  4415  006DE6  0100               	movlb	0	; () banked
  4416  006DE8  6F68               	movwf	??_testarCoolerPotUpDown& (0+255),b
  4417  006DEA  0EF8               	movlw	248
  4418  006DEC                     u4367:
  4419  006DEC  2EE8               	decfsz	wreg,f,c
  4420  006DEE  D7FE               	bra	u4367
  4421  006DF0  2F68               	decfsz	??_testarCoolerPotUpDown& (0+255),f,b
  4422  006DF2  D7FC               	bra	u4367
  4423  006DF4  F000               	nop	
  4424  006DF6                     l4132:
  4425                           
  4426                           ;MyIHM_1A.c: 433:           sprintf(msg,"Potenc.  %d%%    ",vlrUpDown);
  4427  006DF6  0E69               	movlw	low testarCoolerPotUpDown@msg
  4428  006DF8  6E5A               	movwf	sprintf@s^0,c
  4429  006DFA  0E00               	movlw	high testarCoolerPotUpDown@msg
  4430  006DFC  6E5B               	movwf	(sprintf@s+1)^0,c
  4431  006DFE  0EB0               	movlw	low STR_18
  4432  006E00  6E5C               	movwf	sprintf@fmt^0,c
  4433  006E02  0E7C               	movlw	high STR_18
  4434  006E04  6E5D               	movwf	(sprintf@fmt+1)^0,c
  4435  006E06  C081  F05E         	movff	testarCoolerPotUpDown@vlrUpDown,?_sprintf+4
  4436  006E0A  C082  F05F         	movff	testarCoolerPotUpDown@vlrUpDown+1,?_sprintf+5
  4437  006E0E  ECEC  F026         	call	_sprintf	;wreg free
  4438  006E12                     
  4439                           ;MyIHM_1A.c: 434:           EscreveLinhaLCD4(1,msg);
  4440  006E12  0E69               	movlw	low testarCoolerPotUpDown@msg
  4441  006E14  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  4442  006E16  0E00               	movlw	high testarCoolerPotUpDown@msg
  4443  006E18  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  4444  006E1A  0E01               	movlw	1
  4445  006E1C  ECE5  F028         	call	_EscreveLinhaLCD4
  4446  006E20                     
  4447                           ;MyIHM_1A.c: 435:           EscreveLinhaLCD4(2,"RB1 p/VOLTAR     ");
  4448  006E20  0E9E               	movlw	low STR_17
  4449  006E22  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  4450  006E24  0E7C               	movlw	high STR_17
  4451  006E26  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  4452  006E28  0E02               	movlw	2
  4453  006E2A  ECE5  F028         	call	_EscreveLinhaLCD4
  4454  006E2E                     
  4455                           ;MyIHM_1A.c: 436:           Escreve7Seg(5, 0, 0);
  4456  006E2E  0E00               	movlw	0
  4457  006E30  6E01               	movwf	Escreve7Seg@DADO^0,c
  4458  006E32  0E00               	movlw	0
  4459  006E34  6E02               	movwf	Escreve7Seg@PONTO^0,c
  4460  006E36  0E05               	movlw	5
  4461  006E38  ECA1  F030         	call	_Escreve7Seg
  4462  006E3C                     
  4463                           ;MyIHM_1A.c: 438:         setaPWM1((unsigned char) vlrUpDown);
  4464  006E3C  0100               	movlb	0	; () banked
  4465  006E3E  5181               	movf	testarCoolerPotUpDown@vlrUpDown& (0+255),w,b
  4466  006E40  EC34  F028         	call	_setaPWM1
  4467  006E44                     
  4468                           ;MyIHM_1A.c: 440:         DD1 = (vlrUpDown)/100;
  4469  006E44  C081  F001         	movff	testarCoolerPotUpDown@vlrUpDown,___awdiv@dividend
  4470  006E48  C082  F002         	movff	testarCoolerPotUpDown@vlrUpDown+1,___awdiv@dividend+1
  4471  006E4C  0E00               	movlw	0
  4472  006E4E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4473  006E50  0E64               	movlw	100
  4474  006E52  6E03               	movwf	___awdiv@divisor^0,c
  4475  006E54  EC27  F02A         	call	___awdiv	;wreg free
  4476  006E58  5001               	movf	?___awdiv^0,w,c
  4477  006E5A  0100               	movlb	0	; () banked
  4478  006E5C  6F7B               	movwf	testarCoolerPotUpDown@DD1& (0+255),b
  4479  006E5E                     
  4480                           ; BSR set to: 0
  4481                           ;MyIHM_1A.c: 441:         vaux = vlrUpDown%100;
  4482  006E5E  C081  F001         	movff	testarCoolerPotUpDown@vlrUpDown,___awmod@dividend
  4483  006E62  C082  F002         	movff	testarCoolerPotUpDown@vlrUpDown+1,___awmod@dividend+1
  4484  006E66  0E00               	movlw	0
  4485  006E68  6E04               	movwf	(___awmod@divisor+1)^0,c
  4486  006E6A  0E64               	movlw	100
  4487  006E6C  6E03               	movwf	___awmod@divisor^0,c
  4488  006E6E  ECCF  F029         	call	___awmod	;wreg free
  4489  006E72  C001  F079         	movff	?___awmod,testarCoolerPotUpDown@vaux
  4490  006E76  C002  F07A         	movff	?___awmod+1,testarCoolerPotUpDown@vaux+1
  4491  006E7A                     
  4492                           ;MyIHM_1A.c: 442:         DD2 = (vaux)/10;
  4493  006E7A  C079  F001         	movff	testarCoolerPotUpDown@vaux,___lwdiv@dividend
  4494  006E7E  C07A  F002         	movff	testarCoolerPotUpDown@vaux+1,___lwdiv@dividend+1
  4495  006E82  0E00               	movlw	0
  4496  006E84  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  4497  006E86  0E0A               	movlw	10
  4498  006E88  6E03               	movwf	___lwdiv@divisor^0,c
  4499  006E8A  EC6A  F028         	call	___lwdiv	;wreg free
  4500  006E8E  5001               	movf	?___lwdiv^0,w,c
  4501  006E90  0100               	movlb	0	; () banked
  4502  006E92  6F7C               	movwf	testarCoolerPotUpDown@DD2& (0+255),b
  4503  006E94                     
  4504                           ; BSR set to: 0
  4505                           ;MyIHM_1A.c: 443:         DD3 = vlrUpDown%10;
  4506  006E94  C081  F001         	movff	testarCoolerPotUpDown@vlrUpDown,___awmod@dividend
  4507  006E98  C082  F002         	movff	testarCoolerPotUpDown@vlrUpDown+1,___awmod@dividend+1
  4508  006E9C  0E00               	movlw	0
  4509  006E9E  6E04               	movwf	(___awmod@divisor+1)^0,c
  4510  006EA0  0E0A               	movlw	10
  4511  006EA2  6E03               	movwf	___awmod@divisor^0,c
  4512  006EA4  ECCF  F029         	call	___awmod	;wreg free
  4513  006EA8  5001               	movf	?___awmod^0,w,c
  4514  006EAA  0100               	movlb	0	; () banked
  4515  006EAC  6F7D               	movwf	testarCoolerPotUpDown@DD3& (0+255),b
  4516  006EAE                     
  4517                           ; BSR set to: 0
  4518                           ;MyIHM_1A.c: 444:         DD4 = 253;
  4519  006EAE  0EFD               	movlw	253
  4520  006EB0  6F7E               	movwf	testarCoolerPotUpDown@DD4& (0+255),b
  4521  006EB2                     
  4522                           ; BSR set to: 0
  4523                           ;MyIHM_1A.c: 447:         t = 0;
  4524  006EB2  0E00               	movlw	0
  4525  006EB4  6F80               	movwf	(testarCoolerPotUpDown@t+1)& (0+255),b
  4526  006EB6  0E00               	movlw	0
  4527  006EB8  6F7F               	movwf	testarCoolerPotUpDown@t& (0+255),b
  4528                           
  4529                           ;MyIHM_1A.c: 448:         while(t < 2){
  4530  006EBA  EFAD  F037         	goto	l4170
  4531  006EBE                     l4154:
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;MyIHM_1A.c: 449:             Escreve7Seg(4, DD4, 1); _delay((unsigned long)((8)*(800000
      +                          0/4000.0)));
  4535  006EBE  C07E  F001         	movff	testarCoolerPotUpDown@DD4,Escreve7Seg@DADO
  4536  006EC2  0E01               	movlw	1
  4537  006EC4  6E02               	movwf	Escreve7Seg@PONTO^0,c
  4538  006EC6  0E04               	movlw	4
  4539  006EC8  ECA1  F030         	call	_Escreve7Seg
  4540  006ECC  0E15               	movlw	21
  4541  006ECE  0100               	movlb	0	; () banked
  4542  006ED0  6F68               	movwf	??_testarCoolerPotUpDown& (0+255),b
  4543  006ED2  0EC6               	movlw	198
  4544  006ED4                     u4377:
  4545  006ED4  2EE8               	decfsz	wreg,f,c
  4546  006ED6  D7FE               	bra	u4377
  4547  006ED8  2F68               	decfsz	??_testarCoolerPotUpDown& (0+255),f,b
  4548  006EDA  D7FC               	bra	u4377
  4549  006EDC  F000               	nop	
  4550  006EDE                     
  4551                           ;MyIHM_1A.c: 450:             Escreve7Seg(3, DD3, 0); _delay((unsigned long)((8)*(800000
      +                          0/4000.0)));
  4552  006EDE  C07D  F001         	movff	testarCoolerPotUpDown@DD3,Escreve7Seg@DADO
  4553  006EE2  0E00               	movlw	0
  4554  006EE4  6E02               	movwf	Escreve7Seg@PONTO^0,c
  4555  006EE6  0E03               	movlw	3
  4556  006EE8  ECA1  F030         	call	_Escreve7Seg
  4557  006EEC  0E15               	movlw	21
  4558  006EEE  0100               	movlb	0	; () banked
  4559  006EF0  6F68               	movwf	??_testarCoolerPotUpDown& (0+255),b
  4560  006EF2  0EC6               	movlw	198
  4561  006EF4                     u4387:
  4562  006EF4  2EE8               	decfsz	wreg,f,c
  4563  006EF6  D7FE               	bra	u4387
  4564  006EF8  2F68               	decfsz	??_testarCoolerPotUpDown& (0+255),f,b
  4565  006EFA  D7FC               	bra	u4387
  4566  006EFC  F000               	nop	
  4567  006EFE                     
  4568                           ;MyIHM_1A.c: 451:             Escreve7Seg(2, DD2, 0); _delay((unsigned long)((8)*(800000
      +                          0/4000.0)));
  4569  006EFE  C07C  F001         	movff	testarCoolerPotUpDown@DD2,Escreve7Seg@DADO
  4570  006F02  0E00               	movlw	0
  4571  006F04  6E02               	movwf	Escreve7Seg@PONTO^0,c
  4572  006F06  0E02               	movlw	2
  4573  006F08  ECA1  F030         	call	_Escreve7Seg
  4574  006F0C  0E15               	movlw	21
  4575  006F0E  0100               	movlb	0	; () banked
  4576  006F10  6F68               	movwf	??_testarCoolerPotUpDown& (0+255),b
  4577  006F12  0EC6               	movlw	198
  4578  006F14                     u4397:
  4579  006F14  2EE8               	decfsz	wreg,f,c
  4580  006F16  D7FE               	bra	u4397
  4581  006F18  2F68               	decfsz	??_testarCoolerPotUpDown& (0+255),f,b
  4582  006F1A  D7FC               	bra	u4397
  4583  006F1C  F000               	nop	
  4584                           
  4585                           ;MyIHM_1A.c: 452:             Escreve7Seg(1, DD1, 0); _delay((unsigned long)((8)*(800000
      +                          0/4000.0)));
  4586  006F1E  C07B  F001         	movff	testarCoolerPotUpDown@DD1,Escreve7Seg@DADO
  4587  006F22  0E00               	movlw	0
  4588  006F24  6E02               	movwf	Escreve7Seg@PONTO^0,c
  4589  006F26  0E01               	movlw	1
  4590  006F28  ECA1  F030         	call	_Escreve7Seg
  4591  006F2C  0E15               	movlw	21
  4592  006F2E  0100               	movlb	0	; () banked
  4593  006F30  6F68               	movwf	??_testarCoolerPotUpDown& (0+255),b
  4594  006F32  0EC6               	movlw	198
  4595  006F34                     u4407:
  4596  006F34  2EE8               	decfsz	wreg,f,c
  4597  006F36  D7FE               	bra	u4407
  4598  006F38  2F68               	decfsz	??_testarCoolerPotUpDown& (0+255),f,b
  4599  006F3A  D7FC               	bra	u4407
  4600  006F3C  F000               	nop	
  4601  006F3E                     
  4602                           ;MyIHM_1A.c: 453:             Escreve7Seg(7, 0, 0);
  4603  006F3E  0E00               	movlw	0
  4604  006F40  6E01               	movwf	Escreve7Seg@DADO^0,c
  4605  006F42  0E00               	movlw	0
  4606  006F44  6E02               	movwf	Escreve7Seg@PONTO^0,c
  4607  006F46  0E07               	movlw	7
  4608  006F48  ECA1  F030         	call	_Escreve7Seg
  4609  006F4C                     
  4610                           ;MyIHM_1A.c: 454:             t = t+1;
  4611  006F4C  0E01               	movlw	1
  4612  006F4E  0100               	movlb	0	; () banked
  4613  006F50  257F               	addwf	testarCoolerPotUpDown@t& (0+255),w,b
  4614  006F52  6F7F               	movwf	testarCoolerPotUpDown@t& (0+255),b
  4615  006F54  0E00               	movlw	0
  4616  006F56  2180               	addwfc	(testarCoolerPotUpDown@t+1)& (0+255),w,b
  4617  006F58  6F80               	movwf	(testarCoolerPotUpDown@t+1)& (0+255),b
  4618  006F5A                     l4170:
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;MyIHM_1A.c: 448:         while(t < 2){
  4622  006F5A  5180               	movf	(testarCoolerPotUpDown@t+1)& (0+255),w,b
  4623  006F5C  E109               	bnz	u3500
  4624  006F5E  0E02               	movlw	2
  4625  006F60  5D7F               	subwf	testarCoolerPotUpDown@t& (0+255),w,b
  4626  006F62  A0D8               	btfss	status,0,c
  4627  006F64  EFB6  F037         	goto	u3501
  4628  006F68  EFB8  F037         	goto	u3500
  4629  006F6C                     u3501:
  4630  006F6C  EF5F  F037         	goto	l4154
  4631  006F70                     u3500:
  4632  006F70                     
  4633                           ; BSR set to: 0
  4634                           ;MyIHM_1A.c: 456:         if (vlrUpDown >0 && PORTBbits.RB0 ==0 ){
  4635  006F70  BF82               	btfsc	(testarCoolerPotUpDown@vlrUpDown+1)& (0+255),7,b
  4636  006F72  EFC3  F037         	goto	u3511
  4637  006F76  5182               	movf	(testarCoolerPotUpDown@vlrUpDown+1)& (0+255),w,b
  4638  006F78  E108               	bnz	u3510
  4639  006F7A  0581               	decf	testarCoolerPotUpDown@vlrUpDown& (0+255),w,b
  4640  006F7C  A0D8               	btfss	status,0,c
  4641  006F7E  EFC3  F037         	goto	u3511
  4642  006F82  EFC5  F037         	goto	u3510
  4643  006F86                     u3511:
  4644  006F86  EFD9  F037         	goto	l4180
  4645  006F8A                     u3510:
  4646  006F8A                     
  4647                           ; BSR set to: 0
  4648  006F8A  B081               	btfsc	129,0,c	;volatile
  4649  006F8C  EFCA  F037         	goto	u3521
  4650  006F90  EFCC  F037         	goto	u3520
  4651  006F94                     u3521:
  4652  006F94  EFD9  F037         	goto	l4180
  4653  006F98                     u3520:
  4654  006F98                     l190:
  4655  006F98  A081               	btfss	129,0,c	;volatile
  4656  006F9A  EFD1  F037         	goto	u3531
  4657  006F9E  EFD3  F037         	goto	u3530
  4658  006FA2                     u3531:
  4659  006FA2  EFCC  F037         	goto	l190
  4660  006FA6                     u3530:
  4661  006FA6                     
  4662                           ;MyIHM_1A.c: 458:             vlrUpDown--;
  4663  006FA6  0100               	movlb	0	; () banked
  4664  006FA8  0781               	decf	testarCoolerPotUpDown@vlrUpDown& (0+255),f,b
  4665  006FAA  A0D8               	btfss	status,0,c
  4666  006FAC  0782               	decf	(testarCoolerPotUpDown@vlrUpDown+1)& (0+255),f,b
  4667                           
  4668                           ;MyIHM_1A.c: 459:         }else if (vlrUpDown <100 && PORTBbits.RB2 == 0){
  4669  006FAE  EFF8  F037         	goto	l4188
  4670  006FB2                     l4180:
  4671                           
  4672                           ; BSR set to: 0
  4673  006FB2  BF82               	btfsc	(testarCoolerPotUpDown@vlrUpDown+1)& (0+255),7,b
  4674  006FB4  EFE7  F037         	goto	u3540
  4675  006FB8  5182               	movf	(testarCoolerPotUpDown@vlrUpDown+1)& (0+255),w,b
  4676  006FBA  E107               	bnz	u3541
  4677  006FBC  0E64               	movlw	100
  4678  006FBE  5D81               	subwf	testarCoolerPotUpDown@vlrUpDown& (0+255),w,b
  4679  006FC0  B0D8               	btfsc	status,0,c
  4680  006FC2  EFE5  F037         	goto	u3541
  4681  006FC6  EFE7  F037         	goto	u3540
  4682  006FCA                     u3541:
  4683  006FCA  EFF8  F037         	goto	l4188
  4684  006FCE                     u3540:
  4685  006FCE                     
  4686                           ; BSR set to: 0
  4687  006FCE  B481               	btfsc	129,2,c	;volatile
  4688  006FD0  EFEC  F037         	goto	u3551
  4689  006FD4  EFEE  F037         	goto	u3550
  4690  006FD8                     u3551:
  4691  006FD8  EFF8  F037         	goto	l4188
  4692  006FDC                     u3550:
  4693  006FDC                     l195:
  4694  006FDC  A481               	btfss	129,2,c	;volatile
  4695  006FDE  EFF3  F037         	goto	u3561
  4696  006FE2  EFF5  F037         	goto	u3560
  4697  006FE6                     u3561:
  4698  006FE6  EFEE  F037         	goto	l195
  4699  006FEA                     u3560:
  4700  006FEA                     
  4701                           ;MyIHM_1A.c: 461:             vlrUpDown++;
  4702  006FEA  0100               	movlb	0	; () banked
  4703  006FEC  4B81               	infsnz	testarCoolerPotUpDown@vlrUpDown& (0+255),f,b
  4704  006FEE  2B82               	incf	(testarCoolerPotUpDown@vlrUpDown+1)& (0+255),f,b
  4705  006FF0                     l4188:
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;MyIHM_1A.c: 463:         if (PORTBbits.RB1 == 0){
  4709  006FF0  B281               	btfsc	129,1,c	;volatile
  4710  006FF2  EFFD  F037         	goto	u3571
  4711  006FF6  EFFF  F037         	goto	u3570
  4712  006FFA                     u3571:
  4713  006FFA  EFFB  F036         	goto	l4132
  4714  006FFE                     u3570:
  4715  006FFE                     l199:
  4716  006FFE  A281               	btfss	129,1,c	;volatile
  4717  007000  EF04  F038         	goto	u3581
  4718  007004  EF06  F038         	goto	u3580
  4719  007008                     u3581:
  4720  007008  EFFF  F037         	goto	l199
  4721  00700C                     u3580:
  4722  00700C                     
  4723                           ;MyIHM_1A.c: 468:     setaPWM1(0);
  4724  00700C  0E00               	movlw	0
  4725  00700E  EC34  F028         	call	_setaPWM1
  4726  007012  0012               	return		;funcret
  4727  007014                     __end_of_testarCoolerPotUpDown:
  4728                           	callstack 0
  4729                           
  4730 ;; *************** function ___awmod *****************
  4731 ;; Defined at:
  4732 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  dividend        2    0[COMRAM] int 
  4735 ;;  divisor         2    2[COMRAM] int 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;  sign            1    5[COMRAM] unsigned char 
  4738 ;;  counter         1    4[COMRAM] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  2    0[COMRAM] int 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4748 ;;      Params:         4       0       0       0       0       0       0       0       0
  4749 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4751 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4752 ;;Total ram usage:        6 bytes
  4753 ;; Hardware stack levels used: 1
  4754 ;; This function calls:
  4755 ;;		Nothing
  4756 ;; This function is called by:
  4757 ;;		_testarCoolerPotUpDown
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text10
  4762  00539E                     __ptext10:
  4763                           	callstack 0
  4764  00539E                     ___awmod:
  4765                           	callstack 28
  4766  00539E  0E00               	movlw	0
  4767  0053A0  6E06               	movwf	___awmod@sign^0,c
  4768  0053A2  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4769  0053A4  EFD8  F029         	goto	u3010
  4770  0053A8  EFD6  F029         	goto	u3011
  4771  0053AC                     u3011:
  4772  0053AC  EFDE  F029         	goto	l3738
  4773  0053B0                     u3010:
  4774  0053B0  6C01               	negf	___awmod@dividend^0,c
  4775  0053B2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4776  0053B4  B0D8               	btfsc	status,0,c
  4777  0053B6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4778  0053B8  0E01               	movlw	1
  4779  0053BA  6E06               	movwf	___awmod@sign^0,c
  4780  0053BC                     l3738:
  4781  0053BC  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4782  0053BE  EFE5  F029         	goto	u3020
  4783  0053C2  EFE3  F029         	goto	u3021
  4784  0053C6                     u3021:
  4785  0053C6  EFE9  F029         	goto	l3742
  4786  0053CA                     u3020:
  4787  0053CA  6C03               	negf	___awmod@divisor^0,c
  4788  0053CC  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4789  0053CE  B0D8               	btfsc	status,0,c
  4790  0053D0  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4791  0053D2                     l3742:
  4792  0053D2  5003               	movf	___awmod@divisor^0,w,c
  4793  0053D4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4794  0053D6  B4D8               	btfsc	status,2,c
  4795  0053D8  EFF0  F029         	goto	u3031
  4796  0053DC  EFF2  F029         	goto	u3030
  4797  0053E0                     u3031:
  4798  0053E0  EF16  F02A         	goto	l3758
  4799  0053E4                     u3030:
  4800  0053E4  0E01               	movlw	1
  4801  0053E6  6E05               	movwf	___awmod@counter^0,c
  4802  0053E8  EFFA  F029         	goto	l3748
  4803  0053EC                     l3746:
  4804  0053EC  90D8               	bcf	status,0,c
  4805  0053EE  3603               	rlcf	___awmod@divisor^0,f,c
  4806  0053F0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4807  0053F2  2A05               	incf	___awmod@counter^0,f,c
  4808  0053F4                     l3748:
  4809  0053F4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4810  0053F6  EFFF  F029         	goto	u3041
  4811  0053FA  EF01  F02A         	goto	u3040
  4812  0053FE                     u3041:
  4813  0053FE  EFF6  F029         	goto	l3746
  4814  005402                     u3040:
  4815  005402                     l3750:
  4816  005402  5003               	movf	___awmod@divisor^0,w,c
  4817  005404  5C01               	subwf	___awmod@dividend^0,w,c
  4818  005406  5004               	movf	(___awmod@divisor+1)^0,w,c
  4819  005408  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4820  00540A  A0D8               	btfss	status,0,c
  4821  00540C  EF0A  F02A         	goto	u3051
  4822  005410  EF0C  F02A         	goto	u3050
  4823  005414                     u3051:
  4824  005414  EF10  F02A         	goto	l3754
  4825  005418                     u3050:
  4826  005418  5003               	movf	___awmod@divisor^0,w,c
  4827  00541A  5E01               	subwf	___awmod@dividend^0,f,c
  4828  00541C  5004               	movf	(___awmod@divisor+1)^0,w,c
  4829  00541E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4830  005420                     l3754:
  4831  005420  90D8               	bcf	status,0,c
  4832  005422  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4833  005424  3203               	rrcf	___awmod@divisor^0,f,c
  4834  005426  2E05               	decfsz	___awmod@counter^0,f,c
  4835  005428  EF01  F02A         	goto	l3750
  4836  00542C                     l3758:
  4837  00542C  5006               	movf	___awmod@sign^0,w,c
  4838  00542E  B4D8               	btfsc	status,2,c
  4839  005430  EF1C  F02A         	goto	u3061
  4840  005434  EF1E  F02A         	goto	u3060
  4841  005438                     u3061:
  4842  005438  EF22  F02A         	goto	l3762
  4843  00543C                     u3060:
  4844  00543C  6C01               	negf	___awmod@dividend^0,c
  4845  00543E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4846  005440  B0D8               	btfsc	status,0,c
  4847  005442  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4848  005444                     l3762:
  4849  005444  C001  F001         	movff	___awmod@dividend,?___awmod
  4850  005448  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4851  00544C  0012               	return		;funcret
  4852  00544E                     __end_of___awmod:
  4853                           	callstack 0
  4854                           
  4855 ;; *************** function ___awdiv *****************
  4856 ;; Defined at:
  4857 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  dividend        2    0[COMRAM] int 
  4860 ;;  divisor         2    2[COMRAM] int 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  quotient        2    6[COMRAM] int 
  4863 ;;  sign            1    5[COMRAM] unsigned char 
  4864 ;;  counter         1    4[COMRAM] unsigned char 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  2    0[COMRAM] int 
  4867 ;; Registers used:
  4868 ;;		wreg, status,2, status,0
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4874 ;;      Params:         4       0       0       0       0       0       0       0       0
  4875 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4877 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4878 ;;Total ram usage:        8 bytes
  4879 ;; Hardware stack levels used: 1
  4880 ;; This function calls:
  4881 ;;		Nothing
  4882 ;; This function is called by:
  4883 ;;		_testarCoolerPotUpDown
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           	psect	text11
  4888  00544E                     __ptext11:
  4889                           	callstack 0
  4890  00544E                     ___awdiv:
  4891                           	callstack 28
  4892  00544E  0E00               	movlw	0
  4893  005450  6E06               	movwf	___awdiv@sign^0,c
  4894  005452  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4895  005454  EF30  F02A         	goto	u2950
  4896  005458  EF2E  F02A         	goto	u2951
  4897  00545C                     u2951:
  4898  00545C  EF36  F02A         	goto	l3694
  4899  005460                     u2950:
  4900  005460  6C03               	negf	___awdiv@divisor^0,c
  4901  005462  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4902  005464  B0D8               	btfsc	status,0,c
  4903  005466  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4904  005468  0E01               	movlw	1
  4905  00546A  6E06               	movwf	___awdiv@sign^0,c
  4906  00546C                     l3694:
  4907  00546C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4908  00546E  EF3D  F02A         	goto	u2960
  4909  005472  EF3B  F02A         	goto	u2961
  4910  005476                     u2961:
  4911  005476  EF43  F02A         	goto	l3700
  4912  00547A                     u2960:
  4913  00547A  6C01               	negf	___awdiv@dividend^0,c
  4914  00547C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4915  00547E  B0D8               	btfsc	status,0,c
  4916  005480  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4917  005482  0E01               	movlw	1
  4918  005484  1A06               	xorwf	___awdiv@sign^0,f,c
  4919  005486                     l3700:
  4920  005486  0E00               	movlw	0
  4921  005488  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4922  00548A  0E00               	movlw	0
  4923  00548C  6E07               	movwf	___awdiv@quotient^0,c
  4924  00548E  5003               	movf	___awdiv@divisor^0,w,c
  4925  005490  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4926  005492  B4D8               	btfsc	status,2,c
  4927  005494  EF4E  F02A         	goto	u2971
  4928  005498  EF50  F02A         	goto	u2970
  4929  00549C                     u2971:
  4930  00549C  EF78  F02A         	goto	l3722
  4931  0054A0                     u2970:
  4932  0054A0  0E01               	movlw	1
  4933  0054A2  6E05               	movwf	___awdiv@counter^0,c
  4934  0054A4  EF58  F02A         	goto	l3708
  4935  0054A8                     l3706:
  4936  0054A8  90D8               	bcf	status,0,c
  4937  0054AA  3603               	rlcf	___awdiv@divisor^0,f,c
  4938  0054AC  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4939  0054AE  2A05               	incf	___awdiv@counter^0,f,c
  4940  0054B0                     l3708:
  4941  0054B0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4942  0054B2  EF5D  F02A         	goto	u2981
  4943  0054B6  EF5F  F02A         	goto	u2980
  4944  0054BA                     u2981:
  4945  0054BA  EF54  F02A         	goto	l3706
  4946  0054BE                     u2980:
  4947  0054BE                     l3710:
  4948  0054BE  90D8               	bcf	status,0,c
  4949  0054C0  3607               	rlcf	___awdiv@quotient^0,f,c
  4950  0054C2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4951  0054C4  5003               	movf	___awdiv@divisor^0,w,c
  4952  0054C6  5C01               	subwf	___awdiv@dividend^0,w,c
  4953  0054C8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4954  0054CA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4955  0054CC  A0D8               	btfss	status,0,c
  4956  0054CE  EF6B  F02A         	goto	u2991
  4957  0054D2  EF6D  F02A         	goto	u2990
  4958  0054D6                     u2991:
  4959  0054D6  EF72  F02A         	goto	l3718
  4960  0054DA                     u2990:
  4961  0054DA  5003               	movf	___awdiv@divisor^0,w,c
  4962  0054DC  5E01               	subwf	___awdiv@dividend^0,f,c
  4963  0054DE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4964  0054E0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4965  0054E2  8007               	bsf	___awdiv@quotient^0,0,c
  4966  0054E4                     l3718:
  4967  0054E4  90D8               	bcf	status,0,c
  4968  0054E6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4969  0054E8  3203               	rrcf	___awdiv@divisor^0,f,c
  4970  0054EA  2E05               	decfsz	___awdiv@counter^0,f,c
  4971  0054EC  EF5F  F02A         	goto	l3710
  4972  0054F0                     l3722:
  4973  0054F0  5006               	movf	___awdiv@sign^0,w,c
  4974  0054F2  B4D8               	btfsc	status,2,c
  4975  0054F4  EF7E  F02A         	goto	u3001
  4976  0054F8  EF80  F02A         	goto	u3000
  4977  0054FC                     u3001:
  4978  0054FC  EF84  F02A         	goto	l3726
  4979  005500                     u3000:
  4980  005500  6C07               	negf	___awdiv@quotient^0,c
  4981  005502  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4982  005504  B0D8               	btfsc	status,0,c
  4983  005506  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4984  005508                     l3726:
  4985  005508  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4986  00550C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4987  005510  0012               	return		;funcret
  4988  005512                     __end_of___awdiv:
  4989                           	callstack 0
  4990                           
  4991 ;; *************** function _testarCoolerPot *****************
  4992 ;; Defined at:
  4993 ;;		line 343 in file "MyIHM_1A.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  pot             1    wreg     unsigned char 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  pot             1   33[BANK0 ] unsigned char 
  4998 ;;  msg            16    9[BANK0 ] unsigned char [16]
  4999 ;;  vTemp           2   36[BANK0 ] unsigned short 
  5000 ;;  t               2   34[BANK0 ] unsigned short 
  5001 ;;  vaux            2   27[BANK0 ] unsigned short 
  5002 ;;  opcao           2   25[BANK0 ] unsigned short 
  5003 ;;  DD4             1   32[BANK0 ] unsigned char 
  5004 ;;  DD3             1   31[BANK0 ] unsigned char 
  5005 ;;  DD2             1   30[BANK0 ] unsigned char 
  5006 ;;  DD1             1   29[BANK0 ] unsigned char 
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      void 
  5009 ;; Registers used:
  5010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5016 ;;      Params:         0       0       0       0       0       0       0       0       0
  5017 ;;      Locals:         0      29       0       0       0       0       0       0       0
  5018 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5019 ;;      Totals:         0      30       0       0       0       0       0       0       0
  5020 ;;Total ram usage:       30 bytes
  5021 ;; Hardware stack levels used: 1
  5022 ;; Hardware stack levels required when called: 8
  5023 ;; This function calls:
  5024 ;;		_Escreve7Seg
  5025 ;;		_EscreveLinhaLCD4
  5026 ;;		___flmul
  5027 ;;		___fltol
  5028 ;;		___lwdiv
  5029 ;;		___lwmod
  5030 ;;		___xxtofl
  5031 ;;		_inicializaPWM
  5032 ;;		_inicializaTimer
  5033 ;;		_setaFreqPWM
  5034 ;;		_setaPWM1
  5035 ;;		_sprintf
  5036 ;; This function is called by:
  5037 ;;		_subMenuCooler
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text12
  5042  006B66                     __ptext12:
  5043                           	callstack 0
  5044  006B66                     _testarCoolerPot:
  5045                           	callstack 21
  5046                           
  5047                           ;incstack = 0
  5048                           ;testarCoolerPot@pot stored from wreg
  5049  006B66  0100               	movlb	0	; () banked
  5050  006B68  6F81               	movwf	testarCoolerPot@pot& (0+255),b
  5051  006B6A                     
  5052                           ;MyIHM_1A.c: 347:     unsigned short vaux = 0;
  5053  006B6A  0E00               	movlw	0
  5054  006B6C  0100               	movlb	0	; () banked
  5055  006B6E  6F7C               	movwf	(testarCoolerPot@vaux+1)& (0+255),b
  5056  006B70  0E00               	movlw	0
  5057  006B72  6F7B               	movwf	testarCoolerPot@vaux& (0+255),b
  5058  006B74                     
  5059                           ; BSR set to: 0
  5060                           ;MyIHM_1A.c: 349:     unsigned char DD1, DD2, DD3, DD4;;MyIHM_1A.c: 350:     unsigned sh
      +                          ort t, opcao;;MyIHM_1A.c: 352:     sprintf(msg,"Potenc.  %d      ",pot+1);
  5061  006B74  0E69               	movlw	low testarCoolerPot@msg
  5062  006B76  6E5A               	movwf	sprintf@s^0,c
  5063  006B78  0E00               	movlw	high testarCoolerPot@msg
  5064  006B7A  6E5B               	movwf	(sprintf@s+1)^0,c
  5065  006B7C  0E8C               	movlw	low STR_16
  5066  006B7E  6E5C               	movwf	sprintf@fmt^0,c
  5067  006B80  0E7C               	movlw	high STR_16
  5068  006B82  6E5D               	movwf	(sprintf@fmt+1)^0,c
  5069  006B84  0E01               	movlw	1
  5070  006B86  2581               	addwf	testarCoolerPot@pot& (0+255),w,b
  5071  006B88  6E5E               	movwf	(?_sprintf+4)^0,c
  5072  006B8A  6A5F               	clrf	(?_sprintf+5)^0,c
  5073  006B8C  0E00               	movlw	0
  5074  006B8E  225F               	addwfc	(?_sprintf+5)^0,f,c
  5075  006B90  ECEC  F026         	call	_sprintf	;wreg free
  5076  006B94                     
  5077                           ;MyIHM_1A.c: 353:     EscreveLinhaLCD4(1,msg);
  5078  006B94  0E69               	movlw	low testarCoolerPot@msg
  5079  006B96  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  5080  006B98  0E00               	movlw	high testarCoolerPot@msg
  5081  006B9A  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  5082  006B9C  0E01               	movlw	1
  5083  006B9E  ECE5  F028         	call	_EscreveLinhaLCD4
  5084  006BA2                     
  5085                           ;MyIHM_1A.c: 354:     EscreveLinhaLCD4(2,"RB1 p/VOLTAR     ");
  5086  006BA2  0E9E               	movlw	low STR_17
  5087  006BA4  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  5088  006BA6  0E7C               	movlw	high STR_17
  5089  006BA8  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  5090  006BAA  0E02               	movlw	2
  5091  006BAC  ECE5  F028         	call	_EscreveLinhaLCD4
  5092  006BB0                     
  5093                           ;MyIHM_1A.c: 357:     opcao = pot;
  5094  006BB0  C081  F079         	movff	testarCoolerPot@pot,testarCoolerPot@opcao
  5095  006BB4  0100               	movlb	0	; () banked
  5096  006BB6  6B7A               	clrf	(testarCoolerPot@opcao+1)& (0+255),b
  5097  006BB8                     
  5098                           ; BSR set to: 0
  5099                           ;MyIHM_1A.c: 359:     PORTA = 0b00000000;
  5100  006BB8  0E00               	movlw	0
  5101  006BBA  6E80               	movwf	128,c	;volatile
  5102  006BBC                     
  5103                           ; BSR set to: 0
  5104                           ;MyIHM_1A.c: 360:     PORTD = 0b00000000;
  5105  006BBC  0E00               	movlw	0
  5106  006BBE  6E83               	movwf	131,c	;volatile
  5107  006BC0                     
  5108                           ; BSR set to: 0
  5109                           ;MyIHM_1A.c: 362:     TRISA = 0b00000011;
  5110  006BC0  0E03               	movlw	3
  5111  006BC2  6E92               	movwf	146,c	;volatile
  5112  006BC4                     
  5113                           ; BSR set to: 0
  5114                           ;MyIHM_1A.c: 363:     TRISD = 0b00000000;
  5115  006BC4  0E00               	movlw	0
  5116  006BC6  6E95               	movwf	149,c	;volatile
  5117  006BC8                     
  5118                           ; BSR set to: 0
  5119                           ;MyIHM_1A.c: 366:     ADCON2 = 0b10000001;
  5120  006BC8  0E81               	movlw	129
  5121  006BCA  6EC0               	movwf	192,c	;volatile
  5122  006BCC                     
  5123                           ; BSR set to: 0
  5124                           ;MyIHM_1A.c: 367:     ADCON1 = 0b00001011;
  5125  006BCC  0E0B               	movlw	11
  5126  006BCE  6EC1               	movwf	193,c	;volatile
  5127  006BD0                     
  5128                           ; BSR set to: 0
  5129                           ;MyIHM_1A.c: 368:     ADCON0 = 0b00000001;
  5130  006BD0  0E01               	movlw	1
  5131  006BD2  6EC2               	movwf	194,c	;volatile
  5132  006BD4                     
  5133                           ; BSR set to: 0
  5134                           ;MyIHM_1A.c: 370:     inicializaTimer();
  5135  006BD4  ECAF  F025         	call	_inicializaTimer	;wreg free
  5136  006BD8                     
  5137                           ;MyIHM_1A.c: 371:     inicializaPWM();
  5138  006BD8  ECBB  F025         	call	_inicializaPWM	;wreg free
  5139  006BDC                     
  5140                           ;MyIHM_1A.c: 372:     setaFreqPWM(1000);
  5141  006BDC  0E03               	movlw	3
  5142  006BDE  6E10               	movwf	(setaFreqPWM@freq+1)^0,c
  5143  006BE0  0EE8               	movlw	232
  5144  006BE2  6E0F               	movwf	setaFreqPWM@freq^0,c
  5145  006BE4  ECFB  F025         	call	_setaFreqPWM	;wreg free
  5146  006BE8                     
  5147                           ;MyIHM_1A.c: 374:     _delay((unsigned long)((10)*(8000000/4000.0)));
  5148  006BE8  0E1A               	movlw	26
  5149  006BEA  0100               	movlb	0	; () banked
  5150  006BEC  6F68               	movwf	??_testarCoolerPot& (0+255),b
  5151  006BEE  0EF8               	movlw	248
  5152  006BF0                     u4417:
  5153  006BF0  2EE8               	decfsz	wreg,f,c
  5154  006BF2  D7FE               	bra	u4417
  5155  006BF4  2F68               	decfsz	??_testarCoolerPot& (0+255),f,b
  5156  006BF6  D7FC               	bra	u4417
  5157  006BF8  F000               	nop	
  5158  006BFA                     l4084:
  5159                           
  5160                           ;MyIHM_1A.c: 376:         ADCON0bits.CHS1 = 0;
  5161  006BFA  96C2               	bcf	194,3,c	;volatile
  5162  006BFC                     
  5163                           ;MyIHM_1A.c: 377:         ADCON0bits.CHS0 = opcao;
  5164  006BFC  0100               	movlb	0	; () banked
  5165  006BFE  B179               	btfsc	testarCoolerPot@opcao& (0+255),0,b
  5166  006C00  D002               	bra	u3455
  5167  006C02  94C2               	bcf	194,2,c	;volatile
  5168  006C04  D001               	bra	u3456
  5169  006C06                     u3455:
  5170  006C06  84C2               	bsf	194,2,c	;volatile
  5171  006C08                     u3456:
  5172  006C08                     
  5173                           ;MyIHM_1A.c: 378:         ADCON0bits.GO_DONE = 1;
  5174  006C08  82C2               	bsf	194,1,c	;volatile
  5175  006C0A                     l170:
  5176  006C0A  B2C2               	btfsc	194,1,c	;volatile
  5177  006C0C  EF0A  F036         	goto	u3461
  5178  006C10  EF0C  F036         	goto	u3460
  5179  006C14                     u3461:
  5180  006C14  EF05  F036         	goto	l170
  5181  006C18                     u3460:
  5182  006C18                     
  5183                           ;MyIHM_1A.c: 383:         vTemp = ADRES;
  5184  006C18  CFC3 F084          	movff	4035,testarCoolerPot@vTemp	;volatile
  5185  006C1C  CFC4 F085          	movff	4036,testarCoolerPot@vTemp+1	;volatile
  5186  006C20                     
  5187                           ;MyIHM_1A.c: 384:         vTemp = (vTemp*0.09765625);
  5188  006C20  0E00               	movlw	0
  5189  006C22  6E13               	movwf	___flmul@a^0,c
  5190  006C24  0E00               	movlw	0
  5191  006C26  6E14               	movwf	(___flmul@a+1)^0,c
  5192  006C28  0EC8               	movlw	200
  5193  006C2A  6E15               	movwf	(___flmul@a+2)^0,c
  5194  006C2C  0E3D               	movlw	61
  5195  006C2E  6E16               	movwf	(___flmul@a+3)^0,c
  5196  006C30  C084  F001         	movff	testarCoolerPot@vTemp,___xxtofl@val
  5197  006C34  C085  F002         	movff	testarCoolerPot@vTemp+1,___xxtofl@val+1
  5198  006C38  6A03               	clrf	(___xxtofl@val+2)^0,c
  5199  006C3A  6A04               	clrf	(___xxtofl@val+3)^0,c
  5200  006C3C  0E00               	movlw	0
  5201  006C3E  ECE7  F032         	call	___xxtofl
  5202  006C42  C001  F00F         	movff	?___xxtofl,___flmul@b
  5203  006C46  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  5204  006C4A  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  5205  006C4E  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  5206  006C52  EC0C  F03C         	call	___flmul	;wreg free
  5207  006C56  C00F  F028         	movff	?___flmul,___fltol@f1
  5208  006C5A  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  5209  006C5E  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  5210  006C62  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  5211  006C66  EC98  F02C         	call	___fltol	;wreg free
  5212  006C6A  C028  F084         	movff	?___fltol,testarCoolerPot@vTemp
  5213  006C6E  C029  F085         	movff	?___fltol+1,testarCoolerPot@vTemp+1
  5214                           
  5215                           ;MyIHM_1A.c: 386:         setaPWM1((unsigned char) vTemp);
  5216  006C72  0100               	movlb	0	; () banked
  5217  006C74  5184               	movf	testarCoolerPot@vTemp& (0+255),w,b
  5218  006C76  EC34  F028         	call	_setaPWM1
  5219  006C7A                     
  5220                           ;MyIHM_1A.c: 388:         DD1 = (vTemp)/100;
  5221  006C7A  C084  F001         	movff	testarCoolerPot@vTemp,___lwdiv@dividend
  5222  006C7E  C085  F002         	movff	testarCoolerPot@vTemp+1,___lwdiv@dividend+1
  5223  006C82  0E00               	movlw	0
  5224  006C84  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  5225  006C86  0E64               	movlw	100
  5226  006C88  6E03               	movwf	___lwdiv@divisor^0,c
  5227  006C8A  EC6A  F028         	call	___lwdiv	;wreg free
  5228  006C8E  5001               	movf	?___lwdiv^0,w,c
  5229  006C90  0100               	movlb	0	; () banked
  5230  006C92  6F7D               	movwf	testarCoolerPot@DD1& (0+255),b
  5231  006C94                     
  5232                           ; BSR set to: 0
  5233                           ;MyIHM_1A.c: 389:         vaux = vTemp%100;
  5234  006C94  C084  F001         	movff	testarCoolerPot@vTemp,___lwmod@dividend
  5235  006C98  C085  F002         	movff	testarCoolerPot@vTemp+1,___lwmod@dividend+1
  5236  006C9C  0E00               	movlw	0
  5237  006C9E  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5238  006CA0  0E64               	movlw	100
  5239  006CA2  6E03               	movwf	___lwmod@divisor^0,c
  5240  006CA4  ECCC  F027         	call	___lwmod	;wreg free
  5241  006CA8  C001  F07B         	movff	?___lwmod,testarCoolerPot@vaux
  5242  006CAC  C002  F07C         	movff	?___lwmod+1,testarCoolerPot@vaux+1
  5243  006CB0                     
  5244                           ;MyIHM_1A.c: 390:         DD2 = (vaux)/10;
  5245  006CB0  C07B  F001         	movff	testarCoolerPot@vaux,___lwdiv@dividend
  5246  006CB4  C07C  F002         	movff	testarCoolerPot@vaux+1,___lwdiv@dividend+1
  5247  006CB8  0E00               	movlw	0
  5248  006CBA  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  5249  006CBC  0E0A               	movlw	10
  5250  006CBE  6E03               	movwf	___lwdiv@divisor^0,c
  5251  006CC0  EC6A  F028         	call	___lwdiv	;wreg free
  5252  006CC4  5001               	movf	?___lwdiv^0,w,c
  5253  006CC6  0100               	movlb	0	; () banked
  5254  006CC8  6F7E               	movwf	testarCoolerPot@DD2& (0+255),b
  5255  006CCA                     
  5256                           ; BSR set to: 0
  5257                           ;MyIHM_1A.c: 391:         DD3 = vTemp%10;
  5258  006CCA  C084  F001         	movff	testarCoolerPot@vTemp,___lwmod@dividend
  5259  006CCE  C085  F002         	movff	testarCoolerPot@vTemp+1,___lwmod@dividend+1
  5260  006CD2  0E00               	movlw	0
  5261  006CD4  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5262  006CD6  0E0A               	movlw	10
  5263  006CD8  6E03               	movwf	___lwmod@divisor^0,c
  5264  006CDA  ECCC  F027         	call	___lwmod	;wreg free
  5265  006CDE  5001               	movf	?___lwmod^0,w,c
  5266  006CE0  0100               	movlb	0	; () banked
  5267  006CE2  6F7F               	movwf	testarCoolerPot@DD3& (0+255),b
  5268  006CE4                     
  5269                           ; BSR set to: 0
  5270                           ;MyIHM_1A.c: 392:         DD4 = 253;
  5271  006CE4  0EFD               	movlw	253
  5272  006CE6  6F80               	movwf	testarCoolerPot@DD4& (0+255),b
  5273  006CE8                     
  5274                           ; BSR set to: 0
  5275                           ;MyIHM_1A.c: 394:         t = 0;
  5276  006CE8  0E00               	movlw	0
  5277  006CEA  6F83               	movwf	(testarCoolerPot@t+1)& (0+255),b
  5278  006CEC  0E00               	movlw	0
  5279  006CEE  6F82               	movwf	testarCoolerPot@t& (0+255),b
  5280                           
  5281                           ;MyIHM_1A.c: 395:         while(t < 2){
  5282  006CF0  EFC1  F036         	goto	l4118
  5283  006CF4                     l4104:
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;MyIHM_1A.c: 396:             Escreve7Seg(4, DD4, 0); _delay((unsigned long)((4)*(800000
      +                          0/4000.0)));
  5287  006CF4  C080  F001         	movff	testarCoolerPot@DD4,Escreve7Seg@DADO
  5288  006CF8  0E00               	movlw	0
  5289  006CFA  6E02               	movwf	Escreve7Seg@PONTO^0,c
  5290  006CFC  0E04               	movlw	4
  5291  006CFE  ECA1  F030         	call	_Escreve7Seg
  5292  006D02  0E0B               	movlw	11
  5293  006D04  0100               	movlb	0	; () banked
  5294  006D06  6F68               	movwf	??_testarCoolerPot& (0+255),b
  5295  006D08  0E62               	movlw	98
  5296  006D0A                     u4427:
  5297  006D0A  2EE8               	decfsz	wreg,f,c
  5298  006D0C  D7FE               	bra	u4427
  5299  006D0E  2F68               	decfsz	??_testarCoolerPot& (0+255),f,b
  5300  006D10  D7FC               	bra	u4427
  5301  006D12  F000               	nop	
  5302  006D14                     
  5303                           ;MyIHM_1A.c: 397:             Escreve7Seg(3, DD3, 0); _delay((unsigned long)((4)*(800000
      +                          0/4000.0)));
  5304  006D14  C07F  F001         	movff	testarCoolerPot@DD3,Escreve7Seg@DADO
  5305  006D18  0E00               	movlw	0
  5306  006D1A  6E02               	movwf	Escreve7Seg@PONTO^0,c
  5307  006D1C  0E03               	movlw	3
  5308  006D1E  ECA1  F030         	call	_Escreve7Seg
  5309  006D22  0E0B               	movlw	11
  5310  006D24  0100               	movlb	0	; () banked
  5311  006D26  6F68               	movwf	??_testarCoolerPot& (0+255),b
  5312  006D28  0E62               	movlw	98
  5313  006D2A                     u4437:
  5314  006D2A  2EE8               	decfsz	wreg,f,c
  5315  006D2C  D7FE               	bra	u4437
  5316  006D2E  2F68               	decfsz	??_testarCoolerPot& (0+255),f,b
  5317  006D30  D7FC               	bra	u4437
  5318  006D32  F000               	nop	
  5319  006D34                     
  5320                           ;MyIHM_1A.c: 398:             Escreve7Seg(2, DD2, 0); _delay((unsigned long)((4)*(800000
      +                          0/4000.0)));
  5321  006D34  C07E  F001         	movff	testarCoolerPot@DD2,Escreve7Seg@DADO
  5322  006D38  0E00               	movlw	0
  5323  006D3A  6E02               	movwf	Escreve7Seg@PONTO^0,c
  5324  006D3C  0E02               	movlw	2
  5325  006D3E  ECA1  F030         	call	_Escreve7Seg
  5326  006D42  0E0B               	movlw	11
  5327  006D44  0100               	movlb	0	; () banked
  5328  006D46  6F68               	movwf	??_testarCoolerPot& (0+255),b
  5329  006D48  0E62               	movlw	98
  5330  006D4A                     u4447:
  5331  006D4A  2EE8               	decfsz	wreg,f,c
  5332  006D4C  D7FE               	bra	u4447
  5333  006D4E  2F68               	decfsz	??_testarCoolerPot& (0+255),f,b
  5334  006D50  D7FC               	bra	u4447
  5335  006D52  F000               	nop	
  5336                           
  5337                           ;MyIHM_1A.c: 399:             Escreve7Seg(1, DD1, 0); _delay((unsigned long)((4)*(800000
      +                          0/4000.0)));
  5338  006D54  C07D  F001         	movff	testarCoolerPot@DD1,Escreve7Seg@DADO
  5339  006D58  0E00               	movlw	0
  5340  006D5A  6E02               	movwf	Escreve7Seg@PONTO^0,c
  5341  006D5C  0E01               	movlw	1
  5342  006D5E  ECA1  F030         	call	_Escreve7Seg
  5343  006D62  0E0B               	movlw	11
  5344  006D64  0100               	movlb	0	; () banked
  5345  006D66  6F68               	movwf	??_testarCoolerPot& (0+255),b
  5346  006D68  0E62               	movlw	98
  5347  006D6A                     u4457:
  5348  006D6A  2EE8               	decfsz	wreg,f,c
  5349  006D6C  D7FE               	bra	u4457
  5350  006D6E  2F68               	decfsz	??_testarCoolerPot& (0+255),f,b
  5351  006D70  D7FC               	bra	u4457
  5352  006D72  F000               	nop	
  5353  006D74                     
  5354                           ;MyIHM_1A.c: 400:             t = t+1;
  5355  006D74  0E01               	movlw	1
  5356  006D76  0100               	movlb	0	; () banked
  5357  006D78  2582               	addwf	testarCoolerPot@t& (0+255),w,b
  5358  006D7A  6F82               	movwf	testarCoolerPot@t& (0+255),b
  5359  006D7C  0E00               	movlw	0
  5360  006D7E  2183               	addwfc	(testarCoolerPot@t+1)& (0+255),w,b
  5361  006D80  6F83               	movwf	(testarCoolerPot@t+1)& (0+255),b
  5362  006D82                     l4118:
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;MyIHM_1A.c: 395:         while(t < 2){
  5366  006D82  5183               	movf	(testarCoolerPot@t+1)& (0+255),w,b
  5367  006D84  E109               	bnz	u3470
  5368  006D86  0E02               	movlw	2
  5369  006D88  5D82               	subwf	testarCoolerPot@t& (0+255),w,b
  5370  006D8A  A0D8               	btfss	status,0,c
  5371  006D8C  EFCA  F036         	goto	u3471
  5372  006D90  EFCC  F036         	goto	u3470
  5373  006D94                     u3471:
  5374  006D94  EF7A  F036         	goto	l4104
  5375  006D98                     u3470:
  5376  006D98                     
  5377                           ; BSR set to: 0
  5378                           ;MyIHM_1A.c: 402:         if (PORTBbits.RB1 == 0){
  5379  006D98  B281               	btfsc	129,1,c	;volatile
  5380  006D9A  EFD1  F036         	goto	u3481
  5381  006D9E  EFD3  F036         	goto	u3480
  5382  006DA2                     u3481:
  5383  006DA2  EFFD  F035         	goto	l4084
  5384  006DA6                     u3480:
  5385  006DA6                     l177:
  5386  006DA6  A281               	btfss	129,1,c	;volatile
  5387  006DA8  EFD8  F036         	goto	u3491
  5388  006DAC  EFDA  F036         	goto	u3490
  5389  006DB0                     u3491:
  5390  006DB0  EFD3  F036         	goto	l177
  5391  006DB4                     u3490:
  5392  006DB4  0012               	return		;funcret
  5393  006DB6                     __end_of_testarCoolerPot:
  5394                           	callstack 0
  5395                           
  5396 ;; *************** function _setaPWM1 *****************
  5397 ;; Defined at:
  5398 ;;		line 119 in file "MyIHM_1A.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;  porcento        1    wreg     unsigned char 
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;  porcento        1    9[COMRAM] unsigned char 
  5403 ;;  val             2   10[COMRAM] unsigned int 
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  1    wreg      void 
  5406 ;; Registers used:
  5407 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5413 ;;      Params:         0       0       0       0       0       0       0       0       0
  5414 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5415 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5416 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5417 ;;Total ram usage:        5 bytes
  5418 ;; Hardware stack levels used: 1
  5419 ;; Hardware stack levels required when called: 1
  5420 ;; This function calls:
  5421 ;;		___lwdiv
  5422 ;;		___wmul
  5423 ;; This function is called by:
  5424 ;;		_testarCoolerPot
  5425 ;;		_testarCoolerPotUpDown
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text13
  5430  005068                     __ptext13:
  5431                           	callstack 0
  5432  005068                     _setaPWM1:
  5433                           	callstack 27
  5434                           
  5435                           ;incstack = 0
  5436                           ;setaPWM1@porcento stored from wreg
  5437  005068  6E0A               	movwf	setaPWM1@porcento^0,c
  5438  00506A                     
  5439                           ;MyIHM_1A.c: 125:     unsigned int val = ( ( unsigned int ) porcento )*( PR2+1) ;
  5440  00506A  0E01               	movlw	1
  5441  00506C  24CB               	addwf	203,w,c	;volatile
  5442  00506E  6E01               	movwf	___wmul@multiplier^0,c
  5443  005070  6A02               	clrf	(___wmul@multiplier+1)^0,c
  5444  005072  0E00               	movlw	0
  5445  005074  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  5446  005076  C00A  F003         	movff	setaPWM1@porcento,___wmul@multiplicand
  5447  00507A  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  5448  00507C  ECE8  F025         	call	___wmul	;wreg free
  5449  005080  C001  F00B         	movff	?___wmul,setaPWM1@val
  5450  005084  C002  F00C         	movff	?___wmul+1,setaPWM1@val+1
  5451  005088                     
  5452                           ;MyIHM_1A.c: 126:     val = val / 25;
  5453  005088  C00B  F001         	movff	setaPWM1@val,___lwdiv@dividend
  5454  00508C  C00C  F002         	movff	setaPWM1@val+1,___lwdiv@dividend+1
  5455  005090  0E00               	movlw	0
  5456  005092  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  5457  005094  0E19               	movlw	25
  5458  005096  6E03               	movwf	___lwdiv@divisor^0,c
  5459  005098  EC6A  F028         	call	___lwdiv	;wreg free
  5460  00509C  C001  F00B         	movff	?___lwdiv,setaPWM1@val
  5461  0050A0  C002  F00C         	movff	?___lwdiv+1,setaPWM1@val+1
  5462  0050A4                     
  5463                           ;MyIHM_1A.c: 129:     val &= 0x03ff ;
  5464  0050A4  0EFF               	movlw	255
  5465  0050A6  160B               	andwf	setaPWM1@val^0,f,c
  5466  0050A8  0E03               	movlw	3
  5467  0050AA  160C               	andwf	(setaPWM1@val+1)^0,f,c
  5468  0050AC                     
  5469                           ;MyIHM_1A.c: 132:     CCPR1L = val >> 2 ;
  5470  0050AC  C00B  F008         	movff	setaPWM1@val,??_setaPWM1
  5471  0050B0  C00C  F009         	movff	setaPWM1@val+1,??_setaPWM1+1
  5472  0050B4  90D8               	bcf	status,0,c
  5473  0050B6  3209               	rrcf	(??_setaPWM1+1)^0,f,c
  5474  0050B8  3208               	rrcf	??_setaPWM1^0,f,c
  5475  0050BA  90D8               	bcf	status,0,c
  5476  0050BC  3209               	rrcf	(??_setaPWM1+1)^0,f,c
  5477  0050BE  3208               	rrcf	??_setaPWM1^0,f,c
  5478  0050C0  5008               	movf	??_setaPWM1^0,w,c
  5479  0050C2  6EBE               	movwf	190,c	;volatile
  5480  0050C4                     
  5481                           ;MyIHM_1A.c: 135:     CCP1CON |= ( val & 0x0003 ) << 4 ;
  5482  0050C4  C00B  F008         	movff	setaPWM1@val,??_setaPWM1	;volatile
  5483  0050C8  0E03               	movlw	3
  5484  0050CA  1608               	andwf	??_setaPWM1^0,f,c
  5485  0050CC  3808               	swapf	??_setaPWM1^0,w,c
  5486  0050CE  0BF0               	andlw	240
  5487  0050D0  12BD               	iorwf	189,f,c	;volatile
  5488  0050D2  0012               	return		;funcret
  5489  0050D4                     __end_of_setaPWM1:
  5490                           	callstack 0
  5491                           
  5492 ;; *************** function ___xxtofl *****************
  5493 ;; Defined at:
  5494 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;  sign            1    wreg     unsigned char 
  5497 ;;  val             4    0[COMRAM] long 
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;  sign            1    8[COMRAM] unsigned char 
  5500 ;;  arg             4   10[COMRAM] unsigned long 
  5501 ;;  exp             1    9[COMRAM] unsigned char 
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  4    0[COMRAM] unsigned char 
  5504 ;; Registers used:
  5505 ;;		wreg, status,2, status,0
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5511 ;;      Params:         4       0       0       0       0       0       0       0       0
  5512 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5513 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5514 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5515 ;;Total ram usage:       14 bytes
  5516 ;; Hardware stack levels used: 1
  5517 ;; This function calls:
  5518 ;;		Nothing
  5519 ;; This function is called by:
  5520 ;;		_testarCoolerPot
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           	psect	text14
  5525  0065CE                     __ptext14:
  5526                           	callstack 0
  5527  0065CE                     ___xxtofl:
  5528                           	callstack 28
  5529                           
  5530                           ;incstack = 0
  5531                           ;___xxtofl@sign stored from wreg
  5532  0065CE  6E09               	movwf	___xxtofl@sign^0,c
  5533  0065D0  5009               	movf	___xxtofl@sign^0,w,c
  5534  0065D2  B4D8               	btfsc	status,2,c
  5535  0065D4  EFEE  F032         	goto	u3171
  5536  0065D8  EFF0  F032         	goto	u3170
  5537  0065DC                     u3171:
  5538  0065DC  EF12  F033         	goto	l1141
  5539  0065E0                     u3170:
  5540  0065E0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5541  0065E2  EFF7  F032         	goto	u3180
  5542  0065E6  EFF5  F032         	goto	u3181
  5543  0065EA                     u3181:
  5544  0065EA  EF12  F033         	goto	l1141
  5545  0065EE                     u3180:
  5546  0065EE  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5547  0065F2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5548  0065F6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5549  0065FA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5550  0065FE  1E05               	comf	??___xxtofl^0,f,c
  5551  006600  1E06               	comf	(??___xxtofl+1)^0,f,c
  5552  006602  1E07               	comf	(??___xxtofl+2)^0,f,c
  5553  006604  1E08               	comf	(??___xxtofl+3)^0,f,c
  5554  006606  2A05               	incf	??___xxtofl^0,f,c
  5555  006608  0E00               	movlw	0
  5556  00660A  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5557  00660C  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5558  00660E  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5559  006610  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5560  006614  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5561  006618  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5562  00661C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5563  006620  EF1A  F033         	goto	l3832
  5564  006624                     l1141:
  5565  006624  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5566  006628  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5567  00662C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5568  006630  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5569  006634                     l3832:
  5570  006634  5001               	movf	___xxtofl@val^0,w,c
  5571  006636  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5572  006638  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5573  00663A  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5574  00663C  A4D8               	btfss	status,2,c
  5575  00663E  EF23  F033         	goto	u3191
  5576  006642  EF25  F033         	goto	u3190
  5577  006646                     u3191:
  5578  006646  EF2F  F033         	goto	l3838
  5579  00664A                     u3190:
  5580  00664A  0E00               	movlw	0
  5581  00664C  6E01               	movwf	?___xxtofl^0,c
  5582  00664E  0E00               	movlw	0
  5583  006650  6E02               	movwf	(?___xxtofl+1)^0,c
  5584  006652  0E00               	movlw	0
  5585  006654  6E03               	movwf	(?___xxtofl+2)^0,c
  5586  006656  0E00               	movlw	0
  5587  006658  6E04               	movwf	(?___xxtofl+3)^0,c
  5588  00665A  EFC0  F033         	goto	l1144
  5589  00665E                     l3838:
  5590  00665E  0E96               	movlw	150
  5591  006660  6E0A               	movwf	___xxtofl@exp^0,c
  5592  006662  EF39  F033         	goto	l3842
  5593  006666                     l3840:
  5594  006666  2A0A               	incf	___xxtofl@exp^0,f,c
  5595  006668  90D8               	bcf	status,0,c
  5596  00666A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5597  00666C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5598  00666E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5599  006670  320B               	rrcf	___xxtofl@arg^0,f,c
  5600  006672                     l3842:
  5601  006672  0E00               	movlw	0
  5602  006674  140B               	andwf	___xxtofl@arg^0,w,c
  5603  006676  6E05               	movwf	??___xxtofl^0,c
  5604  006678  0E00               	movlw	0
  5605  00667A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5606  00667C  6E06               	movwf	(??___xxtofl+1)^0,c
  5607  00667E  0E00               	movlw	0
  5608  006680  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5609  006682  6E07               	movwf	(??___xxtofl+2)^0,c
  5610  006684  0EFE               	movlw	254
  5611  006686  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5612  006688  6E08               	movwf	(??___xxtofl+3)^0,c
  5613  00668A  5005               	movf	??___xxtofl^0,w,c
  5614  00668C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5615  00668E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5616  006690  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5617  006692  A4D8               	btfss	status,2,c
  5618  006694  EF4E  F033         	goto	u3201
  5619  006698  EF50  F033         	goto	u3200
  5620  00669C                     u3201:
  5621  00669C  EF33  F033         	goto	l3840
  5622  0066A0                     u3200:
  5623  0066A0  EF5E  F033         	goto	l1148
  5624  0066A4                     l3844:
  5625  0066A4  2A0A               	incf	___xxtofl@exp^0,f,c
  5626  0066A6  0E01               	movlw	1
  5627  0066A8  260B               	addwf	___xxtofl@arg^0,f,c
  5628  0066AA  0E00               	movlw	0
  5629  0066AC  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5630  0066AE  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5631  0066B0  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5632  0066B2  90D8               	bcf	status,0,c
  5633  0066B4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5634  0066B6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5635  0066B8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5636  0066BA  320B               	rrcf	___xxtofl@arg^0,f,c
  5637  0066BC                     l1148:
  5638  0066BC  0E00               	movlw	0
  5639  0066BE  140B               	andwf	___xxtofl@arg^0,w,c
  5640  0066C0  6E05               	movwf	??___xxtofl^0,c
  5641  0066C2  0E00               	movlw	0
  5642  0066C4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5643  0066C6  6E06               	movwf	(??___xxtofl+1)^0,c
  5644  0066C8  0E00               	movlw	0
  5645  0066CA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5646  0066CC  6E07               	movwf	(??___xxtofl+2)^0,c
  5647  0066CE  0EFF               	movlw	255
  5648  0066D0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5649  0066D2  6E08               	movwf	(??___xxtofl+3)^0,c
  5650  0066D4  5005               	movf	??___xxtofl^0,w,c
  5651  0066D6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5652  0066D8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5653  0066DA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5654  0066DC  A4D8               	btfss	status,2,c
  5655  0066DE  EF73  F033         	goto	u3211
  5656  0066E2  EF75  F033         	goto	u3210
  5657  0066E6                     u3211:
  5658  0066E6  EF52  F033         	goto	l3844
  5659  0066EA                     u3210:
  5660  0066EA  EF7D  F033         	goto	l3852
  5661  0066EE                     l3850:
  5662  0066EE  060A               	decf	___xxtofl@exp^0,f,c
  5663  0066F0  90D8               	bcf	status,0,c
  5664  0066F2  360B               	rlcf	___xxtofl@arg^0,f,c
  5665  0066F4  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5666  0066F6  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5667  0066F8  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5668  0066FA                     l3852:
  5669  0066FA  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5670  0066FC  EF82  F033         	goto	u3221
  5671  006700  EF84  F033         	goto	u3220
  5672  006704                     u3221:
  5673  006704  EF8C  F033         	goto	l1155
  5674  006708                     u3220:
  5675  006708  0E02               	movlw	2
  5676  00670A  600A               	cpfslt	___xxtofl@exp^0,c
  5677  00670C  EF8A  F033         	goto	u3231
  5678  006710  EF8C  F033         	goto	u3230
  5679  006714                     u3231:
  5680  006714  EF77  F033         	goto	l3850
  5681  006718                     u3230:
  5682  006718                     l1155:
  5683  006718  B00A               	btfsc	___xxtofl@exp^0,0,c
  5684  00671A  EF91  F033         	goto	u3241
  5685  00671E  EF93  F033         	goto	u3240
  5686  006722                     u3241:
  5687  006722  EF94  F033         	goto	l3858
  5688  006726                     u3240:
  5689  006726  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5690  006728                     l3858:
  5691  006728  90D8               	bcf	status,0,c
  5692  00672A  320A               	rrcf	___xxtofl@exp^0,f,c
  5693  00672C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5694  006730  6A06               	clrf	(??___xxtofl+1)^0,c
  5695  006732  6A07               	clrf	(??___xxtofl+2)^0,c
  5696  006734  6A08               	clrf	(??___xxtofl+3)^0,c
  5697  006736  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5698  00673A  6A07               	clrf	(??___xxtofl+2)^0,c
  5699  00673C  6A06               	clrf	(??___xxtofl+1)^0,c
  5700  00673E  6A05               	clrf	??___xxtofl^0,c
  5701  006740  5005               	movf	??___xxtofl^0,w,c
  5702  006742  120B               	iorwf	___xxtofl@arg^0,f,c
  5703  006744  5006               	movf	(??___xxtofl+1)^0,w,c
  5704  006746  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5705  006748  5007               	movf	(??___xxtofl+2)^0,w,c
  5706  00674A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5707  00674C  5008               	movf	(??___xxtofl+3)^0,w,c
  5708  00674E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5709  006750  5009               	movf	___xxtofl@sign^0,w,c
  5710  006752  B4D8               	btfsc	status,2,c
  5711  006754  EFAE  F033         	goto	u3251
  5712  006758  EFB0  F033         	goto	u3250
  5713  00675C                     u3251:
  5714  00675C  EFB8  F033         	goto	l3868
  5715  006760                     u3250:
  5716  006760  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5717  006762  EFB7  F033         	goto	u3260
  5718  006766  EFB5  F033         	goto	u3261
  5719  00676A                     u3261:
  5720  00676A  EFB8  F033         	goto	l3868
  5721  00676E                     u3260:
  5722  00676E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5723  006770                     l3868:
  5724  006770  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5725  006774  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5726  006778  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5727  00677C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5728  006780                     l1144:
  5729  006780  0012               	return		;funcret
  5730  006782                     __end_of___xxtofl:
  5731                           	callstack 0
  5732                           
  5733 ;; *************** function ___lwmod *****************
  5734 ;; Defined at:
  5735 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;  dividend        2    0[COMRAM] unsigned int 
  5738 ;;  divisor         2    2[COMRAM] unsigned int 
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;  counter         1    4[COMRAM] unsigned char 
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  2    0[COMRAM] unsigned int 
  5743 ;; Registers used:
  5744 ;;		wreg, status,2, status,0
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5750 ;;      Params:         4       0       0       0       0       0       0       0       0
  5751 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5753 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5754 ;;Total ram usage:        5 bytes
  5755 ;; Hardware stack levels used: 1
  5756 ;; This function calls:
  5757 ;;		Nothing
  5758 ;; This function is called by:
  5759 ;;		_testarDisplay2
  5760 ;;		_testarCoolerPot
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text15
  5765  004F98                     __ptext15:
  5766                           	callstack 0
  5767  004F98                     ___lwmod:
  5768                           	callstack 28
  5769  004F98  5003               	movf	___lwmod@divisor^0,w,c
  5770  004F9A  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  5771  004F9C  B4D8               	btfsc	status,2,c
  5772  004F9E  EFD3  F027         	goto	u3141
  5773  004FA2  EFD5  F027         	goto	u3140
  5774  004FA6                     u3141:
  5775  004FA6  EFF9  F027         	goto	l987
  5776  004FAA                     u3140:
  5777  004FAA  0E01               	movlw	1
  5778  004FAC  6E05               	movwf	___lwmod@counter^0,c
  5779  004FAE  EFDD  F027         	goto	l3816
  5780  004FB2                     l3814:
  5781  004FB2  90D8               	bcf	status,0,c
  5782  004FB4  3603               	rlcf	___lwmod@divisor^0,f,c
  5783  004FB6  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  5784  004FB8  2A05               	incf	___lwmod@counter^0,f,c
  5785  004FBA                     l3816:
  5786  004FBA  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  5787  004FBC  EFE2  F027         	goto	u3151
  5788  004FC0  EFE4  F027         	goto	u3150
  5789  004FC4                     u3151:
  5790  004FC4  EFD9  F027         	goto	l3814
  5791  004FC8                     u3150:
  5792  004FC8                     l3818:
  5793  004FC8  5003               	movf	___lwmod@divisor^0,w,c
  5794  004FCA  5C01               	subwf	___lwmod@dividend^0,w,c
  5795  004FCC  5004               	movf	(___lwmod@divisor+1)^0,w,c
  5796  004FCE  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  5797  004FD0  A0D8               	btfss	status,0,c
  5798  004FD2  EFED  F027         	goto	u3161
  5799  004FD6  EFEF  F027         	goto	u3160
  5800  004FDA                     u3161:
  5801  004FDA  EFF3  F027         	goto	l3822
  5802  004FDE                     u3160:
  5803  004FDE  5003               	movf	___lwmod@divisor^0,w,c
  5804  004FE0  5E01               	subwf	___lwmod@dividend^0,f,c
  5805  004FE2  5004               	movf	(___lwmod@divisor+1)^0,w,c
  5806  004FE4  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  5807  004FE6                     l3822:
  5808  004FE6  90D8               	bcf	status,0,c
  5809  004FE8  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  5810  004FEA  3203               	rrcf	___lwmod@divisor^0,f,c
  5811  004FEC  2E05               	decfsz	___lwmod@counter^0,f,c
  5812  004FEE  EFE4  F027         	goto	l3818
  5813  004FF2                     l987:
  5814  004FF2  C001  F001         	movff	___lwmod@dividend,?___lwmod
  5815  004FF6  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  5816  004FFA  0012               	return		;funcret
  5817  004FFC                     __end_of___lwmod:
  5818                           	callstack 0
  5819                           
  5820 ;; *************** function ___fltol *****************
  5821 ;; Defined at:
  5822 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  f1              4   39[COMRAM] unsigned int 
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  exp1            1   48[COMRAM] unsigned char 
  5827 ;;  sign1           1   47[COMRAM] unsigned char 
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  4   39[COMRAM] long 
  5830 ;; Registers used:
  5831 ;;		wreg, status,2, status,0
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5837 ;;      Params:         4       0       0       0       0       0       0       0       0
  5838 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5839 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5840 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5841 ;;Total ram usage:       10 bytes
  5842 ;; Hardware stack levels used: 1
  5843 ;; This function calls:
  5844 ;;		Nothing
  5845 ;; This function is called by:
  5846 ;;		_testarCoolerPot
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text16
  5851  005930                     __ptext16:
  5852                           	callstack 0
  5853  005930                     ___fltol:
  5854                           	callstack 28
  5855  005930  342A               	rlcf	(___fltol@f1+2)^0,w,c
  5856  005932  342B               	rlcf	(___fltol@f1+3)^0,w,c
  5857  005934  6E31               	movwf	___fltol@exp1^0,c
  5858  005936  5031               	movf	___fltol@exp1^0,w,c
  5859  005938  A4D8               	btfss	status,2,c
  5860  00593A  EFA1  F02C         	goto	u3071
  5861  00593E  EFA3  F02C         	goto	u3070
  5862  005942                     u3071:
  5863  005942  EFAD  F02C         	goto	l3772
  5864  005946                     u3070:
  5865  005946                     l3768:
  5866  005946  0E00               	movlw	0
  5867  005948  6E28               	movwf	?___fltol^0,c
  5868  00594A  0E00               	movlw	0
  5869  00594C  6E29               	movwf	(?___fltol+1)^0,c
  5870  00594E  0E00               	movlw	0
  5871  005950  6E2A               	movwf	(?___fltol+2)^0,c
  5872  005952  0E00               	movlw	0
  5873  005954  6E2B               	movwf	(?___fltol+3)^0,c
  5874  005956  EF1A  F02D         	goto	l783
  5875  00595A                     l3772:
  5876  00595A  C028  F02C         	movff	___fltol@f1,??___fltol
  5877  00595E  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  5878  005962  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  5879  005966  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  5880  00596A  0E20               	movlw	32
  5881  00596C  EFBD  F02C         	goto	u3080
  5882  005970                     u3085:
  5883  005970  90D8               	bcf	status,0,c
  5884  005972  322F               	rrcf	(??___fltol+3)^0,f,c
  5885  005974  322E               	rrcf	(??___fltol+2)^0,f,c
  5886  005976  322D               	rrcf	(??___fltol+1)^0,f,c
  5887  005978  322C               	rrcf	??___fltol^0,f,c
  5888  00597A                     u3080:
  5889  00597A  2EE8               	decfsz	wreg,f,c
  5890  00597C  EFB8  F02C         	goto	u3085
  5891  005980  502C               	movf	??___fltol^0,w,c
  5892  005982  6E30               	movwf	___fltol@sign1^0,c
  5893  005984  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  5894  005986  0EFF               	movlw	255
  5895  005988  1628               	andwf	___fltol@f1^0,f,c
  5896  00598A  0EFF               	movlw	255
  5897  00598C  1629               	andwf	(___fltol@f1+1)^0,f,c
  5898  00598E  0EFF               	movlw	255
  5899  005990  162A               	andwf	(___fltol@f1+2)^0,f,c
  5900  005992  0E00               	movlw	0
  5901  005994  162B               	andwf	(___fltol@f1+3)^0,f,c
  5902  005996  0E96               	movlw	150
  5903  005998  5E31               	subwf	___fltol@exp1^0,f,c
  5904  00599A  BE31               	btfsc	___fltol@exp1^0,7,c
  5905  00599C  EFD4  F02C         	goto	u3090
  5906  0059A0  EFD2  F02C         	goto	u3091
  5907  0059A4                     u3091:
  5908  0059A4  EFEA  F02C         	goto	l3792
  5909  0059A8                     u3090:
  5910  0059A8  5031               	movf	___fltol@exp1^0,w,c
  5911  0059AA  0A80               	xorlw	128
  5912  0059AC  0F97               	addlw	151
  5913  0059AE  B0D8               	btfsc	status,0,c
  5914  0059B0  EFDC  F02C         	goto	u3101
  5915  0059B4  EFDE  F02C         	goto	u3100
  5916  0059B8                     u3101:
  5917  0059B8  EFE0  F02C         	goto	l3788
  5918  0059BC                     u3100:
  5919  0059BC  EFA3  F02C         	goto	l3768
  5920  0059C0                     l3788:
  5921  0059C0  90D8               	bcf	status,0,c
  5922  0059C2  322B               	rrcf	(___fltol@f1+3)^0,f,c
  5923  0059C4  322A               	rrcf	(___fltol@f1+2)^0,f,c
  5924  0059C6  3229               	rrcf	(___fltol@f1+1)^0,f,c
  5925  0059C8  3228               	rrcf	___fltol@f1^0,f,c
  5926  0059CA  3E31               	incfsz	___fltol@exp1^0,f,c
  5927  0059CC  EFE0  F02C         	goto	l3788
  5928  0059D0  EF02  F02D         	goto	l3802
  5929  0059D4                     l3792:
  5930  0059D4  0E1F               	movlw	31
  5931  0059D6  6431               	cpfsgt	___fltol@exp1^0,c
  5932  0059D8  EFF0  F02C         	goto	u3111
  5933  0059DC  EFF2  F02C         	goto	u3110
  5934  0059E0                     u3111:
  5935  0059E0  EFFA  F02C         	goto	l3800
  5936  0059E4                     u3110:
  5937  0059E4  EFA3  F02C         	goto	l3768
  5938  0059E8                     l3798:
  5939  0059E8  90D8               	bcf	status,0,c
  5940  0059EA  3628               	rlcf	___fltol@f1^0,f,c
  5941  0059EC  3629               	rlcf	(___fltol@f1+1)^0,f,c
  5942  0059EE  362A               	rlcf	(___fltol@f1+2)^0,f,c
  5943  0059F0  362B               	rlcf	(___fltol@f1+3)^0,f,c
  5944  0059F2  0631               	decf	___fltol@exp1^0,f,c
  5945  0059F4                     l3800:
  5946  0059F4  5031               	movf	___fltol@exp1^0,w,c
  5947  0059F6  A4D8               	btfss	status,2,c
  5948  0059F8  EF00  F02D         	goto	u3121
  5949  0059FC  EF02  F02D         	goto	u3120
  5950  005A00                     u3121:
  5951  005A00  EFF4  F02C         	goto	l3798
  5952  005A04                     u3120:
  5953  005A04                     l3802:
  5954  005A04  5030               	movf	___fltol@sign1^0,w,c
  5955  005A06  B4D8               	btfsc	status,2,c
  5956  005A08  EF08  F02D         	goto	u3131
  5957  005A0C  EF0A  F02D         	goto	u3130
  5958  005A10                     u3131:
  5959  005A10  EF12  F02D         	goto	l3806
  5960  005A14                     u3130:
  5961  005A14  1E2B               	comf	(___fltol@f1+3)^0,f,c
  5962  005A16  1E2A               	comf	(___fltol@f1+2)^0,f,c
  5963  005A18  1E29               	comf	(___fltol@f1+1)^0,f,c
  5964  005A1A  6C28               	negf	___fltol@f1^0,c
  5965  005A1C  0E00               	movlw	0
  5966  005A1E  2229               	addwfc	(___fltol@f1+1)^0,f,c
  5967  005A20  222A               	addwfc	(___fltol@f1+2)^0,f,c
  5968  005A22  222B               	addwfc	(___fltol@f1+3)^0,f,c
  5969  005A24                     l3806:
  5970  005A24  C028  F028         	movff	___fltol@f1,?___fltol
  5971  005A28  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  5972  005A2C  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  5973  005A30  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  5974  005A34                     l783:
  5975  005A34  0012               	return		;funcret
  5976  005A36                     __end_of___fltol:
  5977                           	callstack 0
  5978                           
  5979 ;; *************** function ___flmul *****************
  5980 ;; Defined at:
  5981 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  b               4   14[COMRAM] long 
  5984 ;;  a               4   18[COMRAM] long 
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;  prod            4   33[COMRAM] struct .
  5987 ;;  grs             4   27[COMRAM] unsigned long 
  5988 ;;  temp            2   37[COMRAM] struct .
  5989 ;;  bexp            1   32[COMRAM] unsigned char 
  5990 ;;  aexp            1   31[COMRAM] unsigned char 
  5991 ;;  sign            1   26[COMRAM] unsigned char 
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  4   14[COMRAM] unsigned char 
  5994 ;; Registers used:
  5995 ;;		wreg, status,2, status,0, prodl, prodh
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6001 ;;      Params:         8       0       0       0       0       0       0       0       0
  6002 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6003 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6004 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6005 ;;Total ram usage:       25 bytes
  6006 ;; Hardware stack levels used: 1
  6007 ;; This function calls:
  6008 ;;		Nothing
  6009 ;; This function is called by:
  6010 ;;		_testarCoolerPot
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           	psect	text17
  6015  007818                     __ptext17:
  6016                           	callstack 0
  6017  007818                     ___flmul:
  6018                           	callstack 28
  6019  007818  5012               	movf	(___flmul@b+3)^0,w,c
  6020  00781A  0B80               	andlw	128
  6021  00781C  6E1B               	movwf	___flmul@sign^0,c
  6022  00781E  5012               	movf	(___flmul@b+3)^0,w,c
  6023  007820  2412               	addwf	(___flmul@b+3)^0,w,c
  6024  007822  6E21               	movwf	___flmul@bexp^0,c
  6025  007824  AE11               	btfss	(___flmul@b+2)^0,7,c
  6026  007826  EF17  F03C         	goto	u2761
  6027  00782A  EF19  F03C         	goto	u2760
  6028  00782E                     u2761:
  6029  00782E  EF1A  F03C         	goto	l3562
  6030  007832                     u2760:
  6031  007832  8021               	bsf	___flmul@bexp^0,0,c
  6032  007834                     l3562:
  6033  007834  5021               	movf	___flmul@bexp^0,w,c
  6034  007836  B4D8               	btfsc	status,2,c
  6035  007838  EF20  F03C         	goto	u2771
  6036  00783C  EF22  F03C         	goto	u2770
  6037  007840                     u2771:
  6038  007840  EF35  F03C         	goto	l3570
  6039  007844                     u2770:
  6040  007844  2821               	incf	___flmul@bexp^0,w,c
  6041  007846  A4D8               	btfss	status,2,c
  6042  007848  EF28  F03C         	goto	u2781
  6043  00784C  EF2A  F03C         	goto	u2780
  6044  007850                     u2781:
  6045  007850  EF32  F03C         	goto	l3568
  6046  007854                     u2780:
  6047  007854  0E00               	movlw	0
  6048  007856  6E0F               	movwf	___flmul@b^0,c
  6049  007858  0E00               	movlw	0
  6050  00785A  6E10               	movwf	(___flmul@b+1)^0,c
  6051  00785C  0E00               	movlw	0
  6052  00785E  6E11               	movwf	(___flmul@b+2)^0,c
  6053  007860  0E00               	movlw	0
  6054  007862  6E12               	movwf	(___flmul@b+3)^0,c
  6055  007864                     l3568:
  6056  007864  8E11               	bsf	(___flmul@b+2)^0,7,c
  6057  007866  EF3D  F03C         	goto	l3572
  6058  00786A                     l3570:
  6059  00786A  0E00               	movlw	0
  6060  00786C  6E0F               	movwf	___flmul@b^0,c
  6061  00786E  0E00               	movlw	0
  6062  007870  6E10               	movwf	(___flmul@b+1)^0,c
  6063  007872  0E00               	movlw	0
  6064  007874  6E11               	movwf	(___flmul@b+2)^0,c
  6065  007876  0E00               	movlw	0
  6066  007878  6E12               	movwf	(___flmul@b+3)^0,c
  6067  00787A                     l3572:
  6068  00787A  5016               	movf	(___flmul@a+3)^0,w,c
  6069  00787C  0B80               	andlw	128
  6070  00787E  1A1B               	xorwf	___flmul@sign^0,f,c
  6071  007880  5016               	movf	(___flmul@a+3)^0,w,c
  6072  007882  2416               	addwf	(___flmul@a+3)^0,w,c
  6073  007884  6E20               	movwf	___flmul@aexp^0,c
  6074  007886  AE15               	btfss	(___flmul@a+2)^0,7,c
  6075  007888  EF48  F03C         	goto	u2791
  6076  00788C  EF4A  F03C         	goto	u2790
  6077  007890                     u2791:
  6078  007890  EF4B  F03C         	goto	l3580
  6079  007894                     u2790:
  6080  007894  8020               	bsf	___flmul@aexp^0,0,c
  6081  007896                     l3580:
  6082  007896  5020               	movf	___flmul@aexp^0,w,c
  6083  007898  B4D8               	btfsc	status,2,c
  6084  00789A  EF51  F03C         	goto	u2801
  6085  00789E  EF53  F03C         	goto	u2800
  6086  0078A2                     u2801:
  6087  0078A2  EF66  F03C         	goto	l3588
  6088  0078A6                     u2800:
  6089  0078A6  2820               	incf	___flmul@aexp^0,w,c
  6090  0078A8  A4D8               	btfss	status,2,c
  6091  0078AA  EF59  F03C         	goto	u2811
  6092  0078AE  EF5B  F03C         	goto	u2810
  6093  0078B2                     u2811:
  6094  0078B2  EF63  F03C         	goto	l3586
  6095  0078B6                     u2810:
  6096  0078B6  0E00               	movlw	0
  6097  0078B8  6E13               	movwf	___flmul@a^0,c
  6098  0078BA  0E00               	movlw	0
  6099  0078BC  6E14               	movwf	(___flmul@a+1)^0,c
  6100  0078BE  0E00               	movlw	0
  6101  0078C0  6E15               	movwf	(___flmul@a+2)^0,c
  6102  0078C2  0E00               	movlw	0
  6103  0078C4  6E16               	movwf	(___flmul@a+3)^0,c
  6104  0078C6                     l3586:
  6105  0078C6  8E15               	bsf	(___flmul@a+2)^0,7,c
  6106  0078C8  EF6E  F03C         	goto	l1100
  6107  0078CC                     l3588:
  6108  0078CC  0E00               	movlw	0
  6109  0078CE  6E13               	movwf	___flmul@a^0,c
  6110  0078D0  0E00               	movlw	0
  6111  0078D2  6E14               	movwf	(___flmul@a+1)^0,c
  6112  0078D4  0E00               	movlw	0
  6113  0078D6  6E15               	movwf	(___flmul@a+2)^0,c
  6114  0078D8  0E00               	movlw	0
  6115  0078DA  6E16               	movwf	(___flmul@a+3)^0,c
  6116  0078DC                     l1100:
  6117  0078DC  5020               	movf	___flmul@aexp^0,w,c
  6118  0078DE  B4D8               	btfsc	status,2,c
  6119  0078E0  EF74  F03C         	goto	u2821
  6120  0078E4  EF76  F03C         	goto	u2820
  6121  0078E8                     u2821:
  6122  0078E8  EF7E  F03C         	goto	l3592
  6123  0078EC                     u2820:
  6124  0078EC  5021               	movf	___flmul@bexp^0,w,c
  6125  0078EE  A4D8               	btfss	status,2,c
  6126  0078F0  EF7C  F03C         	goto	u2831
  6127  0078F4  EF7E  F03C         	goto	u2830
  6128  0078F8                     u2831:
  6129  0078F8  EF88  F03C         	goto	l3596
  6130  0078FC                     u2830:
  6131  0078FC                     l3592:
  6132  0078FC  0E00               	movlw	0
  6133  0078FE  6E0F               	movwf	?___flmul^0,c
  6134  007900  0E00               	movlw	0
  6135  007902  6E10               	movwf	(?___flmul+1)^0,c
  6136  007904  0E00               	movlw	0
  6137  007906  6E11               	movwf	(?___flmul+2)^0,c
  6138  007908  0E00               	movlw	0
  6139  00790A  6E12               	movwf	(?___flmul+3)^0,c
  6140  00790C  EF20  F03E         	goto	l1104
  6141  007910                     l3596:
  6142  007910  5015               	movf	(___flmul@a+2)^0,w,c
  6143  007912  020F               	mulwf	___flmul@b^0,c
  6144  007914  CFF3 F026          	movff	prodl,___flmul@temp
  6145  007918  CFF4 F027          	movff	prodh,___flmul@temp+1
  6146  00791C  5026               	movf	___flmul@temp^0,w,c
  6147  00791E  6E1C               	movwf	___flmul@grs^0,c
  6148  007920  6A1D               	clrf	(___flmul@grs+1)^0,c
  6149  007922  6A1E               	clrf	(___flmul@grs+2)^0,c
  6150  007924  6A1F               	clrf	(___flmul@grs+3)^0,c
  6151  007926  5027               	movf	(___flmul@temp+1)^0,w,c
  6152  007928  6E22               	movwf	___flmul@prod^0,c
  6153  00792A  6A23               	clrf	(___flmul@prod+1)^0,c
  6154  00792C  6A24               	clrf	(___flmul@prod+2)^0,c
  6155  00792E  6A25               	clrf	(___flmul@prod+3)^0,c
  6156  007930  5014               	movf	(___flmul@a+1)^0,w,c
  6157  007932  0210               	mulwf	(___flmul@b+1)^0,c
  6158  007934  CFF3 F026          	movff	prodl,___flmul@temp
  6159  007938  CFF4 F027          	movff	prodh,___flmul@temp+1
  6160  00793C  5026               	movf	___flmul@temp^0,w,c
  6161  00793E  261C               	addwf	___flmul@grs^0,f,c
  6162  007940  0E00               	movlw	0
  6163  007942  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6164  007944  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6165  007946  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6166  007948  5027               	movf	(___flmul@temp+1)^0,w,c
  6167  00794A  2622               	addwf	___flmul@prod^0,f,c
  6168  00794C  0E00               	movlw	0
  6169  00794E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6170  007950  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6171  007952  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6172  007954  5013               	movf	___flmul@a^0,w,c
  6173  007956  0211               	mulwf	(___flmul@b+2)^0,c
  6174  007958  CFF3 F026          	movff	prodl,___flmul@temp
  6175  00795C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6176  007960  5026               	movf	___flmul@temp^0,w,c
  6177  007962  261C               	addwf	___flmul@grs^0,f,c
  6178  007964  0E00               	movlw	0
  6179  007966  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6180  007968  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6181  00796A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6182  00796C  5027               	movf	(___flmul@temp+1)^0,w,c
  6183  00796E  2622               	addwf	___flmul@prod^0,f,c
  6184  007970  0E00               	movlw	0
  6185  007972  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6186  007974  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6187  007976  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6188  007978  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6189  00797C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6190  007980  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6191  007984  6A1C               	clrf	___flmul@grs^0,c
  6192  007986  5013               	movf	___flmul@a^0,w,c
  6193  007988  0210               	mulwf	(___flmul@b+1)^0,c
  6194  00798A  CFF3 F026          	movff	prodl,___flmul@temp
  6195  00798E  CFF4 F027          	movff	prodh,___flmul@temp+1
  6196  007992  5026               	movf	___flmul@temp^0,w,c
  6197  007994  261C               	addwf	___flmul@grs^0,f,c
  6198  007996  5027               	movf	(___flmul@temp+1)^0,w,c
  6199  007998  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6200  00799A  0E00               	movlw	0
  6201  00799C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6202  00799E  0E00               	movlw	0
  6203  0079A0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6204  0079A2  5014               	movf	(___flmul@a+1)^0,w,c
  6205  0079A4  020F               	mulwf	___flmul@b^0,c
  6206  0079A6  CFF3 F026          	movff	prodl,___flmul@temp
  6207  0079AA  CFF4 F027          	movff	prodh,___flmul@temp+1
  6208  0079AE  5026               	movf	___flmul@temp^0,w,c
  6209  0079B0  261C               	addwf	___flmul@grs^0,f,c
  6210  0079B2  5027               	movf	(___flmul@temp+1)^0,w,c
  6211  0079B4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6212  0079B6  0E00               	movlw	0
  6213  0079B8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6214  0079BA  0E00               	movlw	0
  6215  0079BC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6216  0079BE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6217  0079C2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6218  0079C6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6219  0079CA  6A1C               	clrf	___flmul@grs^0,c
  6220  0079CC  5013               	movf	___flmul@a^0,w,c
  6221  0079CE  020F               	mulwf	___flmul@b^0,c
  6222  0079D0  CFF3 F026          	movff	prodl,___flmul@temp
  6223  0079D4  CFF4 F027          	movff	prodh,___flmul@temp+1
  6224  0079D8  5026               	movf	___flmul@temp^0,w,c
  6225  0079DA  261C               	addwf	___flmul@grs^0,f,c
  6226  0079DC  5027               	movf	(___flmul@temp+1)^0,w,c
  6227  0079DE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6228  0079E0  0E00               	movlw	0
  6229  0079E2  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6230  0079E4  0E00               	movlw	0
  6231  0079E6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6232  0079E8  5015               	movf	(___flmul@a+2)^0,w,c
  6233  0079EA  0210               	mulwf	(___flmul@b+1)^0,c
  6234  0079EC  CFF3 F026          	movff	prodl,___flmul@temp
  6235  0079F0  CFF4 F027          	movff	prodh,___flmul@temp+1
  6236  0079F4  5026               	movf	___flmul@temp^0,w,c
  6237  0079F6  2622               	addwf	___flmul@prod^0,f,c
  6238  0079F8  5027               	movf	(___flmul@temp+1)^0,w,c
  6239  0079FA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6240  0079FC  0E00               	movlw	0
  6241  0079FE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6242  007A00  0E00               	movlw	0
  6243  007A02  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6244  007A04  5014               	movf	(___flmul@a+1)^0,w,c
  6245  007A06  0211               	mulwf	(___flmul@b+2)^0,c
  6246  007A08  CFF3 F026          	movff	prodl,___flmul@temp
  6247  007A0C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6248  007A10  5026               	movf	___flmul@temp^0,w,c
  6249  007A12  2622               	addwf	___flmul@prod^0,f,c
  6250  007A14  5027               	movf	(___flmul@temp+1)^0,w,c
  6251  007A16  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6252  007A18  0E00               	movlw	0
  6253  007A1A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6254  007A1C  0E00               	movlw	0
  6255  007A1E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6256  007A20  5015               	movf	(___flmul@a+2)^0,w,c
  6257  007A22  0211               	mulwf	(___flmul@b+2)^0,c
  6258  007A24  CFF3 F026          	movff	prodl,___flmul@temp
  6259  007A28  CFF4 F027          	movff	prodh,___flmul@temp+1
  6260  007A2C  5026               	movf	___flmul@temp^0,w,c
  6261  007A2E  6E17               	movwf	??___flmul^0,c
  6262  007A30  5027               	movf	(___flmul@temp+1)^0,w,c
  6263  007A32  6E18               	movwf	(??___flmul+1)^0,c
  6264  007A34  6A19               	clrf	(??___flmul+2)^0,c
  6265  007A36  6A1A               	clrf	(??___flmul+3)^0,c
  6266  007A38  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6267  007A3C  C018  F019         	movff	??___flmul+1,??___flmul+2
  6268  007A40  C017  F018         	movff	??___flmul,??___flmul+1
  6269  007A44  6A17               	clrf	??___flmul^0,c
  6270  007A46  5017               	movf	??___flmul^0,w,c
  6271  007A48  2622               	addwf	___flmul@prod^0,f,c
  6272  007A4A  5018               	movf	(??___flmul+1)^0,w,c
  6273  007A4C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6274  007A4E  5019               	movf	(??___flmul+2)^0,w,c
  6275  007A50  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6276  007A52  501A               	movf	(??___flmul+3)^0,w,c
  6277  007A54  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6278  007A56  C01C  F017         	movff	___flmul@grs,??___flmul
  6279  007A5A  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6280  007A5E  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6281  007A62  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6282  007A66  0E19               	movlw	25
  6283  007A68  EF3B  F03D         	goto	u2840
  6284  007A6C                     u2845:
  6285  007A6C  90D8               	bcf	status,0,c
  6286  007A6E  321A               	rrcf	(??___flmul+3)^0,f,c
  6287  007A70  3219               	rrcf	(??___flmul+2)^0,f,c
  6288  007A72  3218               	rrcf	(??___flmul+1)^0,f,c
  6289  007A74  3217               	rrcf	??___flmul^0,f,c
  6290  007A76                     u2840:
  6291  007A76  2EE8               	decfsz	wreg,f,c
  6292  007A78  EF36  F03D         	goto	u2845
  6293  007A7C  5017               	movf	??___flmul^0,w,c
  6294  007A7E  2622               	addwf	___flmul@prod^0,f,c
  6295  007A80  5018               	movf	(??___flmul+1)^0,w,c
  6296  007A82  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6297  007A84  5019               	movf	(??___flmul+2)^0,w,c
  6298  007A86  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6299  007A88  501A               	movf	(??___flmul+3)^0,w,c
  6300  007A8A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6301  007A8C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6302  007A90  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6303  007A94  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6304  007A98  6A1C               	clrf	___flmul@grs^0,c
  6305  007A9A  5020               	movf	___flmul@aexp^0,w,c
  6306  007A9C  C021  F017         	movff	___flmul@bexp,??___flmul
  6307  007AA0  6A18               	clrf	(??___flmul+1)^0,c
  6308  007AA2  2617               	addwf	??___flmul^0,f,c
  6309  007AA4  0E00               	movlw	0
  6310  007AA6  2218               	addwfc	(??___flmul+1)^0,f,c
  6311  007AA8  0E82               	movlw	130
  6312  007AAA  2417               	addwf	??___flmul^0,w,c
  6313  007AAC  6E26               	movwf	___flmul@temp^0,c
  6314  007AAE  0EFF               	movlw	255
  6315  007AB0  2018               	addwfc	(??___flmul+1)^0,w,c
  6316  007AB2  6E27               	movwf	(___flmul@temp+1)^0,c
  6317  007AB4  EF71  F03D         	goto	l3644
  6318  007AB8                     l3638:
  6319  007AB8  90D8               	bcf	status,0,c
  6320  007ABA  3622               	rlcf	___flmul@prod^0,f,c
  6321  007ABC  3623               	rlcf	(___flmul@prod+1)^0,f,c
  6322  007ABE  3624               	rlcf	(___flmul@prod+2)^0,f,c
  6323  007AC0  3625               	rlcf	(___flmul@prod+3)^0,f,c
  6324  007AC2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6325  007AC4  EF66  F03D         	goto	u2851
  6326  007AC8  EF68  F03D         	goto	u2850
  6327  007ACC                     u2851:
  6328  007ACC  EF69  F03D         	goto	l1107
  6329  007AD0                     u2850:
  6330  007AD0  8022               	bsf	___flmul@prod^0,0,c
  6331  007AD2                     l1107:
  6332  007AD2  90D8               	bcf	status,0,c
  6333  007AD4  361C               	rlcf	___flmul@grs^0,f,c
  6334  007AD6  361D               	rlcf	(___flmul@grs+1)^0,f,c
  6335  007AD8  361E               	rlcf	(___flmul@grs+2)^0,f,c
  6336  007ADA  361F               	rlcf	(___flmul@grs+3)^0,f,c
  6337  007ADC  0626               	decf	___flmul@temp^0,f,c
  6338  007ADE  A0D8               	btfss	status,0,c
  6339  007AE0  0627               	decf	(___flmul@temp+1)^0,f,c
  6340  007AE2                     l3644:
  6341  007AE2  AE24               	btfss	(___flmul@prod+2)^0,7,c
  6342  007AE4  EF76  F03D         	goto	u2861
  6343  007AE8  EF78  F03D         	goto	u2860
  6344  007AEC                     u2861:
  6345  007AEC  EF5C  F03D         	goto	l3638
  6346  007AF0                     u2860:
  6347  007AF0  0E00               	movlw	0
  6348  007AF2  6E20               	movwf	___flmul@aexp^0,c
  6349  007AF4  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6350  007AF6  EF7F  F03D         	goto	u2871
  6351  007AFA  EF81  F03D         	goto	u2870
  6352  007AFE                     u2871:
  6353  007AFE  EFA5  F03D         	goto	l1109
  6354  007B02                     u2870:
  6355  007B02  0EFF               	movlw	255
  6356  007B04  141C               	andwf	___flmul@grs^0,w,c
  6357  007B06  6E17               	movwf	??___flmul^0,c
  6358  007B08  0EFF               	movlw	255
  6359  007B0A  141D               	andwf	(___flmul@grs+1)^0,w,c
  6360  007B0C  6E18               	movwf	(??___flmul+1)^0,c
  6361  007B0E  0EFF               	movlw	255
  6362  007B10  141E               	andwf	(___flmul@grs+2)^0,w,c
  6363  007B12  6E19               	movwf	(??___flmul+2)^0,c
  6364  007B14  0E7F               	movlw	127
  6365  007B16  141F               	andwf	(___flmul@grs+3)^0,w,c
  6366  007B18  6E1A               	movwf	(??___flmul+3)^0,c
  6367  007B1A  5017               	movf	??___flmul^0,w,c
  6368  007B1C  1018               	iorwf	(??___flmul+1)^0,w,c
  6369  007B1E  1019               	iorwf	(??___flmul+2)^0,w,c
  6370  007B20  101A               	iorwf	(??___flmul+3)^0,w,c
  6371  007B22  B4D8               	btfsc	status,2,c
  6372  007B24  EF96  F03D         	goto	u2881
  6373  007B28  EF98  F03D         	goto	u2880
  6374  007B2C                     u2881:
  6375  007B2C  EF9C  F03D         	goto	l1110
  6376  007B30                     u2880:
  6377  007B30                     l3652:
  6378  007B30  0E01               	movlw	1
  6379  007B32  6E20               	movwf	___flmul@aexp^0,c
  6380  007B34  EFA5  F03D         	goto	l1109
  6381  007B38                     l1110:
  6382  007B38  A022               	btfss	___flmul@prod^0,0,c
  6383  007B3A  EFA1  F03D         	goto	u2891
  6384  007B3E  EFA3  F03D         	goto	u2890
  6385  007B42                     u2891:
  6386  007B42  EFA5  F03D         	goto	l1109
  6387  007B46                     u2890:
  6388  007B46  EF98  F03D         	goto	l3652
  6389  007B4A                     l1109:
  6390  007B4A  5020               	movf	___flmul@aexp^0,w,c
  6391  007B4C  B4D8               	btfsc	status,2,c
  6392  007B4E  EFAB  F03D         	goto	u2901
  6393  007B52  EFAD  F03D         	goto	u2900
  6394  007B56                     u2901:
  6395  007B56  EFD1  F03D         	goto	l3664
  6396  007B5A                     u2900:
  6397  007B5A  0E01               	movlw	1
  6398  007B5C  2622               	addwf	___flmul@prod^0,f,c
  6399  007B5E  0E00               	movlw	0
  6400  007B60  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6401  007B62  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6402  007B64  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6403  007B66  A025               	btfss	(___flmul@prod+3)^0,0,c
  6404  007B68  EFB8  F03D         	goto	u2911
  6405  007B6C  EFBA  F03D         	goto	u2910
  6406  007B70                     u2911:
  6407  007B70  EFD1  F03D         	goto	l3664
  6408  007B74                     u2910:
  6409  007B74  C022  F017         	movff	___flmul@prod,??___flmul
  6410  007B78  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6411  007B7C  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6412  007B80  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6413  007B84  341A               	rlcf	(??___flmul+3)^0,w,c
  6414  007B86  321A               	rrcf	(??___flmul+3)^0,f,c
  6415  007B88  3219               	rrcf	(??___flmul+2)^0,f,c
  6416  007B8A  3218               	rrcf	(??___flmul+1)^0,f,c
  6417  007B8C  3217               	rrcf	??___flmul^0,f,c
  6418  007B8E  C017  F022         	movff	??___flmul,___flmul@prod
  6419  007B92  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6420  007B96  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6421  007B9A  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6422  007B9E  4A26               	infsnz	___flmul@temp^0,f,c
  6423  007BA0  2A27               	incf	(___flmul@temp+1)^0,f,c
  6424  007BA2                     l3664:
  6425  007BA2  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6426  007BA4  EFDC  F03D         	goto	u2921
  6427  007BA8  5027               	movf	(___flmul@temp+1)^0,w,c
  6428  007BAA  E108               	bnz	u2920
  6429  007BAC  2826               	incf	___flmul@temp^0,w,c
  6430  007BAE  A0D8               	btfss	status,0,c
  6431  007BB0  EFDC  F03D         	goto	u2921
  6432  007BB4  EFDE  F03D         	goto	u2920
  6433  007BB8                     u2921:
  6434  007BB8  EFE8  F03D         	goto	l3668
  6435  007BBC                     u2920:
  6436  007BBC  0E00               	movlw	0
  6437  007BBE  6E22               	movwf	___flmul@prod^0,c
  6438  007BC0  0E00               	movlw	0
  6439  007BC2  6E23               	movwf	(___flmul@prod+1)^0,c
  6440  007BC4  0E80               	movlw	128
  6441  007BC6  6E24               	movwf	(___flmul@prod+2)^0,c
  6442  007BC8  0E7F               	movlw	127
  6443  007BCA  6E25               	movwf	(___flmul@prod+3)^0,c
  6444  007BCC  EF16  F03E         	goto	l3680
  6445  007BD0                     l3668:
  6446  007BD0  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6447  007BD2  EFF5  F03D         	goto	u2930
  6448  007BD6  5027               	movf	(___flmul@temp+1)^0,w,c
  6449  007BD8  E106               	bnz	u2931
  6450  007BDA  0426               	decf	___flmul@temp^0,w,c
  6451  007BDC  B0D8               	btfsc	status,0,c
  6452  007BDE  EFF3  F03D         	goto	u2931
  6453  007BE2  EFF5  F03D         	goto	u2930
  6454  007BE6                     u2931:
  6455  007BE6  EF01  F03E         	goto	l1117
  6456  007BEA                     u2930:
  6457  007BEA  0E00               	movlw	0
  6458  007BEC  6E22               	movwf	___flmul@prod^0,c
  6459  007BEE  0E00               	movlw	0
  6460  007BF0  6E23               	movwf	(___flmul@prod+1)^0,c
  6461  007BF2  0E00               	movlw	0
  6462  007BF4  6E24               	movwf	(___flmul@prod+2)^0,c
  6463  007BF6  0E00               	movlw	0
  6464  007BF8  6E25               	movwf	(___flmul@prod+3)^0,c
  6465  007BFA  0E00               	movlw	0
  6466  007BFC  6E1B               	movwf	___flmul@sign^0,c
  6467  007BFE  EF16  F03E         	goto	l3680
  6468  007C02                     l1117:
  6469  007C02  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6470  007C06  0EFF               	movlw	255
  6471  007C08  1622               	andwf	___flmul@prod^0,f,c
  6472  007C0A  0EFF               	movlw	255
  6473  007C0C  1623               	andwf	(___flmul@prod+1)^0,f,c
  6474  007C0E  0E7F               	movlw	127
  6475  007C10  1624               	andwf	(___flmul@prod+2)^0,f,c
  6476  007C12  0E00               	movlw	0
  6477  007C14  1625               	andwf	(___flmul@prod+3)^0,f,c
  6478  007C16  A021               	btfss	___flmul@bexp^0,0,c
  6479  007C18  EF10  F03E         	goto	u2941
  6480  007C1C  EF12  F03E         	goto	u2940
  6481  007C20                     u2941:
  6482  007C20  EF13  F03E         	goto	l3678
  6483  007C24                     u2940:
  6484  007C24  8E24               	bsf	(___flmul@prod+2)^0,7,c
  6485  007C26                     l3678:
  6486  007C26  90D8               	bcf	status,0,c
  6487  007C28  3021               	rrcf	___flmul@bexp^0,w,c
  6488  007C2A  6E25               	movwf	(___flmul@prod+3)^0,c
  6489  007C2C                     l3680:
  6490  007C2C  501B               	movf	___flmul@sign^0,w,c
  6491  007C2E  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6492  007C30  C022  F00F         	movff	___flmul@prod,?___flmul
  6493  007C34  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6494  007C38  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6495  007C3C  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6496  007C40                     l1104:
  6497  007C40  0012               	return		;funcret
  6498  007C42                     __end_of___flmul:
  6499                           	callstack 0
  6500                           
  6501 ;; *************** function _Escreve7Seg *****************
  6502 ;; Defined at:
  6503 ;;		line 919 in file "MyIHM_1A.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  DISPLAY         1    wreg     unsigned char 
  6506 ;;  DADO            1    0[COMRAM] unsigned char 
  6507 ;;  PONTO           1    1[COMRAM] unsigned char 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  DISPLAY         1    4[COMRAM] unsigned char 
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  1    wreg      void 
  6512 ;; Registers used:
  6513 ;;		wreg, status,2, status,0
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6519 ;;      Params:         2       0       0       0       0       0       0       0       0
  6520 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6521 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6522 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6523 ;;Total ram usage:        5 bytes
  6524 ;; Hardware stack levels used: 1
  6525 ;; This function calls:
  6526 ;;		Nothing
  6527 ;; This function is called by:
  6528 ;;		_testarDisplay2
  6529 ;;		_testarCoolerPot
  6530 ;;		_testarCoolerPotUpDown
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           	psect	text18
  6535  006142                     __ptext18:
  6536                           	callstack 0
  6537  006142                     _Escreve7Seg:
  6538                           	callstack 28
  6539                           
  6540                           ;incstack = 0
  6541                           ;Escreve7Seg@DISPLAY stored from wreg
  6542  006142  6E05               	movwf	Escreve7Seg@DISPLAY^0,c
  6543  006144                     
  6544                           ;MyIHM_1A.c: 921:     switch(DISPLAY){
  6545  006144  EFC2  F030         	goto	l3510
  6546  006148                     l454:
  6547  006148  8480               	bsf	128,2,c	;volatile
  6548  00614A  9680               	bcf	128,3,c	;volatile
  6549  00614C  9880               	bcf	128,4,c	;volatile
  6550  00614E  9A80               	bcf	128,5,c	;volatile
  6551  006150  EF17  F031         	goto	l3542
  6552  006154                     l456:
  6553  006154  9480               	bcf	128,2,c	;volatile
  6554  006156  8680               	bsf	128,3,c	;volatile
  6555  006158  9880               	bcf	128,4,c	;volatile
  6556  00615A  9A80               	bcf	128,5,c	;volatile
  6557  00615C  EF17  F031         	goto	l3542
  6558  006160                     l457:
  6559  006160  9480               	bcf	128,2,c	;volatile
  6560  006162  9680               	bcf	128,3,c	;volatile
  6561  006164  8880               	bsf	128,4,c	;volatile
  6562  006166  9A80               	bcf	128,5,c	;volatile
  6563  006168  EF17  F031         	goto	l3542
  6564  00616C                     l458:
  6565  00616C  9480               	bcf	128,2,c	;volatile
  6566  00616E  9680               	bcf	128,3,c	;volatile
  6567  006170  9880               	bcf	128,4,c	;volatile
  6568  006172  8A80               	bsf	128,5,c	;volatile
  6569  006174  EF17  F031         	goto	l3542
  6570  006178                     l459:
  6571  006178  9480               	bcf	128,2,c	;volatile
  6572  00617A  9680               	bcf	128,3,c	;volatile
  6573  00617C  9880               	bcf	128,4,c	;volatile
  6574  00617E  9A80               	bcf	128,5,c	;volatile
  6575                           
  6576                           ;MyIHM_1A.c: 928:     }
  6577  006180  EF17  F031         	goto	l3542
  6578  006184                     l3510:
  6579  006184  5005               	movf	Escreve7Seg@DISPLAY^0,w,c
  6580  006186  6E03               	movwf	??_Escreve7Seg^0,c
  6581  006188  6A04               	clrf	(??_Escreve7Seg+1)^0,c
  6582                           
  6583                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6584                           ; Switch size 1, requested type "simple"
  6585                           ; Number of cases is 1, Range of values is 0 to 0
  6586                           ; switch strategies available:
  6587                           ; Name         Instructions Cycles
  6588                           ; simple_byte            4     3 (average)
  6589                           ;	Chosen strategy is simple_byte
  6590  00618A  5004               	movf	(??_Escreve7Seg+1)^0,w,c
  6591  00618C  0A00               	xorlw	0	; case 0
  6592  00618E  B4D8               	btfsc	status,2,c
  6593  006190  EFCC  F030         	goto	l4798
  6594  006194  EFBC  F030         	goto	l459
  6595  006198                     l4798:
  6596                           
  6597                           ; Switch size 1, requested type "simple"
  6598                           ; Number of cases is 4, Range of values is 1 to 4
  6599                           ; switch strategies available:
  6600                           ; Name         Instructions Cycles
  6601                           ; simple_byte           13     7 (average)
  6602                           ;	Chosen strategy is simple_byte
  6603  006198  5003               	movf	??_Escreve7Seg^0,w,c
  6604  00619A  0A01               	xorlw	1	; case 1
  6605  00619C  B4D8               	btfsc	status,2,c
  6606  00619E  EFA4  F030         	goto	l454
  6607  0061A2  0A03               	xorlw	3	; case 2
  6608  0061A4  B4D8               	btfsc	status,2,c
  6609  0061A6  EFAA  F030         	goto	l456
  6610  0061AA  0A01               	xorlw	1	; case 3
  6611  0061AC  B4D8               	btfsc	status,2,c
  6612  0061AE  EFB0  F030         	goto	l457
  6613  0061B2  0A07               	xorlw	7	; case 4
  6614  0061B4  B4D8               	btfsc	status,2,c
  6615  0061B6  EFB6  F030         	goto	l458
  6616  0061BA  EFBC  F030         	goto	l459
  6617  0061BE                     l3512:
  6618  0061BE  0E3F               	movlw	63
  6619  0061C0  6E83               	movwf	131,c	;volatile
  6620  0061C2  EF58  F031         	goto	l3544
  6621  0061C6                     l3514:
  6622  0061C6  0E06               	movlw	6
  6623  0061C8  6E83               	movwf	131,c	;volatile
  6624  0061CA  EF58  F031         	goto	l3544
  6625  0061CE                     l3516:
  6626  0061CE  0E5B               	movlw	91
  6627  0061D0  6E83               	movwf	131,c	;volatile
  6628  0061D2  EF58  F031         	goto	l3544
  6629  0061D6                     l3518:
  6630  0061D6  0E4F               	movlw	79
  6631  0061D8  6E83               	movwf	131,c	;volatile
  6632  0061DA  EF58  F031         	goto	l3544
  6633  0061DE                     l3520:
  6634  0061DE  0E66               	movlw	102
  6635  0061E0  6E83               	movwf	131,c	;volatile
  6636  0061E2  EF58  F031         	goto	l3544
  6637  0061E6                     l3522:
  6638  0061E6  0E6D               	movlw	109
  6639  0061E8  6E83               	movwf	131,c	;volatile
  6640  0061EA  EF58  F031         	goto	l3544
  6641  0061EE                     l3524:
  6642  0061EE  0E7C               	movlw	124
  6643  0061F0  6E83               	movwf	131,c	;volatile
  6644  0061F2  EF58  F031         	goto	l3544
  6645  0061F6                     l3526:
  6646  0061F6  0E07               	movlw	7
  6647  0061F8  6E83               	movwf	131,c	;volatile
  6648  0061FA  EF58  F031         	goto	l3544
  6649  0061FE                     l3528:
  6650  0061FE  0E7F               	movlw	127
  6651  006200  6E83               	movwf	131,c	;volatile
  6652  006202  EF58  F031         	goto	l3544
  6653  006206                     l3530:
  6654  006206  0E67               	movlw	103
  6655  006208  6E83               	movwf	131,c	;volatile
  6656  00620A  EF58  F031         	goto	l3544
  6657  00620E                     l3532:
  6658  00620E  0E52               	movlw	82
  6659  006210  6E83               	movwf	131,c	;volatile
  6660  006212  EF58  F031         	goto	l3544
  6661  006216                     l3534:
  6662  006216  0E39               	movlw	57
  6663  006218  6E83               	movwf	131,c	;volatile
  6664  00621A  EF58  F031         	goto	l3544
  6665  00621E                     l3536:
  6666  00621E  0E63               	movlw	99
  6667  006220  6E83               	movwf	131,c	;volatile
  6668  006222  EF58  F031         	goto	l3544
  6669  006226                     l3538:
  6670  006226  0E00               	movlw	0
  6671  006228  6E83               	movwf	131,c	;volatile
  6672  00622A  EF58  F031         	goto	l3544
  6673  00622E                     l3542:
  6674  00622E  5001               	movf	Escreve7Seg@DADO^0,w,c
  6675  006230  6E03               	movwf	??_Escreve7Seg^0,c
  6676  006232  6A04               	clrf	(??_Escreve7Seg+1)^0,c
  6677                           
  6678                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6679                           ; Switch size 1, requested type "simple"
  6680                           ; Number of cases is 1, Range of values is 0 to 0
  6681                           ; switch strategies available:
  6682                           ; Name         Instructions Cycles
  6683                           ; simple_byte            4     3 (average)
  6684                           ;	Chosen strategy is simple_byte
  6685  006234  5004               	movf	(??_Escreve7Seg+1)^0,w,c
  6686  006236  0A00               	xorlw	0	; case 0
  6687  006238  B4D8               	btfsc	status,2,c
  6688  00623A  EF21  F031         	goto	l4800
  6689  00623E  EF13  F031         	goto	l3538
  6690  006242                     l4800:
  6691                           
  6692                           ; Switch size 1, requested type "simple"
  6693                           ; Number of cases is 13, Range of values is 0 to 255
  6694                           ; switch strategies available:
  6695                           ; Name         Instructions Cycles
  6696                           ; simple_byte           40    21 (average)
  6697                           ;	Chosen strategy is simple_byte
  6698  006242  5003               	movf	??_Escreve7Seg^0,w,c
  6699  006244  0A00               	xorlw	0	; case 0
  6700  006246  B4D8               	btfsc	status,2,c
  6701  006248  EFDF  F030         	goto	l3512
  6702  00624C  0A01               	xorlw	1	; case 1
  6703  00624E  B4D8               	btfsc	status,2,c
  6704  006250  EFE3  F030         	goto	l3514
  6705  006254  0A03               	xorlw	3	; case 2
  6706  006256  B4D8               	btfsc	status,2,c
  6707  006258  EFE7  F030         	goto	l3516
  6708  00625C  0A01               	xorlw	1	; case 3
  6709  00625E  B4D8               	btfsc	status,2,c
  6710  006260  EFEB  F030         	goto	l3518
  6711  006264  0A07               	xorlw	7	; case 4
  6712  006266  B4D8               	btfsc	status,2,c
  6713  006268  EFEF  F030         	goto	l3520
  6714  00626C  0A01               	xorlw	1	; case 5
  6715  00626E  B4D8               	btfsc	status,2,c
  6716  006270  EFF3  F030         	goto	l3522
  6717  006274  0A03               	xorlw	3	; case 6
  6718  006276  B4D8               	btfsc	status,2,c
  6719  006278  EFF7  F030         	goto	l3524
  6720  00627C  0A01               	xorlw	1	; case 7
  6721  00627E  B4D8               	btfsc	status,2,c
  6722  006280  EFFB  F030         	goto	l3526
  6723  006284  0A0F               	xorlw	15	; case 8
  6724  006286  B4D8               	btfsc	status,2,c
  6725  006288  EFFF  F030         	goto	l3528
  6726  00628C  0A01               	xorlw	1	; case 9
  6727  00628E  B4D8               	btfsc	status,2,c
  6728  006290  EF03  F031         	goto	l3530
  6729  006294  0AF4               	xorlw	244	; case 253
  6730  006296  B4D8               	btfsc	status,2,c
  6731  006298  EF07  F031         	goto	l3532
  6732  00629C  0A03               	xorlw	3	; case 254
  6733  00629E  B4D8               	btfsc	status,2,c
  6734  0062A0  EF0B  F031         	goto	l3534
  6735  0062A4  0A01               	xorlw	1	; case 255
  6736  0062A6  B4D8               	btfsc	status,2,c
  6737  0062A8  EF0F  F031         	goto	l3536
  6738  0062AC  EF13  F031         	goto	l3538
  6739  0062B0                     l3544:
  6740                           
  6741                           ;MyIHM_1A.c: 947:     if(PONTO == 1) PORTDbits.RD7 = 1;
  6742  0062B0  0402               	decf	Escreve7Seg@PONTO^0,w,c
  6743  0062B2  A4D8               	btfss	status,2,c
  6744  0062B4  EF5E  F031         	goto	u2751
  6745  0062B8  EF60  F031         	goto	u2750
  6746  0062BC                     u2751:
  6747  0062BC  EF61  F031         	goto	l477
  6748  0062C0                     u2750:
  6749  0062C0  8E83               	bsf	131,7,c	;volatile
  6750  0062C2                     l477:
  6751  0062C2  0012               	return		;funcret
  6752  0062C4                     __end_of_Escreve7Seg:
  6753                           	callstack 0
  6754                           
  6755 ;; *************** function _subMenuBuzzer *****************
  6756 ;; Defined at:
  6757 ;;		line 606 in file "MyIHM_1A.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;		None
  6760 ;; Auto vars:     Size  Location     Type
  6761 ;;  vopc            2   27[BANK0 ] int 
  6762 ;; Return value:  Size  Location     Type
  6763 ;;                  2  281[None  ] short 
  6764 ;; Registers used:
  6765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6771 ;;      Params:         0       0       0       0       0       0       0       0       0
  6772 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6773 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6774 ;;      Totals:         0       4       0       0       0       0       0       0       0
  6775 ;;Total ram usage:        4 bytes
  6776 ;; Hardware stack levels used: 1
  6777 ;; Hardware stack levels required when called: 9
  6778 ;; This function calls:
  6779 ;;		_EscreveLinhaLCD4
  6780 ;;		_capturaUpDown
  6781 ;;		_miniMidi
  6782 ;;		_testarBuzzerPWM
  6783 ;; This function is called by:
  6784 ;;		_main
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text19
  6789  006970                     __ptext19:
  6790                           	callstack 0
  6791  006970                     _subMenuBuzzer:
  6792                           	callstack 21
  6793  006970                     l4336:
  6794                           
  6795                           ;MyIHM_1A.c: 607:     int vopc = 1;
  6796  006970  0E00               	movlw	0
  6797  006972  0100               	movlb	0	; () banked
  6798  006974  6F7C               	movwf	(subMenuBuzzer@vopc+1)& (0+255),b
  6799  006976  0E01               	movlw	1
  6800  006978  6F7B               	movwf	subMenuBuzzer@vopc& (0+255),b
  6801  00697A                     l4338:
  6802                           
  6803                           ;MyIHM_1A.c: 609:         vopc = capturaUpDown(vopc);
  6804  00697A  C07B  F001         	movff	subMenuBuzzer@vopc,capturaUpDown@opt
  6805  00697E  C07C  F002         	movff	subMenuBuzzer@vopc+1,capturaUpDown@opt+1
  6806  006982  ECC4  F026         	call	_capturaUpDown	;wreg free
  6807  006986  C001  F07B         	movff	?_capturaUpDown,subMenuBuzzer@vopc
  6808  00698A  C002  F07C         	movff	?_capturaUpDown+1,subMenuBuzzer@vopc+1
  6809                           
  6810                           ;MyIHM_1A.c: 610:         switch(vopc){
  6811  00698E  EF8B  F035         	goto	l4388
  6812  006992                     l4340:
  6813                           
  6814                           ; BSR set to: 0
  6815                           ;MyIHM_1A.c: 612:                 EscreveLinhaLCD4(1, ">Mini MIDI      ");
  6816  006992  0E6E               	movlw	low STR_34
  6817  006994  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  6818  006996  0E7E               	movlw	high STR_34
  6819  006998  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  6820  00699A  0E01               	movlw	1
  6821  00699C  ECE5  F028         	call	_EscreveLinhaLCD4
  6822                           
  6823                           ;MyIHM_1A.c: 613:                 EscreveLinhaLCD4(2, " PWM 25%        ");
  6824  0069A0  0ED5               	movlw	low STR_35
  6825  0069A2  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  6826  0069A4  0E7D               	movlw	high STR_35
  6827  0069A6  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  6828  0069A8  0E02               	movlw	2
  6829  0069AA  ECE5  F028         	call	_EscreveLinhaLCD4
  6830  0069AE                     
  6831                           ;MyIHM_1A.c: 614:                 if (PORTBbits.RB1 == 0 ){
  6832  0069AE  B281               	btfsc	129,1,c	;volatile
  6833  0069B0  EFDC  F034         	goto	u3821
  6834  0069B4  EFDE  F034         	goto	u3820
  6835  0069B8                     u3821:
  6836  0069B8  EFBD  F034         	goto	l4338
  6837  0069BC                     u3820:
  6838  0069BC                     l286:
  6839  0069BC  A281               	btfss	129,1,c	;volatile
  6840  0069BE  EFE3  F034         	goto	u3831
  6841  0069C2  EFE5  F034         	goto	u3830
  6842  0069C6                     u3831:
  6843  0069C6  EFDE  F034         	goto	l286
  6844  0069CA                     u3830:
  6845  0069CA                     
  6846                           ;MyIHM_1A.c: 616:                     miniMidi();
  6847  0069CA  EC1B  F02D         	call	_miniMidi	;wreg free
  6848  0069CE  EFBD  F034         	goto	l4338
  6849  0069D2                     l4348:
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;MyIHM_1A.c: 620:                  EscreveLinhaLCD4(1, ">PWM 25%  Off   ");
  6853  0069D2  0ED4               	movlw	low STR_36
  6854  0069D4  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  6855  0069D6  0E7E               	movlw	high STR_36
  6856  0069D8  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  6857  0069DA  0E01               	movlw	1
  6858  0069DC  ECE5  F028         	call	_EscreveLinhaLCD4
  6859                           
  6860                           ;MyIHM_1A.c: 621:                  EscreveLinhaLCD4(2, " PWM 50%  Off   ");
  6861  0069E0  0EB2               	movlw	low STR_37
  6862  0069E2  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  6863  0069E4  0E7E               	movlw	high STR_37
  6864  0069E6  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  6865  0069E8  0E02               	movlw	2
  6866  0069EA  ECE5  F028         	call	_EscreveLinhaLCD4
  6867  0069EE                     
  6868                           ;MyIHM_1A.c: 622:                  if (PORTBbits.RB1 == 0 ){
  6869  0069EE  B281               	btfsc	129,1,c	;volatile
  6870  0069F0  EFFC  F034         	goto	u3841
  6871  0069F4  EFFE  F034         	goto	u3840
  6872  0069F8                     u3841:
  6873  0069F8  EFBD  F034         	goto	l4338
  6874  0069FC                     u3840:
  6875  0069FC                     l292:
  6876  0069FC  A281               	btfss	129,1,c	;volatile
  6877  0069FE  EF03  F035         	goto	u3851
  6878  006A02  EF05  F035         	goto	u3850
  6879  006A06                     u3851:
  6880  006A06  EFFE  F034         	goto	l292
  6881  006A0A                     u3850:
  6882  006A0A                     
  6883                           ;MyIHM_1A.c: 624:                      testarBuzzerPWM(25);
  6884  006A0A  0E19               	movlw	25
  6885  006A0C  ECFE  F027         	call	_testarBuzzerPWM
  6886  006A10  EFBD  F034         	goto	l4338
  6887  006A14                     l4356:
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;MyIHM_1A.c: 628:                  EscreveLinhaLCD4(1, ">PWM 50%  Off   ");
  6891  006A14  0EC3               	movlw	low STR_38
  6892  006A16  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  6893  006A18  0E7E               	movlw	high STR_38
  6894  006A1A  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  6895  006A1C  0E01               	movlw	1
  6896  006A1E  ECE5  F028         	call	_EscreveLinhaLCD4
  6897                           
  6898                           ;MyIHM_1A.c: 629:                  EscreveLinhaLCD4(2, " PWM 75%  Off   ");
  6899  006A22  0EE5               	movlw	low STR_39
  6900  006A24  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  6901  006A26  0E7E               	movlw	high STR_39
  6902  006A28  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  6903  006A2A  0E02               	movlw	2
  6904  006A2C  ECE5  F028         	call	_EscreveLinhaLCD4
  6905  006A30                     
  6906                           ;MyIHM_1A.c: 630:                   if (PORTBbits.RB1 == 0 ){
  6907  006A30  B281               	btfsc	129,1,c	;volatile
  6908  006A32  EF1D  F035         	goto	u3861
  6909  006A36  EF1F  F035         	goto	u3860
  6910  006A3A                     u3861:
  6911  006A3A  EFBD  F034         	goto	l4338
  6912  006A3E                     u3860:
  6913  006A3E                     l297:
  6914  006A3E  A281               	btfss	129,1,c	;volatile
  6915  006A40  EF24  F035         	goto	u3871
  6916  006A44  EF26  F035         	goto	u3870
  6917  006A48                     u3871:
  6918  006A48  EF1F  F035         	goto	l297
  6919  006A4C                     u3870:
  6920  006A4C                     
  6921                           ;MyIHM_1A.c: 632:                      testarBuzzerPWM(50);
  6922  006A4C  0E32               	movlw	50
  6923  006A4E  ECFE  F027         	call	_testarBuzzerPWM
  6924  006A52  EFBD  F034         	goto	l4338
  6925  006A56                     l4364:
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;MyIHM_1A.c: 636:                  EscreveLinhaLCD4(1, ">PWM 75%  Off   ");
  6929  006A56  0EF6               	movlw	low STR_40
  6930  006A58  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  6931  006A5A  0E7E               	movlw	high STR_40
  6932  006A5C  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  6933  006A5E  0E01               	movlw	1
  6934  006A60  ECE5  F028         	call	_EscreveLinhaLCD4
  6935                           
  6936                           ;MyIHM_1A.c: 637:                  EscreveLinhaLCD4(2, " PWM 100% Off   ");
  6937  006A64  0E07               	movlw	low STR_41
  6938  006A66  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  6939  006A68  0E7F               	movlw	high STR_41
  6940  006A6A  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  6941  006A6C  0E02               	movlw	2
  6942  006A6E  ECE5  F028         	call	_EscreveLinhaLCD4
  6943  006A72                     
  6944                           ;MyIHM_1A.c: 638:                   if (PORTBbits.RB1 == 0 ){
  6945  006A72  B281               	btfsc	129,1,c	;volatile
  6946  006A74  EF3E  F035         	goto	u3881
  6947  006A78  EF40  F035         	goto	u3880
  6948  006A7C                     u3881:
  6949  006A7C  EFBD  F034         	goto	l4338
  6950  006A80                     u3880:
  6951  006A80                     l302:
  6952  006A80  A281               	btfss	129,1,c	;volatile
  6953  006A82  EF45  F035         	goto	u3891
  6954  006A86  EF47  F035         	goto	u3890
  6955  006A8A                     u3891:
  6956  006A8A  EF40  F035         	goto	l302
  6957  006A8E                     u3890:
  6958  006A8E                     
  6959                           ;MyIHM_1A.c: 640:                      testarBuzzerPWM(75);
  6960  006A8E  0E4B               	movlw	75
  6961  006A90  ECFE  F027         	call	_testarBuzzerPWM
  6962  006A94  EFBD  F034         	goto	l4338
  6963  006A98                     l4372:
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;MyIHM_1A.c: 644:                  EscreveLinhaLCD4(1, ">PWM 100% Off   ");
  6967  006A98  0E18               	movlw	low STR_42
  6968  006A9A  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  6969  006A9C  0E7F               	movlw	high STR_42
  6970  006A9E  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  6971  006AA0  0E01               	movlw	1
  6972  006AA2  ECE5  F028         	call	_EscreveLinhaLCD4
  6973                           
  6974                           ;MyIHM_1A.c: 645:                  EscreveLinhaLCD4(2, " Voltar         ");
  6975  006AA6  0E4D               	movlw	low STR_25
  6976  006AA8  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  6977  006AAA  0E7D               	movlw	high STR_25
  6978  006AAC  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  6979  006AAE  0E02               	movlw	2
  6980  006AB0  ECE5  F028         	call	_EscreveLinhaLCD4
  6981  006AB4                     
  6982                           ;MyIHM_1A.c: 646:                   if (PORTBbits.RB1 == 0 ){
  6983  006AB4  B281               	btfsc	129,1,c	;volatile
  6984  006AB6  EF5F  F035         	goto	u3901
  6985  006ABA  EF61  F035         	goto	u3900
  6986  006ABE                     u3901:
  6987  006ABE  EFBD  F034         	goto	l4338
  6988  006AC2                     u3900:
  6989  006AC2                     l307:
  6990  006AC2  A281               	btfss	129,1,c	;volatile
  6991  006AC4  EF66  F035         	goto	u3911
  6992  006AC8  EF68  F035         	goto	u3910
  6993  006ACC                     u3911:
  6994  006ACC  EF61  F035         	goto	l307
  6995  006AD0                     u3910:
  6996  006AD0                     
  6997                           ;MyIHM_1A.c: 648:                      testarBuzzerPWM(100);
  6998  006AD0  0E64               	movlw	100
  6999  006AD2  ECFE  F027         	call	_testarBuzzerPWM
  7000  006AD6  EFBD  F034         	goto	l4338
  7001  006ADA                     l4380:
  7002                           
  7003                           ; BSR set to: 0
  7004                           ;MyIHM_1A.c: 652:                 EscreveLinhaLCD4(1, ">Voltar         ");
  7005  006ADA  0E5E               	movlw	low STR_26
  7006  006ADC  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  7007  006ADE  0E7D               	movlw	high STR_26
  7008  006AE0  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  7009  006AE2  0E01               	movlw	1
  7010  006AE4  ECE5  F028         	call	_EscreveLinhaLCD4
  7011                           
  7012                           ;MyIHM_1A.c: 653:                 EscreveLinhaLCD4(2, "________________");
  7013  006AE8  0EE7               	movlw	low (STR_57+1)
  7014  006AEA  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  7015  006AEC  0E7C               	movlw	high (STR_57+1)
  7016  006AEE  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  7017  006AF0  0E02               	movlw	2
  7018  006AF2  ECE5  F028         	call	_EscreveLinhaLCD4
  7019  006AF6                     
  7020                           ;MyIHM_1A.c: 654:                 if (PORTBbits.RB1 == 0 ){
  7021  006AF6  B281               	btfsc	129,1,c	;volatile
  7022  006AF8  EF80  F035         	goto	u3921
  7023  006AFC  EF82  F035         	goto	u3920
  7024  006B00                     u3921:
  7025  006B00  EFBD  F034         	goto	l4338
  7026  006B04                     u3920:
  7027  006B04                     l312:
  7028  006B04  A281               	btfss	129,1,c	;volatile
  7029  006B06  EF87  F035         	goto	u3931
  7030  006B0A  EF89  F035         	goto	u3930
  7031  006B0E                     u3931:
  7032  006B0E  EF82  F035         	goto	l312
  7033  006B12                     u3930:
  7034  006B12  EFB2  F035         	goto	l315
  7035  006B16                     l4388:
  7036  006B16  C07B  F079         	movff	subMenuBuzzer@vopc,??_subMenuBuzzer
  7037  006B1A  C07C  F07A         	movff	subMenuBuzzer@vopc+1,??_subMenuBuzzer+1
  7038                           
  7039                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7040                           ; Switch size 1, requested type "simple"
  7041                           ; Number of cases is 1, Range of values is 0 to 0
  7042                           ; switch strategies available:
  7043                           ; Name         Instructions Cycles
  7044                           ; simple_byte            4     3 (average)
  7045                           ;	Chosen strategy is simple_byte
  7046  006B1E  0100               	movlb	0	; () banked
  7047  006B20  517A               	movf	(??_subMenuBuzzer+1)& (0+255),w,b
  7048  006B22  0A00               	xorlw	0	; case 0
  7049  006B24  B4D8               	btfsc	status,2,c
  7050  006B26  EF97  F035         	goto	l4802
  7051  006B2A  EFB8  F034         	goto	l4336
  7052  006B2E                     l4802:
  7053                           
  7054                           ; BSR set to: 0
  7055                           ; Switch size 1, requested type "simple"
  7056                           ; Number of cases is 6, Range of values is 1 to 6
  7057                           ; switch strategies available:
  7058                           ; Name         Instructions Cycles
  7059                           ; simple_byte           19    10 (average)
  7060                           ;	Chosen strategy is simple_byte
  7061  006B2E  5179               	movf	??_subMenuBuzzer& (0+255),w,b
  7062  006B30  0A01               	xorlw	1	; case 1
  7063  006B32  B4D8               	btfsc	status,2,c
  7064  006B34  EFC9  F034         	goto	l4340
  7065  006B38  0A03               	xorlw	3	; case 2
  7066  006B3A  B4D8               	btfsc	status,2,c
  7067  006B3C  EFE9  F034         	goto	l4348
  7068  006B40  0A01               	xorlw	1	; case 3
  7069  006B42  B4D8               	btfsc	status,2,c
  7070  006B44  EF0A  F035         	goto	l4356
  7071  006B48  0A07               	xorlw	7	; case 4
  7072  006B4A  B4D8               	btfsc	status,2,c
  7073  006B4C  EF2B  F035         	goto	l4364
  7074  006B50  0A01               	xorlw	1	; case 5
  7075  006B52  B4D8               	btfsc	status,2,c
  7076  006B54  EF4C  F035         	goto	l4372
  7077  006B58  0A03               	xorlw	3	; case 6
  7078  006B5A  B4D8               	btfsc	status,2,c
  7079  006B5C  EF6D  F035         	goto	l4380
  7080  006B60  EFB8  F034         	goto	l4336
  7081  006B64                     l315:
  7082  006B64  0012               	return		;funcret
  7083  006B66                     __end_of_subMenuBuzzer:
  7084                           	callstack 0
  7085                           
  7086 ;; *************** function _testarBuzzerPWM *****************
  7087 ;; Defined at:
  7088 ;;		line 325 in file "MyIHM_1A.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;  pwm             1    wreg     unsigned char 
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;  pwm             1   24[BANK0 ] unsigned char 
  7093 ;;  msg            16    8[BANK0 ] unsigned char [16]
  7094 ;; Return value:  Size  Location     Type
  7095 ;;                  1    wreg      void 
  7096 ;; Registers used:
  7097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7098 ;; Tracked objects:
  7099 ;;		On entry : 0/0
  7100 ;;		On exit  : 0/0
  7101 ;;		Unchanged: 0/0
  7102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7103 ;;      Params:         0       0       0       0       0       0       0       0       0
  7104 ;;      Locals:         0      17       0       0       0       0       0       0       0
  7105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7106 ;;      Totals:         0      17       0       0       0       0       0       0       0
  7107 ;;Total ram usage:       17 bytes
  7108 ;; Hardware stack levels used: 1
  7109 ;; Hardware stack levels required when called: 8
  7110 ;; This function calls:
  7111 ;;		_EscreveLinhaLCD4
  7112 ;;		_inicializaPWM
  7113 ;;		_inicializaTimer
  7114 ;;		_setaFreqPWM
  7115 ;;		_setaPWM2
  7116 ;;		_sprintf
  7117 ;; This function is called by:
  7118 ;;		_subMenuBuzzer
  7119 ;; This function uses a non-reentrant model
  7120 ;;
  7121                           
  7122                           	psect	text20
  7123  004FFC                     __ptext20:
  7124                           	callstack 0
  7125  004FFC                     _testarBuzzerPWM:
  7126                           	callstack 21
  7127                           
  7128                           ;incstack = 0
  7129                           ;testarBuzzerPWM@pwm stored from wreg
  7130  004FFC  0100               	movlb	0	; () banked
  7131  004FFE  6F78               	movwf	testarBuzzerPWM@pwm& (0+255),b
  7132  005000                     
  7133                           ;MyIHM_1A.c: 326:     char msg[16];;MyIHM_1A.c: 327:     inicializaPWM();
  7134  005000  ECBB  F025         	call	_inicializaPWM	;wreg free
  7135                           
  7136                           ;MyIHM_1A.c: 328:     inicializaTimer();
  7137  005004  ECAF  F025         	call	_inicializaTimer	;wreg free
  7138                           
  7139                           ;MyIHM_1A.c: 329:     setaFreqPWM(5000);
  7140  005008  0E13               	movlw	19
  7141  00500A  6E10               	movwf	(setaFreqPWM@freq+1)^0,c
  7142  00500C  0E88               	movlw	136
  7143  00500E  6E0F               	movwf	setaFreqPWM@freq^0,c
  7144  005010  ECFB  F025         	call	_setaFreqPWM	;wreg free
  7145  005014                     
  7146                           ;MyIHM_1A.c: 330:     setaPWM2(pwm);
  7147  005014  0100               	movlb	0	; () banked
  7148  005016  5178               	movf	testarBuzzerPWM@pwm& (0+255),w,b
  7149  005018  EC40  F027         	call	_setaPWM2
  7150  00501C                     
  7151                           ;MyIHM_1A.c: 331:     sprintf(msg,">PWM %d%%  ON    ",pwm);
  7152  00501C  0E68               	movlw	low testarBuzzerPWM@msg
  7153  00501E  6E5A               	movwf	sprintf@s^0,c
  7154  005020  0E00               	movlw	high testarBuzzerPWM@msg
  7155  005022  6E5B               	movwf	(sprintf@s+1)^0,c
  7156  005024  0EC2               	movlw	low STR_15
  7157  005026  6E5C               	movwf	sprintf@fmt^0,c
  7158  005028  0E7C               	movlw	high STR_15
  7159  00502A  6E5D               	movwf	(sprintf@fmt+1)^0,c
  7160  00502C  C078  F05E         	movff	testarBuzzerPWM@pwm,?_sprintf+4
  7161  005030  6A5F               	clrf	(?_sprintf+5)^0,c
  7162  005032  ECEC  F026         	call	_sprintf	;wreg free
  7163  005036                     
  7164                           ;MyIHM_1A.c: 332:     EscreveLinhaLCD4(1,msg);
  7165  005036  0E68               	movlw	low testarBuzzerPWM@msg
  7166  005038  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  7167  00503A  0E00               	movlw	high testarBuzzerPWM@msg
  7168  00503C  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  7169  00503E  0E01               	movlw	1
  7170  005040  ECE5  F028         	call	_EscreveLinhaLCD4
  7171  005044                     l160:
  7172  005044  B281               	btfsc	129,1,c	;volatile
  7173  005046  EF27  F028         	goto	u3431
  7174  00504A  EF29  F028         	goto	u3430
  7175  00504E                     u3431:
  7176  00504E  EF22  F028         	goto	l160
  7177  005052                     u3430:
  7178  005052                     
  7179                           ;MyIHM_1A.c: 337:         setaPWM2(0);
  7180  005052  0E00               	movlw	0
  7181  005054  EC40  F027         	call	_setaPWM2
  7182  005058                     l163:
  7183  005058  A281               	btfss	129,1,c	;volatile
  7184  00505A  EF31  F028         	goto	u3441
  7185  00505E  EF33  F028         	goto	u3440
  7186  005062                     u3441:
  7187  005062  EF2C  F028         	goto	l163
  7188  005066                     u3440:
  7189  005066  0012               	return		;funcret
  7190  005068                     __end_of_testarBuzzerPWM:
  7191                           	callstack 0
  7192                           
  7193 ;; *************** function _sprintf *****************
  7194 ;; Defined at:
  7195 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;  s               2   89[COMRAM] PTR unsigned char 
  7198 ;;		 -> testarCoolerPotUpDown@msg(16), testarCoolerPot@msg(16), testarBuzzerPWM@msg(16), testarRelays@msg1(16), 
  7199 ;;		 -> testarRelays@msg2(16), testarDisplay2@sconta(16), 
  7200 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
  7201 ;;		 -> STR_18(18), STR_16(18), STR_15(18), STR_12(13), 
  7202 ;;		 -> STR_11(13), STR_10(13), STR_9(13), STR_8(17), 
  7203 ;;		 -> STR_7(19), 
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;  f               6    2[BANK0 ] struct _IO_FILE
  7206 ;;  ap              2    0[BANK0 ] PTR void [1]
  7207 ;;		 -> ?_sprintf(2), 
  7208 ;;  ret             2    0        int 
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  2   89[COMRAM] int 
  7211 ;; Registers used:
  7212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7218 ;;      Params:         6       0       0       0       0       0       0       0       0
  7219 ;;      Locals:         0       8       0       0       0       0       0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7221 ;;      Totals:         6       8       0       0       0       0       0       0       0
  7222 ;;Total ram usage:       14 bytes
  7223 ;; Hardware stack levels used: 1
  7224 ;; Hardware stack levels required when called: 7
  7225 ;; This function calls:
  7226 ;;		_vfprintf
  7227 ;; This function is called by:
  7228 ;;		_testarDisplay2
  7229 ;;		_testarRelays
  7230 ;;		_testarBuzzerPWM
  7231 ;;		_testarCoolerPot
  7232 ;;		_testarCoolerPotUpDown
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text21
  7237  004DD8                     __ptext21:
  7238                           	callstack 0
  7239  004DD8                     _sprintf:
  7240                           	callstack 21
  7241  004DD8  0E5E               	movlw	low (?_sprintf+4)
  7242  004DDA  0100               	movlb	0	; () banked
  7243  004DDC  6F60               	movwf	sprintf@ap& (0+255),b
  7244  004DDE  0E00               	movlw	high (?_sprintf+4)
  7245  004DE0  6F61               	movwf	(sprintf@ap+1)& (0+255),b
  7246  004DE2  C05A  F062         	movff	sprintf@s,sprintf@f
  7247  004DE6  C05B  F063         	movff	sprintf@s+1,sprintf@f+1
  7248  004DEA                     
  7249                           ; BSR set to: 0
  7250  004DEA  0E00               	movlw	0
  7251  004DEC  6F65               	movwf	(sprintf@f+3)& (0+255),b
  7252  004DEE  0E00               	movlw	0
  7253  004DF0  6F64               	movwf	(sprintf@f+2)& (0+255),b
  7254  004DF2                     
  7255                           ; BSR set to: 0
  7256  004DF2  0E00               	movlw	0
  7257  004DF4  6F67               	movwf	(sprintf@f+5)& (0+255),b
  7258  004DF6  0E00               	movlw	0
  7259  004DF8  6F66               	movwf	(sprintf@f+4)& (0+255),b
  7260  004DFA                     
  7261                           ; BSR set to: 0
  7262  004DFA  0E62               	movlw	low sprintf@f
  7263  004DFC  6E52               	movwf	vfprintf@fp^0,c
  7264  004DFE  0E00               	movlw	high sprintf@f
  7265  004E00  6E53               	movwf	(vfprintf@fp+1)^0,c
  7266  004E02  C05C  F054         	movff	sprintf@fmt,vfprintf@fmt
  7267  004E06  C05D  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7268  004E0A  0E60               	movlw	low sprintf@ap
  7269  004E0C  6E56               	movwf	vfprintf@ap^0,c
  7270  004E0E  0E00               	movlw	high sprintf@ap
  7271  004E10  6E57               	movwf	(vfprintf@ap+1)^0,c
  7272  004E12  EC9B  F027         	call	_vfprintf	;wreg free
  7273  004E16  0100               	movlb	0	; () banked
  7274  004E18  5164               	movf	(sprintf@f+2)& (0+255),w,b
  7275  004E1A  245A               	addwf	sprintf@s^0,w,c
  7276  004E1C  6ED9               	movwf	fsr2l,c
  7277  004E1E  5165               	movf	(sprintf@f+3)& (0+255),w,b
  7278  004E20  205B               	addwfc	(sprintf@s+1)^0,w,c
  7279  004E22  6EDA               	movwf	fsr2h,c
  7280  004E24  0E00               	movlw	0
  7281  004E26  6EDF               	movwf	indf2,c
  7282  004E28                     
  7283                           ; BSR set to: 0
  7284  004E28  0012               	return		;funcret
  7285  004E2A                     __end_of_sprintf:
  7286                           	callstack 0
  7287                           
  7288 ;; *************** function _vfprintf *****************
  7289 ;; Defined at:
  7290 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  7293 ;;		 -> sprintf@f(6), 
  7294 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  7295 ;;		 -> STR_18(18), STR_16(18), STR_15(18), STR_12(13), 
  7296 ;;		 -> STR_11(13), STR_10(13), STR_9(13), STR_8(17), 
  7297 ;;		 -> STR_7(19), 
  7298 ;;  ap              2   85[COMRAM] PTR PTR void 
  7299 ;;		 -> sprintf@ap(2), 
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  7302 ;;		 -> STR_18(18), STR_16(18), STR_15(18), STR_12(13), 
  7303 ;;		 -> STR_11(13), STR_10(13), STR_9(13), STR_8(17), 
  7304 ;;		 -> STR_7(19), 
  7305 ;; Return value:  Size  Location     Type
  7306 ;;                  2   81[COMRAM] int 
  7307 ;; Registers used:
  7308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7309 ;; Tracked objects:
  7310 ;;		On entry : 0/0
  7311 ;;		On exit  : 0/0
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7314 ;;      Params:         6       0       0       0       0       0       0       0       0
  7315 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7317 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7318 ;;Total ram usage:        8 bytes
  7319 ;; Hardware stack levels used: 1
  7320 ;; Hardware stack levels required when called: 6
  7321 ;; This function calls:
  7322 ;;		_vfpfcnvrt
  7323 ;; This function is called by:
  7324 ;;		_sprintf
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           	psect	text22
  7329  004F36                     __ptext22:
  7330                           	callstack 0
  7331  004F36                     _vfprintf:
  7332                           	callstack 21
  7333  004F36                     
  7334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  7335  004F36  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  7336  004F3A  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7337  004F3E                     
  7338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  7339  004F3E  0E00               	movlw	0
  7340  004F40  0100               	movlb	0	; () banked
  7341  004F42  6FDE               	movwf	(_nout+1)& (0+255),b
  7342  004F44  0E00               	movlw	0
  7343  004F46  6FDD               	movwf	_nout& (0+255),b
  7344                           
  7345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7346  004F48  EFB9  F027         	goto	l3430
  7347  004F4C                     l3428:
  7348                           
  7349                           ; BSR set to: 0
  7350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7351  004F4C  C052  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  7352  004F50  C053  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7353  004F54  0E58               	movlw	low vfprintf@cfmt
  7354  004F56  6E42               	movwf	vfpfcnvrt@fmt^0,c
  7355  004F58  0E00               	movlw	high vfprintf@cfmt
  7356  004F5A  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  7357  004F5C  C056  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  7358  004F60  C057  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7359  004F64  EC0A  F038         	call	_vfpfcnvrt	;wreg free
  7360  004F68  5040               	movf	?_vfpfcnvrt^0,w,c
  7361  004F6A  0100               	movlb	0	; () banked
  7362  004F6C  27DD               	addwf	_nout& (0+255),f,b
  7363  004F6E  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  7364  004F70  23DE               	addwfc	(_nout+1)& (0+255),f,b
  7365  004F72                     l3430:
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7369  004F72  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  7370  004F76  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7371  004F7A                     	if	0	;tblptru may be non-zero
  7372  004F7A                     	endif
  7373  004F7A                     	if	0	;tblptru may be non-zero
  7374  004F7A                     	endif
  7375  004F7A  0008               	tblrd		*
  7376  004F7C  50F5               	movf	tablat,w,c
  7377  004F7E  0900               	iorlw	0
  7378  004F80  A4D8               	btfss	status,2,c
  7379  004F82  EFC5  F027         	goto	u2681
  7380  004F86  EFC7  F027         	goto	u2680
  7381  004F8A                     u2681:
  7382  004F8A  EFA6  F027         	goto	l3428
  7383  004F8E                     u2680:
  7384  004F8E                     
  7385                           ; BSR set to: 0
  7386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  7387  004F8E  C0DD  F052         	movff	_nout,?_vfprintf
  7388  004F92  C0DE  F053         	movff	_nout+1,?_vfprintf+1
  7389  004F96                     
  7390                           ; BSR set to: 0
  7391  004F96  0012               	return		;funcret
  7392  004F98                     __end_of_vfprintf:
  7393                           	callstack 0
  7394                           
  7395 ;; *************** function _vfpfcnvrt *****************
  7396 ;; Defined at:
  7397 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  7400 ;;		 -> sprintf@f(6), 
  7401 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  7402 ;;		 -> vfprintf@cfmt(2), 
  7403 ;;  ap              2   67[COMRAM] PTR PTR void 
  7404 ;;		 -> sprintf@ap(2), 
  7405 ;; Auto vars:     Size  Location     Type
  7406 ;;  ll              8   71[COMRAM] long long 
  7407 ;;  llu             8    0        unsigned long long 
  7408 ;;  f               4    0        unsigned long long 
  7409 ;;  vp              3    0        PTR void 
  7410 ;;  ct              3    0        unsigned char [3]
  7411 ;;  cp              3    0        PTR unsigned char 
  7412 ;;  done            2   79[COMRAM] int 
  7413 ;;  i               2    0        int 
  7414 ;;  c               1    0        unsigned char 
  7415 ;; Return value:  Size  Location     Type
  7416 ;;                  2   63[COMRAM] int 
  7417 ;; Registers used:
  7418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7419 ;; Tracked objects:
  7420 ;;		On entry : 0/0
  7421 ;;		On exit  : 0/0
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7424 ;;      Params:         6       0       0       0       0       0       0       0       0
  7425 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7426 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7427 ;;      Totals:        18       0       0       0       0       0       0       0       0
  7428 ;;Total ram usage:       18 bytes
  7429 ;; Hardware stack levels used: 1
  7430 ;; Hardware stack levels required when called: 5
  7431 ;; This function calls:
  7432 ;;		_dtoa
  7433 ;;		_fputc
  7434 ;; This function is called by:
  7435 ;;		_vfprintf
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           	psect	text23
  7440  007014                     __ptext23:
  7441                           	callstack 0
  7442  007014                     _vfpfcnvrt:
  7443                           	callstack 21
  7444  007014                     
  7445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  7446  007014  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7447  007018  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7448  00701C  CFDE FFF6          	movff	postinc2,tblptrl
  7449  007020  CFDD FFF7          	movff	postdec2,tblptrh
  7450  007024                     	if	0	;tblptru may be non-zero
  7451  007024                     	endif
  7452  007024                     	if	0	;tblptru may be non-zero
  7453  007024                     	endif
  7454  007024  0008               	tblrd		*
  7455  007026  50F5               	movf	tablat,w,c
  7456  007028  0A25               	xorlw	37
  7457  00702A  A4D8               	btfss	status,2,c
  7458  00702C  EF1A  F038         	goto	u2531
  7459  007030  EF1C  F038         	goto	u2530
  7460  007034                     u2531:
  7461  007034  EF2B  F039         	goto	l3298
  7462  007038                     u2530:
  7463  007038                     
  7464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  7465  007038  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7466  00703C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7467  007040  2ADE               	incf	postinc2,f,c
  7468  007042  0E00               	movlw	0
  7469  007044  22DD               	addwfc	postdec2,f,c
  7470  007046                     
  7471                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  7472  007046  0E00               	movlw	0
  7473  007048  0100               	movlb	0	; () banked
  7474  00704A  6FE0               	movwf	(_width+1)& (0+255),b
  7475  00704C  0E00               	movlw	0
  7476  00704E  6FDF               	movwf	_width& (0+255),b
  7477  007050  C0DF  F0E3         	movff	_width,_flags
  7478  007054  C0E0  F0E4         	movff	_width+1,_flags+1
  7479  007058                     
  7480                           ; BSR set to: 0
  7481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  7482  007058  69E1               	setf	_prec& (0+255),b
  7483  00705A  69E2               	setf	(_prec+1)& (0+255),b
  7484  00705C                     
  7485                           ; BSR set to: 0
  7486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  7487  00705C  0E00               	movlw	0
  7488  00705E  6E51               	movwf	(vfpfcnvrt@done+1)^0,c
  7489  007060  0E00               	movlw	0
  7490  007062  6E50               	movwf	vfpfcnvrt@done^0,c
  7491                           
  7492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  7493  007064  EF7F  F038         	goto	l3268
  7494  007068                     l3242:
  7495                           
  7496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  7497  007068  0100               	movlb	0	; () banked
  7498  00706A  81E3               	bsf	_flags& (0+255),0,b
  7499  00706C                     l3244:
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  7503  00706C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7504  007070  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7505  007074  2ADE               	incf	postinc2,f,c
  7506  007076  0E00               	movlw	0
  7507  007078  22DD               	addwfc	postdec2,f,c
  7508                           
  7509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  7510  00707A  EF7F  F038         	goto	l3268
  7511  00707E                     l3246:
  7512                           
  7513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  7514  00707E  0100               	movlb	0	; () banked
  7515  007080  83E3               	bsf	_flags& (0+255),1,b
  7516  007082  EF36  F038         	goto	l3244
  7517  007086                     l3250:
  7518                           
  7519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  7520  007086  0100               	movlb	0	; () banked
  7521  007088  85E3               	bsf	_flags& (0+255),2,b
  7522  00708A  EF36  F038         	goto	l3244
  7523  00708E                     l3254:
  7524                           
  7525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  7526  00708E  0100               	movlb	0	; () banked
  7527  007090  87E3               	bsf	_flags& (0+255),3,b
  7528  007092  EF36  F038         	goto	l3244
  7529  007096                     l3258:
  7530                           
  7531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  7532  007096  0100               	movlb	0	; () banked
  7533  007098  89E3               	bsf	_flags& (0+255),4,b
  7534  00709A  EF36  F038         	goto	l3244
  7535  00709E                     l3262:
  7536                           
  7537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  7538  00709E  0E00               	movlw	0
  7539  0070A0  6E51               	movwf	(vfpfcnvrt@done+1)^0,c
  7540  0070A2  0E01               	movlw	1
  7541  0070A4  6E50               	movwf	vfpfcnvrt@done^0,c
  7542                           
  7543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  7544  0070A6  EF7F  F038         	goto	l3268
  7545  0070AA                     l3266:
  7546  0070AA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7547  0070AE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7548  0070B2  CFDE FFF6          	movff	postinc2,tblptrl
  7549  0070B6  CFDD FFF7          	movff	postdec2,tblptrh
  7550  0070BA                     	if	0	;tblptru may be non-zero
  7551  0070BA                     	endif
  7552  0070BA                     	if	0	;tblptru may be non-zero
  7553  0070BA                     	endif
  7554  0070BA  0008               	tblrd		*
  7555  0070BC  50F5               	movf	tablat,w,c
  7556  0070BE  6E46               	movwf	??_vfpfcnvrt^0,c
  7557  0070C0  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  7558                           
  7559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7560                           ; Switch size 1, requested type "simple"
  7561                           ; Number of cases is 1, Range of values is 0 to 0
  7562                           ; switch strategies available:
  7563                           ; Name         Instructions Cycles
  7564                           ; simple_byte            4     3 (average)
  7565                           ;	Chosen strategy is simple_byte
  7566  0070C2  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  7567  0070C4  0A00               	xorlw	0	; case 0
  7568  0070C6  B4D8               	btfsc	status,2,c
  7569  0070C8  EF68  F038         	goto	l4804
  7570  0070CC  EF4F  F038         	goto	l3262
  7571  0070D0                     l4804:
  7572                           
  7573                           ; Switch size 1, requested type "simple"
  7574                           ; Number of cases is 5, Range of values is 32 to 48
  7575                           ; switch strategies available:
  7576                           ; Name         Instructions Cycles
  7577                           ; simple_byte           16     9 (average)
  7578                           ;	Chosen strategy is simple_byte
  7579  0070D0  5046               	movf	??_vfpfcnvrt^0,w,c
  7580  0070D2  0A20               	xorlw	32	; case 32
  7581  0070D4  B4D8               	btfsc	status,2,c
  7582  0070D6  EF47  F038         	goto	l3254
  7583  0070DA  0A03               	xorlw	3	; case 35
  7584  0070DC  B4D8               	btfsc	status,2,c
  7585  0070DE  EF4B  F038         	goto	l3258
  7586  0070E2  0A08               	xorlw	8	; case 43
  7587  0070E4  B4D8               	btfsc	status,2,c
  7588  0070E6  EF43  F038         	goto	l3250
  7589  0070EA  0A06               	xorlw	6	; case 45
  7590  0070EC  B4D8               	btfsc	status,2,c
  7591  0070EE  EF34  F038         	goto	l3242
  7592  0070F2  0A1D               	xorlw	29	; case 48
  7593  0070F4  B4D8               	btfsc	status,2,c
  7594  0070F6  EF3F  F038         	goto	l3246
  7595  0070FA  EF4F  F038         	goto	l3262
  7596  0070FE                     l3268:
  7597                           
  7598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  7599  0070FE  5050               	movf	vfpfcnvrt@done^0,w,c
  7600  007100  1051               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  7601  007102  B4D8               	btfsc	status,2,c
  7602  007104  EF86  F038         	goto	u2541
  7603  007108  EF88  F038         	goto	u2540
  7604  00710C                     u2541:
  7605  00710C  EF55  F038         	goto	l3266
  7606  007110                     u2540:
  7607  007110                     
  7608                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  7609  007110  0100               	movlb	0	; () banked
  7610  007112  A1E3               	btfss	_flags& (0+255),0,b
  7611  007114  EF8E  F038         	goto	u2551
  7612  007118  EF90  F038         	goto	u2550
  7613  00711C                     u2551:
  7614  00711C  EF91  F038         	goto	l3272
  7615  007120                     u2550:
  7616  007120                     
  7617                           ; BSR set to: 0
  7618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  7619  007120  93E3               	bcf	_flags& (0+255),1,b
  7620  007122                     l3272:
  7621                           
  7622                           ; BSR set to: 0
  7623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7624  007122  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7625  007126  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7626  00712A  CFDE FFF6          	movff	postinc2,tblptrl
  7627  00712E  CFDD FFF7          	movff	postdec2,tblptrh
  7628  007132                     	if	0	;tblptru may be non-zero
  7629  007132                     	endif
  7630  007132                     	if	0	;tblptru may be non-zero
  7631  007132                     	endif
  7632  007132  0008               	tblrd		*
  7633  007134  50F5               	movf	tablat,w,c
  7634  007136  0A64               	xorlw	100
  7635  007138  B4D8               	btfsc	status,2,c
  7636  00713A  EFA1  F038         	goto	u2561
  7637  00713E  EFA3  F038         	goto	u2560
  7638  007142                     u2561:
  7639  007142  EFB5  F038         	goto	l3276
  7640  007146                     u2560:
  7641  007146                     
  7642                           ; BSR set to: 0
  7643  007146  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7644  00714A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7645  00714E  CFDE FFF6          	movff	postinc2,tblptrl
  7646  007152  CFDD FFF7          	movff	postdec2,tblptrh
  7647  007156                     	if	0	;tblptru may be non-zero
  7648  007156                     	endif
  7649  007156                     	if	0	;tblptru may be non-zero
  7650  007156                     	endif
  7651  007156  0008               	tblrd		*
  7652  007158  50F5               	movf	tablat,w,c
  7653  00715A  0A69               	xorlw	105
  7654  00715C  A4D8               	btfss	status,2,c
  7655  00715E  EFB3  F038         	goto	u2571
  7656  007162  EFB5  F038         	goto	u2570
  7657  007166                     u2571:
  7658  007166  EFF5  F038         	goto	l3282
  7659  00716A                     u2570:
  7660  00716A                     l3276:
  7661                           
  7662                           ; BSR set to: 0
  7663                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7664  00716A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7665  00716E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7666  007172  2ADE               	incf	postinc2,f,c
  7667  007174  0E00               	movlw	0
  7668  007176  22DD               	addwfc	postdec2,f,c
  7669                           
  7670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7671  007178  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7672  00717C  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7673  007180  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7674  007184  0E02               	movlw	2
  7675  007186  26DE               	addwf	postinc2,f,c
  7676  007188  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7677  00718C  0E00               	movlw	0
  7678  00718E  22DD               	addwfc	postdec2,f,c
  7679  007190  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7680  007194  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7681  007198  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  7682  00719C  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  7683  0071A0  0E00               	movlw	0
  7684  0071A2  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  7685  0071A4  0EFF               	movlw	-1
  7686  0071A6  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  7687  0071A8  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  7688  0071AA  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  7689  0071AC  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  7690  0071AE  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  7691  0071B0  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  7692  0071B2                     
  7693                           ; BSR set to: 0
  7694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7695  0071B2  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  7696  0071B6  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7697  0071BA  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  7698  0071BE  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7699  0071C2  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7700  0071C6  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7701  0071CA  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7702  0071CE  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7703  0071D2  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7704  0071D6  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7705  0071DA  EC9A  F03A         	call	_dtoa	;wreg free
  7706  0071DE  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  7707  0071E2  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7708  0071E6  EF46  F039         	goto	l1241
  7709  0071EA                     l3282:
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7713  0071EA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7714  0071EE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7715  0071F2  CFDE FFF6          	movff	postinc2,tblptrl
  7716  0071F6  CFDD FFF7          	movff	postdec2,tblptrh
  7717  0071FA                     	if	0	;tblptru may be non-zero
  7718  0071FA                     	endif
  7719  0071FA                     	if	0	;tblptru may be non-zero
  7720  0071FA                     	endif
  7721  0071FA  0008               	tblrd		*
  7722  0071FC  50F5               	movf	tablat,w,c
  7723  0071FE  0A25               	xorlw	37
  7724  007200  A4D8               	btfss	status,2,c
  7725  007202  EF05  F039         	goto	u2581
  7726  007206  EF07  F039         	goto	u2580
  7727  00720A                     u2581:
  7728  00720A  EF1E  F039         	goto	l3292
  7729  00720E                     u2580:
  7730  00720E                     
  7731                           ; BSR set to: 0
  7732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7733  00720E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7734  007212  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7735  007216  2ADE               	incf	postinc2,f,c
  7736  007218  0E00               	movlw	0
  7737  00721A  22DD               	addwfc	postdec2,f,c
  7738  00721C                     
  7739                           ; BSR set to: 0
  7740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7741  00721C  0E00               	movlw	0
  7742  00721E  6E02               	movwf	(fputc@c+1)^0,c
  7743  007220  0E25               	movlw	37
  7744  007222  6E01               	movwf	fputc@c^0,c
  7745  007224  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7746  007228  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7747  00722C  ECEC  F02A         	call	_fputc	;wreg free
  7748  007230                     l3288:
  7749                           
  7750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7751  007230  0E00               	movlw	0
  7752  007232  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7753  007234  0E01               	movlw	1
  7754  007236  6E40               	movwf	?_vfpfcnvrt^0,c
  7755  007238  EF46  F039         	goto	l1241
  7756  00723C                     l3292:
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7760  00723C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7761  007240  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7762  007244  2ADE               	incf	postinc2,f,c
  7763  007246  0E00               	movlw	0
  7764  007248  22DD               	addwfc	postdec2,f,c
  7765  00724A                     
  7766                           ; BSR set to: 0
  7767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7768  00724A  0E00               	movlw	0
  7769  00724C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7770  00724E  0E00               	movlw	0
  7771  007250  6E40               	movwf	?_vfpfcnvrt^0,c
  7772  007252  EF46  F039         	goto	l1241
  7773  007256                     l3298:
  7774                           
  7775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7776  007256  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7777  00725A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7778  00725E  CFDE FFF6          	movff	postinc2,tblptrl
  7779  007262  CFDD FFF7          	movff	postdec2,tblptrh
  7780  007266                     	if	0	;tblptru may be non-zero
  7781  007266                     	endif
  7782  007266                     	if	0	;tblptru may be non-zero
  7783  007266                     	endif
  7784  007266  0008               	tblrd		*
  7785  007268  50F5               	movf	tablat,w,c
  7786  00726A  6E01               	movwf	fputc@c^0,c
  7787  00726C  6A02               	clrf	(fputc@c+1)^0,c
  7788  00726E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7789  007272  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7790  007276  ECEC  F02A         	call	_fputc	;wreg free
  7791  00727A                     
  7792                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7793  00727A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7794  00727E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7795  007282  2ADE               	incf	postinc2,f,c
  7796  007284  0E00               	movlw	0
  7797  007286  22DD               	addwfc	postdec2,f,c
  7798  007288  EF18  F039         	goto	l3288
  7799  00728C                     l1241:
  7800  00728C  0012               	return		;funcret
  7801  00728E                     __end_of_vfpfcnvrt:
  7802                           	callstack 0
  7803                           
  7804 ;; *************** function _dtoa *****************
  7805 ;; Defined at:
  7806 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7809 ;;		 -> sprintf@f(6), 
  7810 ;;  d               8   29[COMRAM] long long 
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;  n               8   53[COMRAM] long long 
  7813 ;;  i               2   61[COMRAM] int 
  7814 ;;  s               2   51[COMRAM] int 
  7815 ;;  w               2   49[COMRAM] int 
  7816 ;;  p               2   47[COMRAM] int 
  7817 ;; Return value:  Size  Location     Type
  7818 ;;                  2   27[COMRAM] int 
  7819 ;; Registers used:
  7820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7826 ;;      Params:        10       0       0       0       0       0       0       0       0
  7827 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7828 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7829 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7830 ;;Total ram usage:       36 bytes
  7831 ;; Hardware stack levels used: 1
  7832 ;; Hardware stack levels required when called: 4
  7833 ;; This function calls:
  7834 ;;		___aodiv
  7835 ;;		___aomod
  7836 ;;		_abs
  7837 ;;		_pad
  7838 ;; This function is called by:
  7839 ;;		_vfpfcnvrt
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text24
  7844  007534                     __ptext24:
  7845                           	callstack 0
  7846  007534                     _dtoa:
  7847                           	callstack 21
  7848  007534                     
  7849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7850  007534  C01E  F036         	movff	dtoa@d,dtoa@n
  7851  007538  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7852  00753C  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7853  007540  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7854  007544  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7855  007548  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7856  00754C  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7857  007550  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7858  007554                     
  7859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7860  007554  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7861  007556  EFAF  F03A         	goto	u2381
  7862  00755A  EFB2  F03A         	goto	u2380
  7863  00755E                     u2381:
  7864  00755E  0E01               	movlw	1
  7865  007560  EFB3  F03A         	goto	u2390
  7866  007564                     u2380:
  7867  007564  0E00               	movlw	0
  7868  007566                     u2390:
  7869  007566  6E34               	movwf	dtoa@s^0,c
  7870  007568  6A35               	clrf	(dtoa@s+1)^0,c
  7871                           
  7872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7873  00756A  5034               	movf	dtoa@s^0,w,c
  7874  00756C  1035               	iorwf	(dtoa@s+1)^0,w,c
  7875  00756E  B4D8               	btfsc	status,2,c
  7876  007570  EFBC  F03A         	goto	u2401
  7877  007574  EFBE  F03A         	goto	u2400
  7878  007578                     u2401:
  7879  007578  EFCE  F03A         	goto	l3176
  7880  00757C                     u2400:
  7881  00757C                     
  7882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7883  00757C  1E3D               	comf	(dtoa@n+7)^0,f,c
  7884  00757E  1E3C               	comf	(dtoa@n+6)^0,f,c
  7885  007580  1E3B               	comf	(dtoa@n+5)^0,f,c
  7886  007582  1E3A               	comf	(dtoa@n+4)^0,f,c
  7887  007584  1E39               	comf	(dtoa@n+3)^0,f,c
  7888  007586  1E38               	comf	(dtoa@n+2)^0,f,c
  7889  007588  1E37               	comf	(dtoa@n+1)^0,f,c
  7890  00758A  6C36               	negf	dtoa@n^0,c
  7891  00758C  0E00               	movlw	0
  7892  00758E  2237               	addwfc	(dtoa@n+1)^0,f,c
  7893  007590  2238               	addwfc	(dtoa@n+2)^0,f,c
  7894  007592  2239               	addwfc	(dtoa@n+3)^0,f,c
  7895  007594  223A               	addwfc	(dtoa@n+4)^0,f,c
  7896  007596  223B               	addwfc	(dtoa@n+5)^0,f,c
  7897  007598  223C               	addwfc	(dtoa@n+6)^0,f,c
  7898  00759A  223D               	addwfc	(dtoa@n+7)^0,f,c
  7899  00759C                     l3176:
  7900                           
  7901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7902  00759C  0100               	movlb	0	; () banked
  7903  00759E  BFE2               	btfsc	(_prec+1)& (0+255),7,b
  7904  0075A0  EFD4  F03A         	goto	u2411
  7905  0075A4  EFD6  F03A         	goto	u2410
  7906  0075A8                     u2411:
  7907  0075A8  EFD7  F03A         	goto	l3180
  7908  0075AC                     u2410:
  7909  0075AC                     
  7910                           ; BSR set to: 0
  7911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7912  0075AC  93E3               	bcf	_flags& (0+255),1,b
  7913  0075AE                     l3180:
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7917  0075AE  BFE2               	btfsc	(_prec+1)& (0+255),7,b
  7918  0075B0  EFE4  F03A         	goto	u2420
  7919  0075B4  51E2               	movf	(_prec+1)& (0+255),w,b
  7920  0075B6  E106               	bnz	u2421
  7921  0075B8  05E1               	decf	_prec& (0+255),w,b
  7922  0075BA  B0D8               	btfsc	status,0,c
  7923  0075BC  EFE2  F03A         	goto	u2421
  7924  0075C0  EFE4  F03A         	goto	u2420
  7925  0075C4                     u2421:
  7926  0075C4  EFEA  F03A         	goto	l1202
  7927  0075C8                     u2420:
  7928  0075C8                     
  7929                           ; BSR set to: 0
  7930  0075C8  0E00               	movlw	0
  7931  0075CA  6E31               	movwf	(dtoa@p+1)^0,c
  7932  0075CC  0E01               	movlw	1
  7933  0075CE  6E30               	movwf	dtoa@p^0,c
  7934  0075D0  EFEE  F03A         	goto	l1204
  7935  0075D4                     l1202:
  7936                           
  7937                           ; BSR set to: 0
  7938  0075D4  C0E1  F030         	movff	_prec,dtoa@p
  7939  0075D8  C0E2  F031         	movff	_prec+1,dtoa@p+1
  7940  0075DC                     l1204:
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7944  0075DC  C0DF  F032         	movff	_width,dtoa@w
  7945  0075E0  C0E0  F033         	movff	_width+1,dtoa@w+1
  7946  0075E4                     
  7947                           ; BSR set to: 0
  7948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7949  0075E4  5034               	movf	dtoa@s^0,w,c
  7950  0075E6  1035               	iorwf	(dtoa@s+1)^0,w,c
  7951  0075E8  A4D8               	btfss	status,2,c
  7952  0075EA  EFF9  F03A         	goto	u2431
  7953  0075EE  EFFB  F03A         	goto	u2430
  7954  0075F2                     u2431:
  7955  0075F2  EF02  F03B         	goto	l3188
  7956  0075F6                     u2430:
  7957  0075F6                     
  7958                           ; BSR set to: 0
  7959  0075F6  A5E3               	btfss	_flags& (0+255),2,b
  7960  0075F8  EF00  F03B         	goto	u2441
  7961  0075FC  EF02  F03B         	goto	u2440
  7962  007600                     u2441:
  7963  007600  EF05  F03B         	goto	l3190
  7964  007604                     u2440:
  7965  007604                     l3188:
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7969  007604  0632               	decf	dtoa@w^0,f,c
  7970  007606  A0D8               	btfss	status,0,c
  7971  007608  0633               	decf	(dtoa@w+1)^0,f,c
  7972  00760A                     l3190:
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7976  00760A  0E00               	movlw	0
  7977  00760C  6E3F               	movwf	(dtoa@i+1)^0,c
  7978  00760E  0E1F               	movlw	31
  7979  007610  6E3E               	movwf	dtoa@i^0,c
  7980  007612                     
  7981                           ; BSR set to: 0
  7982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7983  007612  0E00               	movlw	0
  7984  007614  0101               	movlb	1	; () banked
  7985  007616  6FF9               	movwf	(_dbuf+31)& (0+255),b
  7986                           
  7987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7988  007618  EF8A  F03B         	goto	l3204
  7989  00761C                     l3194:
  7990                           
  7991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7992  00761C  063E               	decf	dtoa@i^0,f,c
  7993  00761E  A0D8               	btfss	status,0,c
  7994  007620  063F               	decf	(dtoa@i+1)^0,f,c
  7995  007622                     
  7996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7997  007622  0EDA               	movlw	low _dbuf
  7998  007624  243E               	addwf	dtoa@i^0,w,c
  7999  007626  6ED9               	movwf	fsr2l,c
  8000  007628  0E01               	movlw	high _dbuf
  8001  00762A  203F               	addwfc	(dtoa@i+1)^0,w,c
  8002  00762C  6EDA               	movwf	fsr2h,c
  8003  00762E  C036  F001         	movff	dtoa@n,___aomod@dividend
  8004  007632  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8005  007636  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8006  00763A  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8007  00763E  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8008  007642  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8009  007646  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8010  00764A  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8011  00764E  0E0A               	movlw	10
  8012  007650  6E09               	movwf	___aomod@divisor^0,c
  8013  007652  0E00               	movlw	0
  8014  007654  6E0A               	movwf	(___aomod@divisor+1)^0,c
  8015  007656  0E00               	movlw	0
  8016  007658  6E0B               	movwf	(___aomod@divisor+2)^0,c
  8017  00765A  0E00               	movlw	0
  8018  00765C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  8019  00765E  0E00               	movlw	0
  8020  007660  6E0D               	movwf	(___aomod@divisor+4)^0,c
  8021  007662  0E00               	movlw	0
  8022  007664  6E0E               	movwf	(___aomod@divisor+5)^0,c
  8023  007666  0E00               	movlw	0
  8024  007668  6E0F               	movwf	(___aomod@divisor+6)^0,c
  8025  00766A  0E00               	movlw	0
  8026  00766C  6E10               	movwf	(___aomod@divisor+7)^0,c
  8027  00766E  ECEF  F02F         	call	___aomod	;wreg free
  8028  007672  C001  F026         	movff	?___aomod,??_dtoa
  8029  007676  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8030  00767A  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8031  00767E  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8032  007682  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8033  007686  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8034  00768A  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8035  00768E  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8036  007692  C026  F013         	movff	??_dtoa,abs@a
  8037  007696  C028  F014         	movff	??_dtoa+2,abs@a+1
  8038  00769A  EC5A  F026         	call	_abs	;wreg free
  8039  00769E  5013               	movf	?_abs^0,w,c
  8040  0076A0  0F30               	addlw	48
  8041  0076A2  6EDF               	movwf	indf2,c
  8042  0076A4                     
  8043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  8044  0076A4  0630               	decf	dtoa@p^0,f,c
  8045  0076A6  A0D8               	btfss	status,0,c
  8046  0076A8  0631               	decf	(dtoa@p+1)^0,f,c
  8047  0076AA                     
  8048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  8049  0076AA  0632               	decf	dtoa@w^0,f,c
  8050  0076AC  A0D8               	btfss	status,0,c
  8051  0076AE  0633               	decf	(dtoa@w+1)^0,f,c
  8052  0076B0                     
  8053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8054  0076B0  C036  F001         	movff	dtoa@n,___aodiv@dividend
  8055  0076B4  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8056  0076B8  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8057  0076BC  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8058  0076C0  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8059  0076C4  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8060  0076C8  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8061  0076CC  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8062  0076D0  0E0A               	movlw	10
  8063  0076D2  6E09               	movwf	___aodiv@divisor^0,c
  8064  0076D4  0E00               	movlw	0
  8065  0076D6  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  8066  0076D8  0E00               	movlw	0
  8067  0076DA  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  8068  0076DC  0E00               	movlw	0
  8069  0076DE  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  8070  0076E0  0E00               	movlw	0
  8071  0076E2  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  8072  0076E4  0E00               	movlw	0
  8073  0076E6  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  8074  0076E8  0E00               	movlw	0
  8075  0076EA  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  8076  0076EC  0E00               	movlw	0
  8077  0076EE  6E10               	movwf	(___aodiv@divisor+7)^0,c
  8078  0076F0  EC23  F032         	call	___aodiv	;wreg free
  8079  0076F4  C001  F036         	movff	?___aodiv,dtoa@n
  8080  0076F8  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  8081  0076FC  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  8082  007700  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  8083  007704  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  8084  007708  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  8085  00770C  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  8086  007710  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  8087  007714                     l3204:
  8088                           
  8089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8090  007714  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  8091  007716  EF95  F03B         	goto	u2451
  8092  00771A  503F               	movf	(dtoa@i+1)^0,w,c
  8093  00771C  E108               	bnz	u2450
  8094  00771E  043E               	decf	dtoa@i^0,w,c
  8095  007720  A0D8               	btfss	status,0,c
  8096  007722  EF95  F03B         	goto	u2451
  8097  007726  EF97  F03B         	goto	u2450
  8098  00772A                     u2451:
  8099  00772A  EFC8  F03B         	goto	l3214
  8100  00772E                     u2450:
  8101  00772E  5036               	movf	dtoa@n^0,w,c
  8102  007730  1037               	iorwf	(dtoa@n+1)^0,w,c
  8103  007732  1038               	iorwf	(dtoa@n+2)^0,w,c
  8104  007734  1039               	iorwf	(dtoa@n+3)^0,w,c
  8105  007736  103A               	iorwf	(dtoa@n+4)^0,w,c
  8106  007738  103B               	iorwf	(dtoa@n+5)^0,w,c
  8107  00773A  103C               	iorwf	(dtoa@n+6)^0,w,c
  8108  00773C  103D               	iorwf	(dtoa@n+7)^0,w,c
  8109  00773E  A4D8               	btfss	status,2,c
  8110  007740  EFA4  F03B         	goto	u2461
  8111  007744  EFA6  F03B         	goto	u2460
  8112  007748                     u2461:
  8113  007748  EF0E  F03B         	goto	l3194
  8114  00774C                     u2460:
  8115  00774C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  8116  00774E  EFB3  F03B         	goto	u2470
  8117  007752  5031               	movf	(dtoa@p+1)^0,w,c
  8118  007754  E106               	bnz	u2471
  8119  007756  0430               	decf	dtoa@p^0,w,c
  8120  007758  B0D8               	btfsc	status,0,c
  8121  00775A  EFB1  F03B         	goto	u2471
  8122  00775E  EFB3  F03B         	goto	u2470
  8123  007762                     u2471:
  8124  007762  EF0E  F03B         	goto	l3194
  8125  007766                     u2470:
  8126  007766  BE33               	btfsc	(dtoa@w+1)^0,7,c
  8127  007768  EFBE  F03B         	goto	u2481
  8128  00776C  5033               	movf	(dtoa@w+1)^0,w,c
  8129  00776E  E108               	bnz	u2480
  8130  007770  0432               	decf	dtoa@w^0,w,c
  8131  007772  A0D8               	btfss	status,0,c
  8132  007774  EFBE  F03B         	goto	u2481
  8133  007778  EFC0  F03B         	goto	u2480
  8134  00777C                     u2481:
  8135  00777C  EFC8  F03B         	goto	l3214
  8136  007780                     u2480:
  8137  007780  0100               	movlb	0	; () banked
  8138  007782  B3E3               	btfsc	_flags& (0+255),1,b
  8139  007784  EFC6  F03B         	goto	u2491
  8140  007788  EFC8  F03B         	goto	u2490
  8141  00778C                     u2491:
  8142  00778C  EF0E  F03B         	goto	l3194
  8143  007790                     u2490:
  8144  007790                     l3214:
  8145                           
  8146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8147  007790  5034               	movf	dtoa@s^0,w,c
  8148  007792  1035               	iorwf	(dtoa@s+1)^0,w,c
  8149  007794  A4D8               	btfss	status,2,c
  8150  007796  EFCF  F03B         	goto	u2501
  8151  00779A  EFD1  F03B         	goto	u2500
  8152  00779E                     u2501:
  8153  00779E  EFD9  F03B         	goto	l3218
  8154  0077A2                     u2500:
  8155  0077A2  0100               	movlb	0	; () banked
  8156  0077A4  A5E3               	btfss	_flags& (0+255),2,b
  8157  0077A6  EFD7  F03B         	goto	u2511
  8158  0077AA  EFD9  F03B         	goto	u2510
  8159  0077AE                     u2511:
  8160  0077AE  EFF7  F03B         	goto	l3228
  8161  0077B2                     u2510:
  8162  0077B2                     l3218:
  8163                           
  8164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  8165  0077B2  063E               	decf	dtoa@i^0,f,c
  8166  0077B4  A0D8               	btfss	status,0,c
  8167  0077B6  063F               	decf	(dtoa@i+1)^0,f,c
  8168  0077B8                     
  8169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8170  0077B8  5034               	movf	dtoa@s^0,w,c
  8171  0077BA  1035               	iorwf	(dtoa@s+1)^0,w,c
  8172  0077BC  A4D8               	btfss	status,2,c
  8173  0077BE  EFE3  F03B         	goto	u2521
  8174  0077C2  EFE5  F03B         	goto	u2520
  8175  0077C6                     u2521:
  8176  0077C6  EFEB  F03B         	goto	l3224
  8177  0077CA                     u2520:
  8178  0077CA  0E00               	movlw	0
  8179  0077CC  6E2F               	movwf	(_dtoa$1242+1)^0,c
  8180  0077CE  0E2B               	movlw	43
  8181  0077D0  6E2E               	movwf	_dtoa$1242^0,c
  8182  0077D2  EFEF  F03B         	goto	l3226
  8183  0077D6                     l3224:
  8184  0077D6  0E00               	movlw	0
  8185  0077D8  6E2F               	movwf	(_dtoa$1242+1)^0,c
  8186  0077DA  0E2D               	movlw	45
  8187  0077DC  6E2E               	movwf	_dtoa$1242^0,c
  8188  0077DE                     l3226:
  8189  0077DE  0EDA               	movlw	low _dbuf
  8190  0077E0  243E               	addwf	dtoa@i^0,w,c
  8191  0077E2  6ED9               	movwf	fsr2l,c
  8192  0077E4  0E01               	movlw	high _dbuf
  8193  0077E6  203F               	addwfc	(dtoa@i+1)^0,w,c
  8194  0077E8  6EDA               	movwf	fsr2h,c
  8195  0077EA  C02E  FFDF         	movff	_dtoa$1242,indf2
  8196  0077EE                     l3228:
  8197                           
  8198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8199  0077EE  C01C  F011         	movff	dtoa@fp,pad@fp
  8200  0077F2  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8201  0077F6  0EDA               	movlw	low _dbuf
  8202  0077F8  243E               	addwf	dtoa@i^0,w,c
  8203  0077FA  6E13               	movwf	pad@buf^0,c
  8204  0077FC  0E01               	movlw	high _dbuf
  8205  0077FE  203F               	addwfc	(dtoa@i+1)^0,w,c
  8206  007800  6E14               	movwf	(pad@buf+1)^0,c
  8207  007802  C032  F015         	movff	dtoa@w,pad@p
  8208  007806  C033  F016         	movff	dtoa@w+1,pad@p+1
  8209  00780A  EC89  F02A         	call	_pad	;wreg free
  8210  00780E  C011  F01C         	movff	?_pad,?_dtoa
  8211  007812  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8212  007816  0012               	return		;funcret
  8213  007818                     __end_of_dtoa:
  8214                           	callstack 0
  8215                           
  8216 ;; *************** function _pad *****************
  8217 ;; Defined at:
  8218 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8221 ;;		 -> sprintf@f(6), 
  8222 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8223 ;;		 -> dbuf(32), 
  8224 ;;  p               2   20[COMRAM] int 
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;  w               2   25[COMRAM] int 
  8227 ;;  i               2   23[COMRAM] int 
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  2   16[COMRAM] int 
  8230 ;; Registers used:
  8231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8237 ;;      Params:         6       0       0       0       0       0       0       0       0
  8238 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8239 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8240 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8241 ;;Total ram usage:       11 bytes
  8242 ;; Hardware stack levels used: 1
  8243 ;; Hardware stack levels required when called: 3
  8244 ;; This function calls:
  8245 ;;		_fputc
  8246 ;;		_fputs
  8247 ;;		_strlen
  8248 ;; This function is called by:
  8249 ;;		_dtoa
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text25
  8254  005512                     __ptext25:
  8255                           	callstack 0
  8256  005512                     _pad:
  8257                           	callstack 21
  8258  005512                     
  8259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8260  005512  0100               	movlb	0	; () banked
  8261  005514  A1E3               	btfss	_flags& (0+255),0,b
  8262  005516  EF8F  F02A         	goto	u2331
  8263  00551A  EF91  F02A         	goto	u2330
  8264  00551E                     u2331:
  8265  00551E  EF9B  F02A         	goto	l3148
  8266  005522                     u2330:
  8267  005522                     
  8268                           ; BSR set to: 0
  8269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8270  005522  C013  F00A         	movff	pad@buf,fputs@s
  8271  005526  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8272  00552A  C011  F00C         	movff	pad@fp,fputs@fp
  8273  00552E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8274  005532  EC7A  F026         	call	_fputs	;wreg free
  8275  005536                     l3148:
  8276                           
  8277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8278  005536  BE16               	btfsc	(pad@p+1)^0,7,c
  8279  005538  EFA0  F02A         	goto	u2341
  8280  00553C  EFA2  F02A         	goto	u2340
  8281  005540                     u2341:
  8282  005540  EFA8  F02A         	goto	l3152
  8283  005544                     u2340:
  8284  005544  C015  F01A         	movff	pad@p,pad@w
  8285  005548  C016  F01B         	movff	pad@p+1,pad@w+1
  8286  00554C  EFAC  F02A         	goto	l1191
  8287  005550                     l3152:
  8288  005550  0E00               	movlw	0
  8289  005552  6E1B               	movwf	(pad@w+1)^0,c
  8290  005554  0E00               	movlw	0
  8291  005556  6E1A               	movwf	pad@w^0,c
  8292  005558                     l1191:
  8293                           
  8294                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8295  005558  0E00               	movlw	0
  8296  00555A  6E19               	movwf	(pad@i+1)^0,c
  8297  00555C  0E00               	movlw	0
  8298  00555E  6E18               	movwf	pad@i^0,c
  8299                           
  8300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8301  005560  EFBE  F02A         	goto	l3158
  8302  005564                     l3154:
  8303                           
  8304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8305  005564  0E00               	movlw	0
  8306  005566  6E02               	movwf	(fputc@c+1)^0,c
  8307  005568  0E20               	movlw	32
  8308  00556A  6E01               	movwf	fputc@c^0,c
  8309  00556C  C011  F003         	movff	pad@fp,fputc@fp
  8310  005570  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8311  005574  ECEC  F02A         	call	_fputc	;wreg free
  8312  005578                     
  8313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8314  005578  4A18               	infsnz	pad@i^0,f,c
  8315  00557A  2A19               	incf	(pad@i+1)^0,f,c
  8316  00557C                     l3158:
  8317                           
  8318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8319  00557C  501A               	movf	pad@w^0,w,c
  8320  00557E  5C18               	subwf	pad@i^0,w,c
  8321  005580  5019               	movf	(pad@i+1)^0,w,c
  8322  005582  0A80               	xorlw	128
  8323  005584  6E17               	movwf	??_pad^0,c
  8324  005586  501B               	movf	(pad@w+1)^0,w,c
  8325  005588  0A80               	xorlw	128
  8326  00558A  5817               	subwfb	??_pad^0,w,c
  8327  00558C  A0D8               	btfss	status,0,c
  8328  00558E  EFCB  F02A         	goto	u2351
  8329  005592  EFCD  F02A         	goto	u2350
  8330  005596                     u2351:
  8331  005596  EFB2  F02A         	goto	l3154
  8332  00559A                     u2350:
  8333  00559A                     
  8334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8335  00559A  0100               	movlb	0	; () banked
  8336  00559C  B1E3               	btfsc	_flags& (0+255),0,b
  8337  00559E  EFD3  F02A         	goto	u2361
  8338  0055A2  EFD5  F02A         	goto	u2360
  8339  0055A6                     u2361:
  8340  0055A6  EFDF  F02A         	goto	l3162
  8341  0055AA                     u2360:
  8342  0055AA                     
  8343                           ; BSR set to: 0
  8344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8345  0055AA  C013  F00A         	movff	pad@buf,fputs@s
  8346  0055AE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8347  0055B2  C011  F00C         	movff	pad@fp,fputs@fp
  8348  0055B6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8349  0055BA  EC7A  F026         	call	_fputs	;wreg free
  8350  0055BE                     l3162:
  8351                           
  8352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8353  0055BE  C013  F001         	movff	pad@buf,strlen@s
  8354  0055C2  C014  F002         	movff	pad@buf+1,strlen@s+1
  8355  0055C6  EC24  F026         	call	_strlen	;wreg free
  8356  0055CA  501A               	movf	pad@w^0,w,c
  8357  0055CC  2401               	addwf	?_strlen^0,w,c
  8358  0055CE  6E11               	movwf	?_pad^0,c
  8359  0055D0  501B               	movf	(pad@w+1)^0,w,c
  8360  0055D2  2002               	addwfc	(?_strlen+1)^0,w,c
  8361  0055D4  6E12               	movwf	(?_pad+1)^0,c
  8362  0055D6  0012               	return		;funcret
  8363  0055D8                     __end_of_pad:
  8364                           	callstack 0
  8365                           
  8366 ;; *************** function _strlen *****************
  8367 ;; Defined at:
  8368 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8371 ;;		 -> dbuf(32), 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8374 ;;		 -> dbuf(32), 
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  2    0[COMRAM] unsigned int 
  8377 ;; Registers used:
  8378 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8384 ;;      Params:         2       0       0       0       0       0       0       0       0
  8385 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8386 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8387 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8388 ;;Total ram usage:        4 bytes
  8389 ;; Hardware stack levels used: 1
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_pad
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text26
  8398  004C48                     __ptext26:
  8399                           	callstack 0
  8400  004C48                     _strlen:
  8401                           	callstack 23
  8402  004C48  C001  F003         	movff	strlen@s,strlen@a
  8403  004C4C  C002  F004         	movff	strlen@s+1,strlen@a+1
  8404  004C50  EF2C  F026         	goto	l3058
  8405  004C54                     l3056:
  8406  004C54  4A01               	infsnz	strlen@s^0,f,c
  8407  004C56  2A02               	incf	(strlen@s+1)^0,f,c
  8408  004C58                     l3058:
  8409  004C58  C001  FFD9         	movff	strlen@s,fsr2l
  8410  004C5C  C002  FFDA         	movff	strlen@s+1,fsr2h
  8411  004C60  50DF               	movf	indf2,w,c
  8412  004C62  A4D8               	btfss	status,2,c
  8413  004C64  EF36  F026         	goto	u2191
  8414  004C68  EF38  F026         	goto	u2190
  8415  004C6C                     u2191:
  8416  004C6C  EF2A  F026         	goto	l3056
  8417  004C70                     u2190:
  8418  004C70  5003               	movf	strlen@a^0,w,c
  8419  004C72  5C01               	subwf	strlen@s^0,w,c
  8420  004C74  6E01               	movwf	?_strlen^0,c
  8421  004C76  5004               	movf	(strlen@a+1)^0,w,c
  8422  004C78  5802               	subwfb	(strlen@s+1)^0,w,c
  8423  004C7A  6E02               	movwf	(?_strlen+1)^0,c
  8424  004C7C  0012               	return		;funcret
  8425  004C7E                     __end_of_strlen:
  8426                           	callstack 0
  8427                           
  8428 ;; *************** function _fputs *****************
  8429 ;; Defined at:
  8430 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8433 ;;		 -> dbuf(32), 
  8434 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8435 ;;		 -> sprintf@f(6), 
  8436 ;; Auto vars:     Size  Location     Type
  8437 ;;  i               2   14[COMRAM] int 
  8438 ;;  c               1   13[COMRAM] unsigned char 
  8439 ;; Return value:  Size  Location     Type
  8440 ;;                  2    9[COMRAM] int 
  8441 ;; Registers used:
  8442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8443 ;; Tracked objects:
  8444 ;;		On entry : 0/0
  8445 ;;		On exit  : 0/0
  8446 ;;		Unchanged: 0/0
  8447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8448 ;;      Params:         4       0       0       0       0       0       0       0       0
  8449 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8451 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8452 ;;Total ram usage:        7 bytes
  8453 ;; Hardware stack levels used: 1
  8454 ;; Hardware stack levels required when called: 2
  8455 ;; This function calls:
  8456 ;;		_fputc
  8457 ;; This function is called by:
  8458 ;;		_pad
  8459 ;; This function uses a non-reentrant model
  8460 ;;
  8461                           
  8462                           	psect	text27
  8463  004CF4                     __ptext27:
  8464                           	callstack 0
  8465  004CF4                     _fputs:
  8466                           	callstack 21
  8467  004CF4  0E00               	movlw	0
  8468  004CF6  6E10               	movwf	(fputs@i+1)^0,c
  8469  004CF8  0E00               	movlw	0
  8470  004CFA  6E0F               	movwf	fputs@i^0,c
  8471  004CFC  EF8B  F026         	goto	l3052
  8472  004D00                     l3048:
  8473  004D00  C00E  F001         	movff	fputs@c,fputc@c
  8474  004D04  6A02               	clrf	(fputc@c+1)^0,c
  8475  004D06  C00C  F003         	movff	fputs@fp,fputc@fp
  8476  004D0A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8477  004D0E  ECEC  F02A         	call	_fputc	;wreg free
  8478  004D12  4A0F               	infsnz	fputs@i^0,f,c
  8479  004D14  2A10               	incf	(fputs@i+1)^0,f,c
  8480  004D16                     l3052:
  8481  004D16  500F               	movf	fputs@i^0,w,c
  8482  004D18  240A               	addwf	fputs@s^0,w,c
  8483  004D1A  6ED9               	movwf	fsr2l,c
  8484  004D1C  5010               	movf	(fputs@i+1)^0,w,c
  8485  004D1E  200B               	addwfc	(fputs@s+1)^0,w,c
  8486  004D20  6EDA               	movwf	fsr2h,c
  8487  004D22  50DF               	movf	indf2,w,c
  8488  004D24  6E0E               	movwf	fputs@c^0,c
  8489  004D26  500E               	movf	fputs@c^0,w,c
  8490  004D28  A4D8               	btfss	status,2,c
  8491  004D2A  EF99  F026         	goto	u2181
  8492  004D2E  EF9B  F026         	goto	u2180
  8493  004D32                     u2181:
  8494  004D32  EF80  F026         	goto	l3048
  8495  004D36                     u2180:
  8496  004D36  0012               	return		;funcret
  8497  004D38                     __end_of_fputs:
  8498                           	callstack 0
  8499                           
  8500 ;; *************** function _fputc *****************
  8501 ;; Defined at:
  8502 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8503 ;; Parameters:    Size  Location     Type
  8504 ;;  c               2    0[COMRAM] int 
  8505 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8506 ;;		 -> sprintf@f(6), 
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;		None
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  2    0[COMRAM] int 
  8511 ;; Registers used:
  8512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8518 ;;      Params:         4       0       0       0       0       0       0       0       0
  8519 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8520 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8521 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8522 ;;Total ram usage:        9 bytes
  8523 ;; Hardware stack levels used: 1
  8524 ;; Hardware stack levels required when called: 1
  8525 ;; This function calls:
  8526 ;;		_putch
  8527 ;; This function is called by:
  8528 ;;		_pad
  8529 ;;		_vfpfcnvrt
  8530 ;;		_fputs
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           	psect	text28
  8535  0055D8                     __ptext28:
  8536                           	callstack 0
  8537  0055D8                     _fputc:
  8538                           	callstack 24
  8539  0055D8  5003               	movf	fputc@fp^0,w,c
  8540  0055DA  1004               	iorwf	(fputc@fp+1)^0,w,c
  8541  0055DC  B4D8               	btfsc	status,2,c
  8542  0055DE  EFF3  F02A         	goto	u2141
  8543  0055E2  EFF5  F02A         	goto	u2140
  8544  0055E6                     u2141:
  8545  0055E6  EFFE  F02A         	goto	l3036
  8546  0055EA                     u2140:
  8547  0055EA  5003               	movf	fputc@fp^0,w,c
  8548  0055EC  1004               	iorwf	(fputc@fp+1)^0,w,c
  8549  0055EE  A4D8               	btfss	status,2,c
  8550  0055F0  EFFC  F02A         	goto	u2151
  8551  0055F4  EFFE  F02A         	goto	u2150
  8552  0055F8                     u2151:
  8553  0055F8  EF03  F02B         	goto	l3038
  8554  0055FC                     u2150:
  8555  0055FC                     l3036:
  8556  0055FC  5001               	movf	fputc@c^0,w,c
  8557  0055FE  ECAB  F025         	call	_putch
  8558  005602  EF50  F02B         	goto	l1267
  8559  005606                     l3038:
  8560  005606  EE20 F004          	lfsr	2,4
  8561  00560A  5003               	movf	fputc@fp^0,w,c
  8562  00560C  26D9               	addwf	fsr2l,f,c
  8563  00560E  5004               	movf	(fputc@fp+1)^0,w,c
  8564  005610  22DA               	addwfc	fsr2h,f,c
  8565  005612  50DE               	movf	postinc2,w,c
  8566  005614  10DE               	iorwf	postinc2,w,c
  8567  005616  B4D8               	btfsc	status,2,c
  8568  005618  EF10  F02B         	goto	u2161
  8569  00561C  EF12  F02B         	goto	u2160
  8570  005620                     u2161:
  8571  005620  EF2D  F02B         	goto	l3042
  8572  005624                     u2160:
  8573  005624  EE20 F004          	lfsr	2,4
  8574  005628  5003               	movf	fputc@fp^0,w,c
  8575  00562A  26D9               	addwf	fsr2l,f,c
  8576  00562C  5004               	movf	(fputc@fp+1)^0,w,c
  8577  00562E  22DA               	addwfc	fsr2h,f,c
  8578  005630  EE10 F002          	lfsr	1,2
  8579  005634  5003               	movf	fputc@fp^0,w,c
  8580  005636  26E1               	addwf	fsr1l,f,c
  8581  005638  5004               	movf	(fputc@fp+1)^0,w,c
  8582  00563A  22E2               	addwfc	fsr1h,f,c
  8583  00563C  50DE               	movf	postinc2,w,c
  8584  00563E  5CE6               	subwf	postinc1,w,c
  8585  005640  50E6               	movf	postinc1,w,c
  8586  005642  0A80               	xorlw	128
  8587  005644  6E09               	movwf	(??_fputc+4)^0,c
  8588  005646  50DE               	movf	postinc2,w,c
  8589  005648  0A80               	xorlw	128
  8590  00564A  5809               	subwfb	(??_fputc+4)^0,w,c
  8591  00564C  B0D8               	btfsc	status,0,c
  8592  00564E  EF2B  F02B         	goto	u2171
  8593  005652  EF2D  F02B         	goto	u2170
  8594  005656                     u2171:
  8595  005656  EF50  F02B         	goto	l1267
  8596  00565A                     u2170:
  8597  00565A                     l3042:
  8598  00565A  EE20 F002          	lfsr	2,2
  8599  00565E  5003               	movf	fputc@fp^0,w,c
  8600  005660  26D9               	addwf	fsr2l,f,c
  8601  005662  5004               	movf	(fputc@fp+1)^0,w,c
  8602  005664  22DA               	addwfc	fsr2h,f,c
  8603  005666  CFDE F005          	movff	postinc2,??_fputc
  8604  00566A  CFDD F006          	movff	postdec2,??_fputc+1
  8605  00566E  C003  FFD9         	movff	fputc@fp,fsr2l
  8606  005672  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8607  005676  CFDE F007          	movff	postinc2,??_fputc+2
  8608  00567A  CFDD F008          	movff	postdec2,??_fputc+3
  8609  00567E  5005               	movf	??_fputc^0,w,c
  8610  005680  2407               	addwf	(??_fputc+2)^0,w,c
  8611  005682  6ED9               	movwf	fsr2l,c
  8612  005684  5006               	movf	(??_fputc+1)^0,w,c
  8613  005686  2008               	addwfc	(??_fputc+3)^0,w,c
  8614  005688  6EDA               	movwf	fsr2h,c
  8615  00568A  C001  FFDF         	movff	fputc@c,indf2
  8616  00568E  EE20 F002          	lfsr	2,2
  8617  005692  5003               	movf	fputc@fp^0,w,c
  8618  005694  26D9               	addwf	fsr2l,f,c
  8619  005696  5004               	movf	(fputc@fp+1)^0,w,c
  8620  005698  22DA               	addwfc	fsr2h,f,c
  8621  00569A  2ADE               	incf	postinc2,f,c
  8622  00569C  0E00               	movlw	0
  8623  00569E  22DD               	addwfc	postdec2,f,c
  8624  0056A0                     l1267:
  8625  0056A0  0012               	return		;funcret
  8626  0056A2                     __end_of_fputc:
  8627                           	callstack 0
  8628                           
  8629 ;; *************** function _putch *****************
  8630 ;; Defined at:
  8631 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  8632 ;; Parameters:    Size  Location     Type
  8633 ;;  c               1    wreg     unsigned char 
  8634 ;; Auto vars:     Size  Location     Type
  8635 ;;  c               1    0[COMRAM] unsigned char 
  8636 ;; Return value:  Size  Location     Type
  8637 ;;                  1    wreg      void 
  8638 ;; Registers used:
  8639 ;;		wreg
  8640 ;; Tracked objects:
  8641 ;;		On entry : 0/0
  8642 ;;		On exit  : 0/0
  8643 ;;		Unchanged: 0/0
  8644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8645 ;;      Params:         0       0       0       0       0       0       0       0       0
  8646 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8648 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8649 ;;Total ram usage:        0 bytes
  8650 ;; Hardware stack levels used: 1
  8651 ;; This function calls:
  8652 ;;		Nothing
  8653 ;; This function is called by:
  8654 ;;		_fputc
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           	psect	text29
  8659  004B56                     __ptext29:
  8660                           	callstack 0
  8661  004B56                     _putch:
  8662                           	callstack 24
  8663  004B56  0012               	return		;funcret
  8664  004B58                     __end_of_putch:
  8665                           	callstack 0
  8666                           
  8667 ;; *************** function _abs *****************
  8668 ;; Defined at:
  8669 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;  a               2   18[COMRAM] int 
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;		None
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  2   18[COMRAM] int 
  8676 ;; Registers used:
  8677 ;;		wreg, status,2, status,0
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8683 ;;      Params:         2       0       0       0       0       0       0       0       0
  8684 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8685 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8686 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8687 ;;Total ram usage:        4 bytes
  8688 ;; Hardware stack levels used: 1
  8689 ;; This function calls:
  8690 ;;		Nothing
  8691 ;; This function is called by:
  8692 ;;		_dtoa
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           	psect	text30
  8697  004CB4                     __ptext30:
  8698                           	callstack 0
  8699  004CB4                     _abs:
  8700                           	callstack 24
  8701  004CB4  BE14               	btfsc	(abs@a+1)^0,7,c
  8702  004CB6  EF67  F026         	goto	u2370
  8703  004CBA  5014               	movf	(abs@a+1)^0,w,c
  8704  004CBC  E106               	bnz	u2371
  8705  004CBE  0413               	decf	abs@a^0,w,c
  8706  004CC0  B0D8               	btfsc	status,0,c
  8707  004CC2  EF65  F026         	goto	u2371
  8708  004CC6  EF67  F026         	goto	u2370
  8709  004CCA                     u2371:
  8710  004CCA  EF75  F026         	goto	l1252
  8711  004CCE                     u2370:
  8712  004CCE  C013  F015         	movff	abs@a,??_abs
  8713  004CD2  C014  F016         	movff	abs@a+1,??_abs+1
  8714  004CD6  1E15               	comf	??_abs^0,f,c
  8715  004CD8  1E16               	comf	(??_abs+1)^0,f,c
  8716  004CDA  4A15               	infsnz	??_abs^0,f,c
  8717  004CDC  2A16               	incf	(??_abs+1)^0,f,c
  8718  004CDE  C015  F013         	movff	??_abs,?_abs
  8719  004CE2  C016  F014         	movff	??_abs+1,?_abs+1
  8720  004CE6  EF79  F026         	goto	l1255
  8721  004CEA                     l1252:
  8722  004CEA  C013  F013         	movff	abs@a,?_abs
  8723  004CEE  C014  F014         	movff	abs@a+1,?_abs+1
  8724  004CF2                     l1255:
  8725  004CF2  0012               	return		;funcret
  8726  004CF4                     __end_of_abs:
  8727                           	callstack 0
  8728                           
  8729 ;; *************** function ___aomod *****************
  8730 ;; Defined at:
  8731 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8732 ;; Parameters:    Size  Location     Type
  8733 ;;  dividend        8    0[COMRAM] long long 
  8734 ;;  divisor         8    8[COMRAM] long long 
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;  sign            1   17[COMRAM] unsigned char 
  8737 ;;  counter         1   16[COMRAM] unsigned char 
  8738 ;; Return value:  Size  Location     Type
  8739 ;;                  8    0[COMRAM] long long 
  8740 ;; Registers used:
  8741 ;;		wreg, status,2, status,0
  8742 ;; Tracked objects:
  8743 ;;		On entry : 0/0
  8744 ;;		On exit  : 0/0
  8745 ;;		Unchanged: 0/0
  8746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8747 ;;      Params:        16       0       0       0       0       0       0       0       0
  8748 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8749 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8750 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8751 ;;Total ram usage:       18 bytes
  8752 ;; Hardware stack levels used: 1
  8753 ;; This function calls:
  8754 ;;		Nothing
  8755 ;; This function is called by:
  8756 ;;		_dtoa
  8757 ;; This function uses a non-reentrant model
  8758 ;;
  8759                           
  8760                           	psect	text31
  8761  005FDE                     __ptext31:
  8762                           	callstack 0
  8763  005FDE                     ___aomod:
  8764                           	callstack 24
  8765  005FDE  0E00               	movlw	0
  8766  005FE0  6E12               	movwf	___aomod@sign^0,c
  8767  005FE2  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8768  005FE4  EFF8  F02F         	goto	u2270
  8769  005FE8  EFF6  F02F         	goto	u2271
  8770  005FEC                     u2271:
  8771  005FEC  EF0A  F030         	goto	l3116
  8772  005FF0                     u2270:
  8773  005FF0  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8774  005FF2  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8775  005FF4  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8776  005FF6  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8777  005FF8  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8778  005FFA  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8779  005FFC  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8780  005FFE  6C01               	negf	___aomod@dividend^0,c
  8781  006000  0E00               	movlw	0
  8782  006002  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8783  006004  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8784  006006  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8785  006008  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8786  00600A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8787  00600C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8788  00600E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8789  006010  0E01               	movlw	1
  8790  006012  6E12               	movwf	___aomod@sign^0,c
  8791  006014                     l3116:
  8792  006014  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8793  006016  EF11  F030         	goto	u2280
  8794  00601A  EF0F  F030         	goto	u2281
  8795  00601E                     u2281:
  8796  00601E  EF21  F030         	goto	l3120
  8797  006022                     u2280:
  8798  006022  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8799  006024  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8800  006026  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8801  006028  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8802  00602A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8803  00602C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8804  00602E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8805  006030  6C09               	negf	___aomod@divisor^0,c
  8806  006032  0E00               	movlw	0
  8807  006034  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8808  006036  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8809  006038  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8810  00603A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8811  00603C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8812  00603E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8813  006040  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8814  006042                     l3120:
  8815  006042  5009               	movf	___aomod@divisor^0,w,c
  8816  006044  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8817  006046  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8818  006048  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8819  00604A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8820  00604C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8821  00604E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8822  006050  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8823  006052  B4D8               	btfsc	status,2,c
  8824  006054  EF2E  F030         	goto	u2291
  8825  006058  EF30  F030         	goto	u2290
  8826  00605C                     u2291:
  8827  00605C  EF78  F030         	goto	l3136
  8828  006060                     u2290:
  8829  006060  0E01               	movlw	1
  8830  006062  6E11               	movwf	___aomod@counter^0,c
  8831  006064  EF3E  F030         	goto	l3126
  8832  006068                     l3124:
  8833  006068  90D8               	bcf	status,0,c
  8834  00606A  3609               	rlcf	___aomod@divisor^0,f,c
  8835  00606C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8836  00606E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8837  006070  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8838  006072  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8839  006074  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8840  006076  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8841  006078  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8842  00607A  2A11               	incf	___aomod@counter^0,f,c
  8843  00607C                     l3126:
  8844  00607C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8845  00607E  EF43  F030         	goto	u2301
  8846  006082  EF45  F030         	goto	u2300
  8847  006086                     u2301:
  8848  006086  EF34  F030         	goto	l3124
  8849  00608A                     u2300:
  8850  00608A                     l3128:
  8851  00608A  5009               	movf	___aomod@divisor^0,w,c
  8852  00608C  5C01               	subwf	___aomod@dividend^0,w,c
  8853  00608E  500A               	movf	(___aomod@divisor+1)^0,w,c
  8854  006090  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8855  006092  500B               	movf	(___aomod@divisor+2)^0,w,c
  8856  006094  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8857  006096  500C               	movf	(___aomod@divisor+3)^0,w,c
  8858  006098  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8859  00609A  500D               	movf	(___aomod@divisor+4)^0,w,c
  8860  00609C  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8861  00609E  500E               	movf	(___aomod@divisor+5)^0,w,c
  8862  0060A0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8863  0060A2  500F               	movf	(___aomod@divisor+6)^0,w,c
  8864  0060A4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8865  0060A6  5010               	movf	(___aomod@divisor+7)^0,w,c
  8866  0060A8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8867  0060AA  A0D8               	btfss	status,0,c
  8868  0060AC  EF5A  F030         	goto	u2311
  8869  0060B0  EF5C  F030         	goto	u2310
  8870  0060B4                     u2311:
  8871  0060B4  EF6C  F030         	goto	l3132
  8872  0060B8                     u2310:
  8873  0060B8  5009               	movf	___aomod@divisor^0,w,c
  8874  0060BA  5E01               	subwf	___aomod@dividend^0,f,c
  8875  0060BC  500A               	movf	(___aomod@divisor+1)^0,w,c
  8876  0060BE  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8877  0060C0  500B               	movf	(___aomod@divisor+2)^0,w,c
  8878  0060C2  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8879  0060C4  500C               	movf	(___aomod@divisor+3)^0,w,c
  8880  0060C6  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8881  0060C8  500D               	movf	(___aomod@divisor+4)^0,w,c
  8882  0060CA  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8883  0060CC  500E               	movf	(___aomod@divisor+5)^0,w,c
  8884  0060CE  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8885  0060D0  500F               	movf	(___aomod@divisor+6)^0,w,c
  8886  0060D2  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8887  0060D4  5010               	movf	(___aomod@divisor+7)^0,w,c
  8888  0060D6  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8889  0060D8                     l3132:
  8890  0060D8  90D8               	bcf	status,0,c
  8891  0060DA  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8892  0060DC  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8893  0060DE  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8894  0060E0  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8895  0060E2  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8896  0060E4  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8897  0060E6  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8898  0060E8  3209               	rrcf	___aomod@divisor^0,f,c
  8899  0060EA  2E11               	decfsz	___aomod@counter^0,f,c
  8900  0060EC  EF45  F030         	goto	l3128
  8901  0060F0                     l3136:
  8902  0060F0  5012               	movf	___aomod@sign^0,w,c
  8903  0060F2  B4D8               	btfsc	status,2,c
  8904  0060F4  EF7E  F030         	goto	u2321
  8905  0060F8  EF80  F030         	goto	u2320
  8906  0060FC                     u2321:
  8907  0060FC  EF90  F030         	goto	l3140
  8908  006100                     u2320:
  8909  006100  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8910  006102  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8911  006104  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8912  006106  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8913  006108  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8914  00610A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8915  00610C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8916  00610E  6C01               	negf	___aomod@dividend^0,c
  8917  006110  0E00               	movlw	0
  8918  006112  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8919  006114  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8920  006116  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8921  006118  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8922  00611A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8923  00611C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8924  00611E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8925  006120                     l3140:
  8926  006120  C001  F001         	movff	___aomod@dividend,?___aomod
  8927  006124  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8928  006128  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8929  00612C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8930  006130  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8931  006134  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8932  006138  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8933  00613C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8934  006140  0012               	return		;funcret
  8935  006142                     __end_of___aomod:
  8936                           	callstack 0
  8937                           
  8938 ;; *************** function ___aodiv *****************
  8939 ;; Defined at:
  8940 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8941 ;; Parameters:    Size  Location     Type
  8942 ;;  dividend        8    0[COMRAM] long long 
  8943 ;;  divisor         8    8[COMRAM] long long 
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;  quotient        8   18[COMRAM] long long 
  8946 ;;  sign            1   17[COMRAM] unsigned char 
  8947 ;;  counter         1   16[COMRAM] unsigned char 
  8948 ;; Return value:  Size  Location     Type
  8949 ;;                  8    0[COMRAM] long long 
  8950 ;; Registers used:
  8951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8952 ;; Tracked objects:
  8953 ;;		On entry : 0/0
  8954 ;;		On exit  : 0/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8957 ;;      Params:        16       0       0       0       0       0       0       0       0
  8958 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8959 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8960 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8961 ;;Total ram usage:       26 bytes
  8962 ;; Hardware stack levels used: 1
  8963 ;; This function calls:
  8964 ;;		Nothing
  8965 ;; This function is called by:
  8966 ;;		_dtoa
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970                           	psect	text32
  8971  006446                     __ptext32:
  8972                           	callstack 0
  8973  006446                     ___aodiv:
  8974                           	callstack 24
  8975  006446  0E00               	movlw	0
  8976  006448  6E12               	movwf	___aodiv@sign^0,c
  8977  00644A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8978  00644C  EF2C  F032         	goto	u2200
  8979  006450  EF2A  F032         	goto	u2201
  8980  006454                     u2201:
  8981  006454  EF3E  F032         	goto	l3072
  8982  006458                     u2200:
  8983  006458  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8984  00645A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8985  00645C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8986  00645E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8987  006460  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8988  006462  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8989  006464  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8990  006466  6C09               	negf	___aodiv@divisor^0,c
  8991  006468  0E00               	movlw	0
  8992  00646A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8993  00646C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8994  00646E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8995  006470  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8996  006472  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8997  006474  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8998  006476  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8999  006478  0E01               	movlw	1
  9000  00647A  6E12               	movwf	___aodiv@sign^0,c
  9001  00647C                     l3072:
  9002  00647C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  9003  00647E  EF45  F032         	goto	u2210
  9004  006482  EF43  F032         	goto	u2211
  9005  006486                     u2211:
  9006  006486  EF57  F032         	goto	l3078
  9007  00648A                     u2210:
  9008  00648A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  9009  00648C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  9010  00648E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  9011  006490  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  9012  006492  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  9013  006494  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  9014  006496  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  9015  006498  6C01               	negf	___aodiv@dividend^0,c
  9016  00649A  0E00               	movlw	0
  9017  00649C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  9018  00649E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  9019  0064A0  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  9020  0064A2  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  9021  0064A4  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  9022  0064A6  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  9023  0064A8  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  9024  0064AA  0E01               	movlw	1
  9025  0064AC  1A12               	xorwf	___aodiv@sign^0,f,c
  9026  0064AE                     l3078:
  9027  0064AE  EE20  F013         	lfsr	2,___aodiv@quotient
  9028  0064B2  0E07               	movlw	7
  9029  0064B4                     u2221:
  9030  0064B4  6ADE               	clrf	postinc2,c
  9031  0064B6  06E8               	decf	wreg,f,c
  9032  0064B8  E2FD               	bc	u2221
  9033  0064BA  5009               	movf	___aodiv@divisor^0,w,c
  9034  0064BC  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  9035  0064BE  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  9036  0064C0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  9037  0064C2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  9038  0064C4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  9039  0064C6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  9040  0064C8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  9041  0064CA  B4D8               	btfsc	status,2,c
  9042  0064CC  EF6A  F032         	goto	u2231
  9043  0064D0  EF6C  F032         	goto	u2230
  9044  0064D4                     u2231:
  9045  0064D4  EFBE  F032         	goto	l3100
  9046  0064D8                     u2230:
  9047  0064D8  0E01               	movlw	1
  9048  0064DA  6E11               	movwf	___aodiv@counter^0,c
  9049  0064DC  EF7A  F032         	goto	l3086
  9050  0064E0                     l3084:
  9051  0064E0  90D8               	bcf	status,0,c
  9052  0064E2  3609               	rlcf	___aodiv@divisor^0,f,c
  9053  0064E4  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  9054  0064E6  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  9055  0064E8  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  9056  0064EA  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  9057  0064EC  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  9058  0064EE  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  9059  0064F0  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  9060  0064F2  2A11               	incf	___aodiv@counter^0,f,c
  9061  0064F4                     l3086:
  9062  0064F4  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  9063  0064F6  EF7F  F032         	goto	u2241
  9064  0064FA  EF81  F032         	goto	u2240
  9065  0064FE                     u2241:
  9066  0064FE  EF70  F032         	goto	l3084
  9067  006502                     u2240:
  9068  006502                     l3088:
  9069  006502  90D8               	bcf	status,0,c
  9070  006504  3613               	rlcf	___aodiv@quotient^0,f,c
  9071  006506  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  9072  006508  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  9073  00650A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  9074  00650C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  9075  00650E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  9076  006510  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  9077  006512  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  9078  006514  5009               	movf	___aodiv@divisor^0,w,c
  9079  006516  5C01               	subwf	___aodiv@dividend^0,w,c
  9080  006518  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9081  00651A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  9082  00651C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9083  00651E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  9084  006520  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9085  006522  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  9086  006524  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9087  006526  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  9088  006528  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9089  00652A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  9090  00652C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9091  00652E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  9092  006530  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9093  006532  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  9094  006534  A0D8               	btfss	status,0,c
  9095  006536  EF9F  F032         	goto	u2251
  9096  00653A  EFA1  F032         	goto	u2250
  9097  00653E                     u2251:
  9098  00653E  EFB2  F032         	goto	l3096
  9099  006542                     u2250:
  9100  006542  5009               	movf	___aodiv@divisor^0,w,c
  9101  006544  5E01               	subwf	___aodiv@dividend^0,f,c
  9102  006546  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9103  006548  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  9104  00654A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9105  00654C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  9106  00654E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9107  006550  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  9108  006552  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9109  006554  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  9110  006556  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9111  006558  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  9112  00655A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9113  00655C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  9114  00655E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9115  006560  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  9116  006562  8013               	bsf	___aodiv@quotient^0,0,c
  9117  006564                     l3096:
  9118  006564  90D8               	bcf	status,0,c
  9119  006566  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  9120  006568  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  9121  00656A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  9122  00656C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  9123  00656E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  9124  006570  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  9125  006572  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  9126  006574  3209               	rrcf	___aodiv@divisor^0,f,c
  9127  006576  2E11               	decfsz	___aodiv@counter^0,f,c
  9128  006578  EF81  F032         	goto	l3088
  9129  00657C                     l3100:
  9130  00657C  5012               	movf	___aodiv@sign^0,w,c
  9131  00657E  B4D8               	btfsc	status,2,c
  9132  006580  EFC4  F032         	goto	u2261
  9133  006584  EFC6  F032         	goto	u2260
  9134  006588                     u2261:
  9135  006588  EFD6  F032         	goto	l3104
  9136  00658C                     u2260:
  9137  00658C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  9138  00658E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  9139  006590  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  9140  006592  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  9141  006594  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  9142  006596  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  9143  006598  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  9144  00659A  6C13               	negf	___aodiv@quotient^0,c
  9145  00659C  0E00               	movlw	0
  9146  00659E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  9147  0065A0  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  9148  0065A2  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  9149  0065A4  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  9150  0065A6  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  9151  0065A8  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  9152  0065AA  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9153  0065AC                     l3104:
  9154  0065AC  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9155  0065B0  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9156  0065B4  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9157  0065B8  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9158  0065BC  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9159  0065C0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9160  0065C4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9161  0065C8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9162  0065CC  0012               	return		;funcret
  9163  0065CE                     __end_of___aodiv:
  9164                           	callstack 0
  9165                           
  9166 ;; *************** function _miniMidi *****************
  9167 ;; Defined at:
  9168 ;;		line 470 in file "MyIHM_1A.c"
  9169 ;; Parameters:    Size  Location     Type
  9170 ;;		None
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;  notas         108   54[BANK1 ] unsigned int [54]
  9173 ;;  tempo          54    0[BANK1 ] unsigned char [54]
  9174 ;;  pos             1  163[BANK1 ] unsigned char 
  9175 ;;  cont            1  162[BANK1 ] unsigned char 
  9176 ;; Return value:  Size  Location     Type
  9177 ;;                  1    wreg      void 
  9178 ;; Registers used:
  9179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9180 ;; Tracked objects:
  9181 ;;		On entry : 0/0
  9182 ;;		On exit  : 0/0
  9183 ;;		Unchanged: 0/0
  9184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9185 ;;      Params:         0       0       0       0       0       0       0       0       0
  9186 ;;      Locals:         0       0     164       0       0       0       0       0       0
  9187 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9188 ;;      Totals:         1       0     164       0       0       0       0       0       0
  9189 ;;Total ram usage:      165 bytes
  9190 ;; Hardware stack levels used: 1
  9191 ;; Hardware stack levels required when called: 2
  9192 ;; This function calls:
  9193 ;;		_EscreveLinhaLCD4
  9194 ;;		_aguardaTimer
  9195 ;;		_inicializaPWM
  9196 ;;		_inicializaTimer
  9197 ;;		_resetaTimer
  9198 ;;		_setaFreqPWM
  9199 ;;		_setaPWM2
  9200 ;; This function is called by:
  9201 ;;		_subMenuBuzzer
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205                           	psect	text33
  9206  005A36                     __ptext33:
  9207                           	callstack 0
  9208  005A36                     _miniMidi:
  9209                           	callstack 27
  9210  005A36                     
  9211                           ;MyIHM_1A.c: 472:     unsigned char cont=0;
  9212  005A36  0E00               	movlw	0
  9213  005A38  0101               	movlb	1	; () banked
  9214  005A3A  6FA2               	movwf	miniMidi@cont& (0+255),b
  9215                           
  9216                           ;MyIHM_1A.c: 473:     unsigned char pos =0;
  9217  005A3C  0E00               	movlw	0
  9218  005A3E  6FA3               	movwf	miniMidi@pos& (0+255),b
  9219  005A40                     
  9220                           ; BSR set to: 1
  9221                           ;MyIHM_1A.c: 474:     EscreveLinhaLCD4(1,"MIDI on          ");
  9222  005A40  0E56               	movlw	low STR_20
  9223  005A42  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  9224  005A44  0E7C               	movlw	high STR_20
  9225  005A46  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  9226  005A48  0E01               	movlw	1
  9227  005A4A  ECE5  F028         	call	_EscreveLinhaLCD4
  9228  005A4E                     
  9229                           ;MyIHM_1A.c: 475:     EscreveLinhaLCD4(2,"RB1 p/VOLTAR     ");
  9230  005A4E  0E9E               	movlw	low STR_17
  9231  005A50  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
  9232  005A52  0E7C               	movlw	high STR_17
  9233  005A54  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
  9234  005A56  0E02               	movlw	2
  9235  005A58  ECE5  F028         	call	_EscreveLinhaLCD4
  9236  005A5C                     
  9237                           ;MyIHM_1A.c: 477:     unsigned char tempo [] ={
  9238  005A5C  EE21  F0A4         	lfsr	2,miniMidi@F3559
  9239  005A60  EE11  F000         	lfsr	1,miniMidi@tempo
  9240  005A64  0E35               	movlw	53
  9241  005A66                     u3591:
  9242  005A66  CFDB FFE3          	movff	plusw2,plusw1
  9243  005A6A  06E8               	decf	wreg,f,c
  9244  005A6C  E2FC               	bc	u3591
  9245  005A6E                     
  9246                           ;MyIHM_1A.c: 483:     unsigned int notas [] ={
  9247  005A6E  EE22  F077         	lfsr	2,miniMidi@F3561
  9248  005A72  EE11  F036         	lfsr	1,miniMidi@notas
  9249  005A76  0E6B               	movlw	107
  9250  005A78                     u3601:
  9251  005A78  CFDB FFE3          	movff	plusw2,plusw1
  9252  005A7C  06E8               	decf	wreg,f,c
  9253  005A7E  E2FC               	bc	u3601
  9254                           
  9255                           ;MyIHM_1A.c: 491:     T0CON = 0b00001000 ;
  9256  005A80  0E08               	movlw	8
  9257  005A82  6ED5               	movwf	213,c	;volatile
  9258  005A84                     
  9259                           ;MyIHM_1A.c: 492:     T0CON |= 1 << 7;
  9260  005A84  8ED5               	bsf	213,7,c	;volatile
  9261  005A86                     
  9262                           ;MyIHM_1A.c: 494:     inicializaPWM();
  9263  005A86  ECBB  F025         	call	_inicializaPWM	;wreg free
  9264  005A8A                     
  9265                           ;MyIHM_1A.c: 495:     inicializaTimer();
  9266  005A8A  ECAF  F025         	call	_inicializaTimer	;wreg free
  9267  005A8E                     
  9268                           ;MyIHM_1A.c: 497:     setaFreqPWM(notas[0]);
  9269  005A8E  C136  F00F         	movff	miniMidi@notas,setaFreqPWM@freq
  9270  005A92  C137  F010         	movff	miniMidi@notas+1,setaFreqPWM@freq+1
  9271  005A96  ECFB  F025         	call	_setaFreqPWM	;wreg free
  9272  005A9A                     
  9273                           ;MyIHM_1A.c: 498:     setaPWM2(50);
  9274  005A9A  0E32               	movlw	50
  9275  005A9C  EC40  F027         	call	_setaPWM2
  9276                           
  9277                           ;MyIHM_1A.c: 500:     while(PORTBbits.RB1 != 0){
  9278  005AA0  EF88  F02D         	goto	l4232
  9279  005AA4                     l4214:
  9280                           
  9281                           ;MyIHM_1A.c: 501:         aguardaTimer ( ) ;
  9282  005AA4  ECB3  F025         	call	_aguardaTimer	;wreg free
  9283  005AA8                     
  9284                           ;MyIHM_1A.c: 502:         resetaTimer (10000) ;
  9285  005AA8  0E27               	movlw	39
  9286  005AAA  6E02               	movwf	(resetaTimer@tempo+1)^0,c
  9287  005AAC  0E10               	movlw	16
  9288  005AAE  6E01               	movwf	resetaTimer@tempo^0,c
  9289  005AB0  ECD7  F025         	call	_resetaTimer	;wreg free
  9290  005AB4                     
  9291                           ;MyIHM_1A.c: 503:         cont++;
  9292  005AB4  0101               	movlb	1	; () banked
  9293  005AB6  2BA2               	incf	miniMidi@cont& (0+255),f,b
  9294  005AB8                     
  9295                           ; BSR set to: 1
  9296                           ;MyIHM_1A.c: 504:         if( cont >= tempo [ pos ] ){
  9297  005AB8  0E00               	movlw	low miniMidi@tempo
  9298  005ABA  25A3               	addwf	miniMidi@pos& (0+255),w,b
  9299  005ABC  6ED9               	movwf	fsr2l,c
  9300  005ABE  6ADA               	clrf	fsr2h,c
  9301  005AC0  0E01               	movlw	high miniMidi@tempo
  9302  005AC2  22DA               	addwfc	fsr2h,f,c
  9303  005AC4  50DE               	movf	postinc2,w,c
  9304  005AC6  5DA2               	subwf	miniMidi@cont& (0+255),w,b
  9305  005AC8  A0D8               	btfss	status,0,c
  9306  005ACA  EF69  F02D         	goto	u3611
  9307  005ACE  EF6B  F02D         	goto	u3610
  9308  005AD2                     u3611:
  9309  005AD2  EF88  F02D         	goto	l4232
  9310  005AD6                     u3610:
  9311  005AD6                     
  9312                           ; BSR set to: 1
  9313                           ;MyIHM_1A.c: 505:             if ( pos <54){
  9314  005AD6  0E36               	movlw	54
  9315  005AD8  61A3               	cpfslt	miniMidi@pos& (0+255),b
  9316  005ADA  EF71  F02D         	goto	u3621
  9317  005ADE  EF73  F02D         	goto	u3620
  9318  005AE2                     u3621:
  9319  005AE2  EF74  F02D         	goto	l4226
  9320  005AE6                     u3620:
  9321  005AE6                     
  9322                           ; BSR set to: 1
  9323                           ;MyIHM_1A.c: 506:                 pos++;
  9324  005AE6  2BA3               	incf	miniMidi@pos& (0+255),f,b
  9325  005AE8                     l4226:
  9326                           
  9327                           ; BSR set to: 1
  9328                           ;MyIHM_1A.c: 508:         setaFreqPWM ( notas [ pos ] ) ;
  9329  005AE8  51A3               	movf	miniMidi@pos& (0+255),w,b
  9330  005AEA  0D02               	mullw	2
  9331  005AEC  0E36               	movlw	low miniMidi@notas
  9332  005AEE  24F3               	addwf	243,w,c
  9333  005AF0  6ED9               	movwf	fsr2l,c
  9334  005AF2  0E01               	movlw	high miniMidi@notas
  9335  005AF4  20F4               	addwfc	prodh,w,c
  9336  005AF6  6EDA               	movwf	fsr2h,c
  9337  005AF8  CFDE F00F          	movff	postinc2,setaFreqPWM@freq
  9338  005AFC  CFDD F010          	movff	postdec2,setaFreqPWM@freq+1
  9339  005B00  ECFB  F025         	call	_setaFreqPWM	;wreg free
  9340  005B04                     
  9341                           ;MyIHM_1A.c: 509:         setaPWM2 ( 50 ) ;
  9342  005B04  0E32               	movlw	50
  9343  005B06  EC40  F027         	call	_setaPWM2
  9344  005B0A                     
  9345                           ;MyIHM_1A.c: 510:         cont =0;
  9346  005B0A  0E00               	movlw	0
  9347  005B0C  0101               	movlb	1	; () banked
  9348  005B0E  6FA2               	movwf	miniMidi@cont& (0+255),b
  9349  005B10                     l4232:
  9350                           
  9351                           ;MyIHM_1A.c: 500:     while(PORTBbits.RB1 != 0){
  9352  005B10  B281               	btfsc	129,1,c	;volatile
  9353  005B12  EF8D  F02D         	goto	u3631
  9354  005B16  EF8F  F02D         	goto	u3630
  9355  005B1A                     u3631:
  9356  005B1A  EF52  F02D         	goto	l4214
  9357  005B1E                     u3630:
  9358  005B1E                     l216:
  9359  005B1E  A281               	btfss	129,1,c	;volatile
  9360  005B20  EF94  F02D         	goto	u3641
  9361  005B24  EF96  F02D         	goto	u3640
  9362  005B28                     u3641:
  9363  005B28  EF8F  F02D         	goto	l216
  9364  005B2C                     u3640:
  9365  005B2C                     
  9366                           ;MyIHM_1A.c: 518:     setaFreqPWM(125000);
  9367  005B2C  0EE8               	movlw	232
  9368  005B2E  6E10               	movwf	(setaFreqPWM@freq+1)^0,c
  9369  005B30  0E48               	movlw	72
  9370  005B32  6E0F               	movwf	setaFreqPWM@freq^0,c
  9371  005B34  ECFB  F025         	call	_setaFreqPWM	;wreg free
  9372  005B38                     
  9373                           ;MyIHM_1A.c: 519:     setaPWM2(0);
  9374  005B38  0E00               	movlw	0
  9375  005B3A  EC40  F027         	call	_setaPWM2
  9376  005B3E  0012               	return		;funcret
  9377  005B40                     __end_of_miniMidi:
  9378                           	callstack 0
  9379                           
  9380 ;; *************** function _setaPWM2 *****************
  9381 ;; Defined at:
  9382 ;;		line 137 in file "MyIHM_1A.c"
  9383 ;; Parameters:    Size  Location     Type
  9384 ;;  porcento        1    wreg     unsigned char 
  9385 ;; Auto vars:     Size  Location     Type
  9386 ;;  porcento        1    9[COMRAM] unsigned char 
  9387 ;;  val             2   10[COMRAM] unsigned int 
  9388 ;; Return value:  Size  Location     Type
  9389 ;;                  1    wreg      void 
  9390 ;; Registers used:
  9391 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9392 ;; Tracked objects:
  9393 ;;		On entry : 0/0
  9394 ;;		On exit  : 0/0
  9395 ;;		Unchanged: 0/0
  9396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9397 ;;      Params:         0       0       0       0       0       0       0       0       0
  9398 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9399 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9400 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9401 ;;Total ram usage:        5 bytes
  9402 ;; Hardware stack levels used: 1
  9403 ;; Hardware stack levels required when called: 1
  9404 ;; This function calls:
  9405 ;;		___lwdiv
  9406 ;; This function is called by:
  9407 ;;		_testarBuzzerPWM
  9408 ;;		_miniMidi
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           	psect	text34
  9413  004E80                     __ptext34:
  9414                           	callstack 0
  9415  004E80                     _setaPWM2:
  9416                           	callstack 27
  9417                           
  9418                           ;incstack = 0
  9419                           ;setaPWM2@porcento stored from wreg
  9420  004E80  6E0A               	movwf	setaPWM2@porcento^0,c
  9421  004E82                     
  9422                           ;MyIHM_1A.c: 138:     unsigned int val = porcento * PR2;
  9423  004E82  500A               	movf	setaPWM2@porcento^0,w,c
  9424  004E84  02CB               	mulwf	203,c	;volatile
  9425  004E86  CFF3 F00B          	movff	prodl,setaPWM2@val
  9426  004E8A  CFF4 F00C          	movff	prodh,setaPWM2@val+1
  9427  004E8E                     
  9428                           ;MyIHM_1A.c: 139:     val /= 25;
  9429  004E8E  C00B  F001         	movff	setaPWM2@val,___lwdiv@dividend
  9430  004E92  C00C  F002         	movff	setaPWM2@val+1,___lwdiv@dividend+1
  9431  004E96  0E00               	movlw	0
  9432  004E98  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  9433  004E9A  0E19               	movlw	25
  9434  004E9C  6E03               	movwf	___lwdiv@divisor^0,c
  9435  004E9E  EC6A  F028         	call	___lwdiv	;wreg free
  9436  004EA2  C001  F00B         	movff	?___lwdiv,setaPWM2@val
  9437  004EA6  C002  F00C         	movff	?___lwdiv+1,setaPWM2@val+1
  9438  004EAA                     
  9439                           ;MyIHM_1A.c: 140:     val &= 0x03ff ;
  9440  004EAA  0EFF               	movlw	255
  9441  004EAC  160B               	andwf	setaPWM2@val^0,f,c
  9442  004EAE  0E03               	movlw	3
  9443  004EB0  160C               	andwf	(setaPWM2@val+1)^0,f,c
  9444  004EB2                     
  9445                           ;MyIHM_1A.c: 141:     CCPR2L = val >> 2 ;
  9446  004EB2  C00B  F008         	movff	setaPWM2@val,??_setaPWM2
  9447  004EB6  C00C  F009         	movff	setaPWM2@val+1,??_setaPWM2+1
  9448  004EBA  90D8               	bcf	status,0,c
  9449  004EBC  3209               	rrcf	(??_setaPWM2+1)^0,f,c
  9450  004EBE  3208               	rrcf	??_setaPWM2^0,f,c
  9451  004EC0  90D8               	bcf	status,0,c
  9452  004EC2  3209               	rrcf	(??_setaPWM2+1)^0,f,c
  9453  004EC4  3208               	rrcf	??_setaPWM2^0,f,c
  9454  004EC6  5008               	movf	??_setaPWM2^0,w,c
  9455  004EC8  6EBB               	movwf	187,c	;volatile
  9456  004ECA                     
  9457                           ;MyIHM_1A.c: 142:     CCP2CON |= ( val & 0x0003 ) << 4 ;
  9458  004ECA  C00B  F008         	movff	setaPWM2@val,??_setaPWM2	;volatile
  9459  004ECE  0E03               	movlw	3
  9460  004ED0  1608               	andwf	??_setaPWM2^0,f,c
  9461  004ED2  3808               	swapf	??_setaPWM2^0,w,c
  9462  004ED4  0BF0               	andlw	240
  9463  004ED6  12BA               	iorwf	186,f,c	;volatile
  9464  004ED8  0012               	return		;funcret
  9465  004EDA                     __end_of_setaPWM2:
  9466                           	callstack 0
  9467                           
  9468 ;; *************** function ___lwdiv *****************
  9469 ;; Defined at:
  9470 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  9471 ;; Parameters:    Size  Location     Type
  9472 ;;  dividend        2    0[COMRAM] unsigned int 
  9473 ;;  divisor         2    2[COMRAM] unsigned int 
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;  quotient        2    4[COMRAM] unsigned int 
  9476 ;;  counter         1    6[COMRAM] unsigned char 
  9477 ;; Return value:  Size  Location     Type
  9478 ;;                  2    0[COMRAM] unsigned int 
  9479 ;; Registers used:
  9480 ;;		wreg, status,2, status,0
  9481 ;; Tracked objects:
  9482 ;;		On entry : 0/0
  9483 ;;		On exit  : 0/0
  9484 ;;		Unchanged: 0/0
  9485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9486 ;;      Params:         4       0       0       0       0       0       0       0       0
  9487 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9488 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9489 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9490 ;;Total ram usage:        7 bytes
  9491 ;; Hardware stack levels used: 1
  9492 ;; This function calls:
  9493 ;;		Nothing
  9494 ;; This function is called by:
  9495 ;;		_setaPWM1
  9496 ;;		_setaPWM2
  9497 ;;		_testarDisplay2
  9498 ;;		_testarCoolerPot
  9499 ;;		_testarCoolerPotUpDown
  9500 ;; This function uses a non-reentrant model
  9501 ;;
  9502                           
  9503                           	psect	text35
  9504  0050D4                     __ptext35:
  9505                           	callstack 0
  9506  0050D4                     ___lwdiv:
  9507                           	callstack 28
  9508  0050D4  0E00               	movlw	0
  9509  0050D6  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  9510  0050D8  0E00               	movlw	0
  9511  0050DA  6E05               	movwf	___lwdiv@quotient^0,c
  9512  0050DC  5003               	movf	___lwdiv@divisor^0,w,c
  9513  0050DE  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9514  0050E0  B4D8               	btfsc	status,2,c
  9515  0050E2  EF75  F028         	goto	u2651
  9516  0050E6  EF77  F028         	goto	u2650
  9517  0050EA                     u2651:
  9518  0050EA  EF9F  F028         	goto	l977
  9519  0050EE                     u2650:
  9520  0050EE  0E01               	movlw	1
  9521  0050F0  6E07               	movwf	___lwdiv@counter^0,c
  9522  0050F2  EF7F  F028         	goto	l3410
  9523  0050F6                     l3408:
  9524  0050F6  90D8               	bcf	status,0,c
  9525  0050F8  3603               	rlcf	___lwdiv@divisor^0,f,c
  9526  0050FA  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9527  0050FC  2A07               	incf	___lwdiv@counter^0,f,c
  9528  0050FE                     l3410:
  9529  0050FE  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  9530  005100  EF84  F028         	goto	u2661
  9531  005104  EF86  F028         	goto	u2660
  9532  005108                     u2661:
  9533  005108  EF7B  F028         	goto	l3408
  9534  00510C                     u2660:
  9535  00510C                     l3412:
  9536  00510C  90D8               	bcf	status,0,c
  9537  00510E  3605               	rlcf	___lwdiv@quotient^0,f,c
  9538  005110  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9539  005112  5003               	movf	___lwdiv@divisor^0,w,c
  9540  005114  5C01               	subwf	___lwdiv@dividend^0,w,c
  9541  005116  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  9542  005118  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9543  00511A  A0D8               	btfss	status,0,c
  9544  00511C  EF92  F028         	goto	u2671
  9545  005120  EF94  F028         	goto	u2670
  9546  005124                     u2671:
  9547  005124  EF99  F028         	goto	l3420
  9548  005128                     u2670:
  9549  005128  5003               	movf	___lwdiv@divisor^0,w,c
  9550  00512A  5E01               	subwf	___lwdiv@dividend^0,f,c
  9551  00512C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  9552  00512E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9553  005130  8005               	bsf	___lwdiv@quotient^0,0,c
  9554  005132                     l3420:
  9555  005132  90D8               	bcf	status,0,c
  9556  005134  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9557  005136  3203               	rrcf	___lwdiv@divisor^0,f,c
  9558  005138  2E07               	decfsz	___lwdiv@counter^0,f,c
  9559  00513A  EF86  F028         	goto	l3412
  9560  00513E                     l977:
  9561  00513E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  9562  005142  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9563  005146  0012               	return		;funcret
  9564  005148                     __end_of___lwdiv:
  9565                           	callstack 0
  9566                           
  9567 ;; *************** function _setaFreqPWM *****************
  9568 ;; Defined at:
  9569 ;;		line 144 in file "MyIHM_1A.c"
  9570 ;; Parameters:    Size  Location     Type
  9571 ;;  freq            2   14[COMRAM] unsigned int 
  9572 ;; Auto vars:     Size  Location     Type
  9573 ;;		None
  9574 ;; Return value:  Size  Location     Type
  9575 ;;                  1    wreg      void 
  9576 ;; Registers used:
  9577 ;;		wreg, status,2, status,0, cstack
  9578 ;; Tracked objects:
  9579 ;;		On entry : 0/0
  9580 ;;		On exit  : 0/0
  9581 ;;		Unchanged: 0/0
  9582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9583 ;;      Params:         2       0       0       0       0       0       0       0       0
  9584 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9586 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9587 ;;Total ram usage:        2 bytes
  9588 ;; Hardware stack levels used: 1
  9589 ;; Hardware stack levels required when called: 1
  9590 ;; This function calls:
  9591 ;;		___aldiv
  9592 ;; This function is called by:
  9593 ;;		_testarBuzzerPWM
  9594 ;;		_testarCoolerPot
  9595 ;;		_testarCoolerPotUpDown
  9596 ;;		_miniMidi
  9597 ;; This function uses a non-reentrant model
  9598 ;;
  9599                           
  9600                           	psect	text36
  9601  004BF6                     __ptext36:
  9602                           	callstack 0
  9603  004BF6                     _setaFreqPWM:
  9604                           	callstack 27
  9605  004BF6                     
  9606                           ;MyIHM_1A.c: 146:     PR2 = (125000/(freq))-1;
  9607  004BF6  0E48               	movlw	72
  9608  004BF8  6E01               	movwf	___aldiv@dividend^0,c
  9609  004BFA  0EE8               	movlw	232
  9610  004BFC  6E02               	movwf	(___aldiv@dividend+1)^0,c
  9611  004BFE  0E01               	movlw	1
  9612  004C00  6E03               	movwf	(___aldiv@dividend+2)^0,c
  9613  004C02  0E00               	movlw	0
  9614  004C04  6E04               	movwf	(___aldiv@dividend+3)^0,c
  9615  004C06  C00F  F005         	movff	setaFreqPWM@freq,___aldiv@divisor
  9616  004C0A  C010  F006         	movff	setaFreqPWM@freq+1,___aldiv@divisor+1
  9617  004C0E  6A07               	clrf	(___aldiv@divisor+2)^0,c
  9618  004C10  6A08               	clrf	(___aldiv@divisor+3)^0,c
  9619  004C12  ECA0  F02D         	call	___aldiv	;wreg free
  9620  004C16  0401               	decf	?___aldiv^0,w,c
  9621  004C18  6ECB               	movwf	203,c	;volatile
  9622  004C1A  0012               	return		;funcret
  9623  004C1C                     __end_of_setaFreqPWM:
  9624                           	callstack 0
  9625                           
  9626 ;; *************** function ___aldiv *****************
  9627 ;; Defined at:
  9628 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  9629 ;; Parameters:    Size  Location     Type
  9630 ;;  dividend        4    0[COMRAM] long 
  9631 ;;  divisor         4    4[COMRAM] long 
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;  quotient        4   10[COMRAM] long 
  9634 ;;  sign            1    9[COMRAM] unsigned char 
  9635 ;;  counter         1    8[COMRAM] unsigned char 
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  4    0[COMRAM] long 
  9638 ;; Registers used:
  9639 ;;		wreg, status,2, status,0
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9645 ;;      Params:         8       0       0       0       0       0       0       0       0
  9646 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9648 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9649 ;;Total ram usage:       14 bytes
  9650 ;; Hardware stack levels used: 1
  9651 ;; This function calls:
  9652 ;;		Nothing
  9653 ;; This function is called by:
  9654 ;;		_setaFreqPWM
  9655 ;; This function uses a non-reentrant model
  9656 ;;
  9657                           
  9658                           	psect	text37
  9659  005B40                     __ptext37:
  9660                           	callstack 0
  9661  005B40                     ___aldiv:
  9662                           	callstack 27
  9663  005B40  0E00               	movlw	0
  9664  005B42  6E0A               	movwf	___aldiv@sign^0,c
  9665  005B44  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  9666  005B46  EFA9  F02D         	goto	u2590
  9667  005B4A  EFA7  F02D         	goto	u2591
  9668  005B4E                     u2591:
  9669  005B4E  EFB3  F02D         	goto	l3366
  9670  005B52                     u2590:
  9671  005B52  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  9672  005B54  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  9673  005B56  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  9674  005B58  6C05               	negf	___aldiv@divisor^0,c
  9675  005B5A  0E00               	movlw	0
  9676  005B5C  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  9677  005B5E  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  9678  005B60  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  9679  005B62  0E01               	movlw	1
  9680  005B64  6E0A               	movwf	___aldiv@sign^0,c
  9681  005B66                     l3366:
  9682  005B66  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  9683  005B68  EFBA  F02D         	goto	u2600
  9684  005B6C  EFB8  F02D         	goto	u2601
  9685  005B70                     u2601:
  9686  005B70  EFC4  F02D         	goto	l3372
  9687  005B74                     u2600:
  9688  005B74  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  9689  005B76  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  9690  005B78  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  9691  005B7A  6C01               	negf	___aldiv@dividend^0,c
  9692  005B7C  0E00               	movlw	0
  9693  005B7E  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  9694  005B80  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  9695  005B82  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  9696  005B84  0E01               	movlw	1
  9697  005B86  1A0A               	xorwf	___aldiv@sign^0,f,c
  9698  005B88                     l3372:
  9699  005B88  0E00               	movlw	0
  9700  005B8A  6E0B               	movwf	___aldiv@quotient^0,c
  9701  005B8C  0E00               	movlw	0
  9702  005B8E  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  9703  005B90  0E00               	movlw	0
  9704  005B92  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  9705  005B94  0E00               	movlw	0
  9706  005B96  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  9707  005B98  5005               	movf	___aldiv@divisor^0,w,c
  9708  005B9A  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  9709  005B9C  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  9710  005B9E  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  9711  005BA0  B4D8               	btfsc	status,2,c
  9712  005BA2  EFD5  F02D         	goto	u2611
  9713  005BA6  EFD7  F02D         	goto	u2610
  9714  005BAA                     u2611:
  9715  005BAA  EF0D  F02E         	goto	l3394
  9716  005BAE                     u2610:
  9717  005BAE  0E01               	movlw	1
  9718  005BB0  6E09               	movwf	___aldiv@counter^0,c
  9719  005BB2  EFE1  F02D         	goto	l3380
  9720  005BB6                     l3378:
  9721  005BB6  90D8               	bcf	status,0,c
  9722  005BB8  3605               	rlcf	___aldiv@divisor^0,f,c
  9723  005BBA  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  9724  005BBC  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  9725  005BBE  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  9726  005BC0  2A09               	incf	___aldiv@counter^0,f,c
  9727  005BC2                     l3380:
  9728  005BC2  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  9729  005BC4  EFE6  F02D         	goto	u2621
  9730  005BC8  EFE8  F02D         	goto	u2620
  9731  005BCC                     u2621:
  9732  005BCC  EFDB  F02D         	goto	l3378
  9733  005BD0                     u2620:
  9734  005BD0                     l3382:
  9735  005BD0  90D8               	bcf	status,0,c
  9736  005BD2  360B               	rlcf	___aldiv@quotient^0,f,c
  9737  005BD4  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  9738  005BD6  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  9739  005BD8  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  9740  005BDA  5005               	movf	___aldiv@divisor^0,w,c
  9741  005BDC  5C01               	subwf	___aldiv@dividend^0,w,c
  9742  005BDE  5006               	movf	(___aldiv@divisor+1)^0,w,c
  9743  005BE0  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  9744  005BE2  5007               	movf	(___aldiv@divisor+2)^0,w,c
  9745  005BE4  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  9746  005BE6  5008               	movf	(___aldiv@divisor+3)^0,w,c
  9747  005BE8  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  9748  005BEA  A0D8               	btfss	status,0,c
  9749  005BEC  EFFA  F02D         	goto	u2631
  9750  005BF0  EFFC  F02D         	goto	u2630
  9751  005BF4                     u2631:
  9752  005BF4  EF05  F02E         	goto	l3390
  9753  005BF8                     u2630:
  9754  005BF8  5005               	movf	___aldiv@divisor^0,w,c
  9755  005BFA  5E01               	subwf	___aldiv@dividend^0,f,c
  9756  005BFC  5006               	movf	(___aldiv@divisor+1)^0,w,c
  9757  005BFE  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  9758  005C00  5007               	movf	(___aldiv@divisor+2)^0,w,c
  9759  005C02  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  9760  005C04  5008               	movf	(___aldiv@divisor+3)^0,w,c
  9761  005C06  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  9762  005C08  800B               	bsf	___aldiv@quotient^0,0,c
  9763  005C0A                     l3390:
  9764  005C0A  90D8               	bcf	status,0,c
  9765  005C0C  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  9766  005C0E  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  9767  005C10  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  9768  005C12  3205               	rrcf	___aldiv@divisor^0,f,c
  9769  005C14  2E09               	decfsz	___aldiv@counter^0,f,c
  9770  005C16  EFE8  F02D         	goto	l3382
  9771  005C1A                     l3394:
  9772  005C1A  500A               	movf	___aldiv@sign^0,w,c
  9773  005C1C  B4D8               	btfsc	status,2,c
  9774  005C1E  EF13  F02E         	goto	u2641
  9775  005C22  EF15  F02E         	goto	u2640
  9776  005C26                     u2641:
  9777  005C26  EF1D  F02E         	goto	l3398
  9778  005C2A                     u2640:
  9779  005C2A  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  9780  005C2C  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  9781  005C2E  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  9782  005C30  6C0B               	negf	___aldiv@quotient^0,c
  9783  005C32  0E00               	movlw	0
  9784  005C34  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  9785  005C36  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  9786  005C38  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  9787  005C3A                     l3398:
  9788  005C3A  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  9789  005C3E  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  9790  005C42  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  9791  005C46  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  9792  005C4A  0012               	return		;funcret
  9793  005C4C                     __end_of___aldiv:
  9794                           	callstack 0
  9795                           
  9796 ;; *************** function _resetaTimer *****************
  9797 ;; Defined at:
  9798 ;;		line 107 in file "MyIHM_1A.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  tempo           2    0[COMRAM] unsigned int 
  9801 ;; Auto vars:     Size  Location     Type
  9802 ;;  ciclos          2    2[COMRAM] unsigned int 
  9803 ;; Return value:  Size  Location     Type
  9804 ;;                  1    wreg      void 
  9805 ;; Registers used:
  9806 ;;		wreg, status,2, status,0
  9807 ;; Tracked objects:
  9808 ;;		On entry : 0/0
  9809 ;;		On exit  : 0/0
  9810 ;;		Unchanged: 0/0
  9811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9812 ;;      Params:         2       0       0       0       0       0       0       0       0
  9813 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9814 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9815 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9816 ;;Total ram usage:        4 bytes
  9817 ;; Hardware stack levels used: 1
  9818 ;; This function calls:
  9819 ;;		Nothing
  9820 ;; This function is called by:
  9821 ;;		_miniMidi
  9822 ;; This function uses a non-reentrant model
  9823 ;;
  9824                           
  9825                           	psect	text38
  9826  004BAE                     __ptext38:
  9827                           	callstack 0
  9828  004BAE                     _resetaTimer:
  9829                           	callstack 28
  9830  004BAE                     
  9831                           ;MyIHM_1A.c: 108:     unsigned ciclos = tempo * 2 ;
  9832  004BAE  90D8               	bcf	status,0,c
  9833  004BB0  3401               	rlcf	resetaTimer@tempo^0,w,c
  9834  004BB2  6E03               	movwf	resetaTimer@ciclos^0,c
  9835  004BB4  3402               	rlcf	(resetaTimer@tempo+1)^0,w,c
  9836  004BB6  6E04               	movwf	(resetaTimer@ciclos+1)^0,c
  9837  004BB8                     
  9838                           ;MyIHM_1A.c: 109:     ciclos = 65535-ciclos;
  9839  004BB8  1E03               	comf	resetaTimer@ciclos^0,f,c
  9840  004BBA  1E04               	comf	(resetaTimer@ciclos+1)^0,f,c
  9841  004BBC                     
  9842                           ;MyIHM_1A.c: 110:     ciclos -= 14;
  9843  004BBC  0E0E               	movlw	14
  9844  004BBE  5E03               	subwf	resetaTimer@ciclos^0,f,c
  9845  004BC0  0E00               	movlw	0
  9846  004BC2  5A04               	subwfb	(resetaTimer@ciclos+1)^0,f,c
  9847  004BC4                     
  9848                           ;MyIHM_1A.c: 111:     TMR0H = ( ciclos >> 8 ) ;
  9849  004BC4  5004               	movf	(resetaTimer@ciclos+1)^0,w,c
  9850  004BC6  6ED7               	movwf	215,c	;volatile
  9851  004BC8                     
  9852                           ;MyIHM_1A.c: 112:     TMR0L = ( ciclos & 0x00FF ) ;
  9853  004BC8  C003  FFD6         	movff	resetaTimer@ciclos,4054	;volatile
  9854  004BCC                     
  9855                           ;MyIHM_1A.c: 113:     INTCON &= ~(1 << 2);
  9856  004BCC  94F2               	bcf	242,2,c	;volatile
  9857  004BCE  0012               	return		;funcret
  9858  004BD0                     __end_of_resetaTimer:
  9859                           	callstack 0
  9860                           
  9861 ;; *************** function _inicializaTimer *****************
  9862 ;; Defined at:
  9863 ;;		line 115 in file "MyIHM_1A.c"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;		None
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;		None
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  1    wreg      void 
  9870 ;; Registers used:
  9871 ;;		wreg, status,2, status,0
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9877 ;;      Params:         0       0       0       0       0       0       0       0       0
  9878 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9879 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9880 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9881 ;;Total ram usage:        0 bytes
  9882 ;; Hardware stack levels used: 1
  9883 ;; This function calls:
  9884 ;;		Nothing
  9885 ;; This function is called by:
  9886 ;;		_testarBuzzerPWM
  9887 ;;		_testarCoolerPot
  9888 ;;		_testarCoolerPotUpDown
  9889 ;;		_miniMidi
  9890 ;; This function uses a non-reentrant model
  9891 ;;
  9892                           
  9893                           	psect	text39
  9894  004B5E                     __ptext39:
  9895                           	callstack 0
  9896  004B5E                     _inicializaTimer:
  9897                           	callstack 28
  9898  004B5E                     
  9899                           ;MyIHM_1A.c: 116:     T0CON = 0b00001000 ;
  9900  004B5E  0E08               	movlw	8
  9901  004B60  6ED5               	movwf	213,c	;volatile
  9902  004B62                     
  9903                           ;MyIHM_1A.c: 117:     T0CON |= 1<<7 ;
  9904  004B62  8ED5               	bsf	213,7,c	;volatile
  9905  004B64  0012               	return		;funcret
  9906  004B66                     __end_of_inicializaTimer:
  9907                           	callstack 0
  9908                           
  9909 ;; *************** function _inicializaPWM *****************
  9910 ;; Defined at:
  9911 ;;		line 148 in file "MyIHM_1A.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;		None
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;		None
  9916 ;; Return value:  Size  Location     Type
  9917 ;;                  1    wreg      void 
  9918 ;; Registers used:
  9919 ;;		wreg, status,2, status,0
  9920 ;; Tracked objects:
  9921 ;;		On entry : 0/0
  9922 ;;		On exit  : 0/0
  9923 ;;		Unchanged: 0/0
  9924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9925 ;;      Params:         0       0       0       0       0       0       0       0       0
  9926 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9927 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9928 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9929 ;;Total ram usage:        0 bytes
  9930 ;; Hardware stack levels used: 1
  9931 ;; This function calls:
  9932 ;;		Nothing
  9933 ;; This function is called by:
  9934 ;;		_testarBuzzerPWM
  9935 ;;		_testarCoolerPot
  9936 ;;		_testarCoolerPotUpDown
  9937 ;;		_miniMidi
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           	psect	text40
  9942  004B76                     __ptext40:
  9943                           	callstack 0
  9944  004B76                     _inicializaPWM:
  9945                           	callstack 28
  9946  004B76                     
  9947                           ;MyIHM_1A.c: 149:     TRISCbits.RC1 = 0;
  9948  004B76  9294               	bcf	148,1,c	;volatile
  9949                           
  9950                           ;MyIHM_1A.c: 150:     TRISCbits.RC2 = 0;
  9951  004B78  9494               	bcf	148,2,c	;volatile
  9952                           
  9953                           ;MyIHM_1A.c: 151:     TRISCbits.RC6 = 0;
  9954  004B7A  9C94               	bcf	148,6,c	;volatile
  9955  004B7C                     
  9956                           ;MyIHM_1A.c: 155:     T2CON |= 0b00000011 ;
  9957  004B7C  0E03               	movlw	3
  9958  004B7E  12CA               	iorwf	202,f,c	;volatile
  9959  004B80                     
  9960                           ;MyIHM_1A.c: 157:     T2CON |= 1<< 2;
  9961  004B80  84CA               	bsf	202,2,c	;volatile
  9962  004B82                     
  9963                           ;MyIHM_1A.c: 158:     CCP1CON |= 0b00001100 ;
  9964  004B82  0E0C               	movlw	12
  9965  004B84  12BD               	iorwf	189,f,c	;volatile
  9966  004B86                     
  9967                           ;MyIHM_1A.c: 159:     CCP2CON |= 0b00001100 ;
  9968  004B86  0E0C               	movlw	12
  9969  004B88  12BA               	iorwf	186,f,c	;volatile
  9970  004B8A  0012               	return		;funcret
  9971  004B8C                     __end_of_inicializaPWM:
  9972                           	callstack 0
  9973                           
  9974 ;; *************** function _aguardaTimer *****************
  9975 ;; Defined at:
  9976 ;;		line 104 in file "MyIHM_1A.c"
  9977 ;; Parameters:    Size  Location     Type
  9978 ;;		None
  9979 ;; Auto vars:     Size  Location     Type
  9980 ;;		None
  9981 ;; Return value:  Size  Location     Type
  9982 ;;                  1    wreg      void 
  9983 ;; Registers used:
  9984 ;;		None
  9985 ;; Tracked objects:
  9986 ;;		On entry : 0/0
  9987 ;;		On exit  : 0/0
  9988 ;;		Unchanged: 0/0
  9989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9990 ;;      Params:         0       0       0       0       0       0       0       0       0
  9991 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9992 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9993 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9994 ;;Total ram usage:        0 bytes
  9995 ;; Hardware stack levels used: 1
  9996 ;; This function calls:
  9997 ;;		Nothing
  9998 ;; This function is called by:
  9999 ;;		_miniMidi
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003                           	psect	text41
 10004  004B66                     __ptext41:
 10005                           	callstack 0
 10006  004B66                     _aguardaTimer:
 10007                           	callstack 28
 10008  004B66                     l84:
 10009  004B66  A4F2               	btfss	242,2,c	;volatile
 10010  004B68  EFB8  F025         	goto	u2691
 10011  004B6C  EFBA  F025         	goto	u2690
 10012  004B70                     u2691:
 10013  004B70  EFB3  F025         	goto	l84
 10014  004B74                     u2690:
 10015  004B74  0012               	return		;funcret
 10016  004B76                     __end_of_aguardaTimer:
 10017                           	callstack 0
 10018                           
 10019 ;; *************** function _capturaUpDown *****************
 10020 ;; Defined at:
 10021 ;;		line 523 in file "MyIHM_1A.c"
 10022 ;; Parameters:    Size  Location     Type
 10023 ;;  opt             2    0[COMRAM] short 
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;		None
 10026 ;; Return value:  Size  Location     Type
 10027 ;;                  2    0[COMRAM] short 
 10028 ;; Registers used:
 10029 ;;		status,2, status,0
 10030 ;; Tracked objects:
 10031 ;;		On entry : 0/0
 10032 ;;		On exit  : 0/0
 10033 ;;		Unchanged: 0/0
 10034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10035 ;;      Params:         2       0       0       0       0       0       0       0       0
 10036 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10037 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10038 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10039 ;;Total ram usage:        2 bytes
 10040 ;; Hardware stack levels used: 1
 10041 ;; This function calls:
 10042 ;;		Nothing
 10043 ;; This function is called by:
 10044 ;;		_subMenuDisplay7Seg
 10045 ;;		_subMenuRelays
 10046 ;;		_subMenuBuzzer
 10047 ;;		_subMenuLCD
 10048 ;;		_subMenuCooler
 10049 ;; This function uses a non-reentrant model
 10050 ;;
 10051                           
 10052                           	psect	text42
 10053  004D88                     __ptext42:
 10054                           	callstack 0
 10055  004D88                     _capturaUpDown:
 10056                           	callstack 29
 10057  004D88                     
 10058                           ;MyIHM_1A.c: 525:     if(PORTBbits.RB0 == 0 ){
 10059  004D88  B081               	btfsc	129,0,c	;volatile
 10060  004D8A  EFC9  F026         	goto	u3651
 10061  004D8E  EFCB  F026         	goto	u3650
 10062  004D92                     u3651:
 10063  004D92  EFD6  F026         	goto	l222
 10064  004D96                     u3650:
 10065  004D96                     
 10066                           ;MyIHM_1A.c: 526:         opt++; while(PORTBbits.RB0 == 0 );
 10067  004D96  4A01               	infsnz	capturaUpDown@opt^0,f,c
 10068  004D98  2A02               	incf	(capturaUpDown@opt+1)^0,f,c
 10069  004D9A                     l223:
 10070  004D9A  A081               	btfss	129,0,c	;volatile
 10071  004D9C  EFD2  F026         	goto	u3661
 10072  004DA0  EFD4  F026         	goto	u3660
 10073  004DA4                     u3661:
 10074  004DA4  EFCD  F026         	goto	l223
 10075  004DA8                     u3660:
 10076  004DA8  EFE7  F026         	goto	l226
 10077  004DAC                     l222:
 10078  004DAC  B481               	btfsc	129,2,c	;volatile
 10079  004DAE  EFDB  F026         	goto	u3671
 10080  004DB2  EFDD  F026         	goto	u3670
 10081  004DB6                     u3671:
 10082  004DB6  EFE7  F026         	goto	l226
 10083  004DBA                     u3670:
 10084  004DBA                     
 10085                           ;MyIHM_1A.c: 528:        opt--; while(PORTBbits.RB2 == 0 );
 10086  004DBA  0601               	decf	capturaUpDown@opt^0,f,c
 10087  004DBC  A0D8               	btfss	status,0,c
 10088  004DBE  0602               	decf	(capturaUpDown@opt+1)^0,f,c
 10089  004DC0                     l228:
 10090  004DC0  A481               	btfss	129,2,c	;volatile
 10091  004DC2  EFE5  F026         	goto	u3681
 10092  004DC6  EFE7  F026         	goto	u3680
 10093  004DCA                     u3681:
 10094  004DCA  EFE0  F026         	goto	l228
 10095  004DCE                     u3680:
 10096  004DCE                     l226:
 10097                           
 10098                           ;MyIHM_1A.c: 531:    return opt;
 10099  004DCE  C001  F001         	movff	capturaUpDown@opt,?_capturaUpDown
 10100  004DD2  C002  F002         	movff	capturaUpDown@opt+1,?_capturaUpDown+1
 10101  004DD6  0012               	return		;funcret
 10102  004DD8                     __end_of_capturaUpDown:
 10103                           	callstack 0
 10104                           
 10105 ;; *************** function _showSobre *****************
 10106 ;; Defined at:
 10107 ;;		line 739 in file "MyIHM_1A.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;		None
 10110 ;; Auto vars:     Size  Location     Type
 10111 ;;  sobre         119    0[BANK0 ] unsigned char [17][7]
 10112 ;;  idx             2  119[BANK0 ] unsigned short 
 10113 ;; Return value:  Size  Location     Type
 10114 ;;                  1    wreg      void 
 10115 ;; Registers used:
 10116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10117 ;; Tracked objects:
 10118 ;;		On entry : 0/0
 10119 ;;		On exit  : 0/0
 10120 ;;		Unchanged: 0/0
 10121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10122 ;;      Params:         0       0       0       0       0       0       0       0       0
 10123 ;;      Locals:         0     121       0       0       0       0       0       0       0
 10124 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10125 ;;      Totals:         0     121       0       0       0       0       0       0       0
 10126 ;;Total ram usage:      121 bytes
 10127 ;; Hardware stack levels used: 1
 10128 ;; Hardware stack levels required when called: 2
 10129 ;; This function calls:
 10130 ;;		_Delay_ms
 10131 ;;		_EscreveLinhaLCD4
 10132 ;;		___wmul
 10133 ;; This function is called by:
 10134 ;;		_main
 10135 ;; This function uses a non-reentrant model
 10136 ;;
 10137                           
 10138                           	psect	text43
 10139  00576C                     __ptext43:
 10140                           	callstack 0
 10141  00576C                     _showSobre:
 10142                           	callstack 28
 10143  00576C                     
 10144                           ;MyIHM_1A.c: 741:     char sobre[7][17] ={{"IHM Versao 1.00 \0"},
 10145  00576C  EE22  F000         	lfsr	2,showSobre@F3576
 10146  005770  EE10  F060         	lfsr	1,showSobre@sobre
 10147  005774  0E76               	movlw	118
 10148  005776                     u4061:
 10149  005776  CFDB FFE3          	movff	plusw2,plusw1
 10150  00577A  06E8               	decf	wreg,f,c
 10151  00577C  E2FC               	bc	u4061
 10152  00577E                     
 10153                           ;MyIHM_1A.c: 750:     unsigned short idx = 0;
 10154  00577E  0E00               	movlw	0
 10155  005780  0100               	movlb	0	; () banked
 10156  005782  6FD8               	movwf	(showSobre@idx+1)& (0+255),b
 10157  005784  0E00               	movlw	0
 10158  005786  6FD7               	movwf	showSobre@idx& (0+255),b
 10159                           
 10160                           ;MyIHM_1A.c: 751:     while(idx < 6){
 10161  005788  EF19  F02C         	goto	l4478
 10162  00578C                     l4466:
 10163                           
 10164                           ; BSR set to: 0
 10165                           ;MyIHM_1A.c: 754:         EscreveLinhaLCD4(1,&sobre[idx][0]);
 10166  00578C  C0D7  F001         	movff	showSobre@idx,___wmul@multiplier
 10167  005790  C0D8  F002         	movff	showSobre@idx+1,___wmul@multiplier+1
 10168  005794  0E00               	movlw	0
 10169  005796  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10170  005798  0E11               	movlw	17
 10171  00579A  6E03               	movwf	___wmul@multiplicand^0,c
 10172  00579C  ECE8  F025         	call	___wmul	;wreg free
 10173  0057A0  0E60               	movlw	low showSobre@sobre
 10174  0057A2  2401               	addwf	?___wmul^0,w,c
 10175  0057A4  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
 10176  0057A6  0E00               	movlw	high showSobre@sobre
 10177  0057A8  2002               	addwfc	(?___wmul+1)^0,w,c
 10178  0057AA  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
 10179  0057AC  0E01               	movlw	1
 10180  0057AE  ECE5  F028         	call	_EscreveLinhaLCD4
 10181                           
 10182                           ;MyIHM_1A.c: 756:         EscreveLinhaLCD4(2,&sobre[idx+1][0]);
 10183  0057B2  C0D7  F001         	movff	showSobre@idx,___wmul@multiplier
 10184  0057B6  C0D8  F002         	movff	showSobre@idx+1,___wmul@multiplier+1
 10185  0057BA  0E00               	movlw	0
 10186  0057BC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10187  0057BE  0E11               	movlw	17
 10188  0057C0  6E03               	movwf	___wmul@multiplicand^0,c
 10189  0057C2  ECE8  F025         	call	___wmul	;wreg free
 10190  0057C6  0E11               	movlw	17
 10191  0057C8  2601               	addwf	?___wmul^0,f,c
 10192  0057CA  0E00               	movlw	0
 10193  0057CC  2202               	addwfc	(?___wmul+1)^0,f,c
 10194  0057CE  0E60               	movlw	low showSobre@sobre
 10195  0057D0  2401               	addwf	?___wmul^0,w,c
 10196  0057D2  6E07               	movwf	EscreveLinhaLCD4@FRASE^0,c
 10197  0057D4  0E00               	movlw	high showSobre@sobre
 10198  0057D6  2002               	addwfc	(?___wmul+1)^0,w,c
 10199  0057D8  6E08               	movwf	(EscreveLinhaLCD4@FRASE+1)^0,c
 10200  0057DA  0E02               	movlw	2
 10201  0057DC  ECE5  F028         	call	_EscreveLinhaLCD4
 10202  0057E0                     
 10203                           ;MyIHM_1A.c: 757:         Delay_ms(3000);
 10204  0057E0  0E0B               	movlw	11
 10205  0057E2  6E02               	movwf	(Delay_ms@milisegundos+1)^0,c
 10206  0057E4  0EB8               	movlw	184
 10207  0057E6  6E01               	movwf	Delay_ms@milisegundos^0,c
 10208  0057E8  EC0E  F026         	call	_Delay_ms	;wreg free
 10209  0057EC                     
 10210                           ;MyIHM_1A.c: 759:         if (++idx == 7){
 10211  0057EC  0100               	movlb	0	; () banked
 10212  0057EE  4BD7               	infsnz	showSobre@idx& (0+255),f,b
 10213  0057F0  2BD8               	incf	(showSobre@idx+1)& (0+255),f,b
 10214  0057F2  0E07               	movlw	7
 10215  0057F4  19D7               	xorwf	showSobre@idx& (0+255),w,b
 10216  0057F6  11D8               	iorwf	(showSobre@idx+1)& (0+255),w,b
 10217  0057F8  A4D8               	btfss	status,2,c
 10218  0057FA  EF01  F02C         	goto	u4071
 10219  0057FE  EF03  F02C         	goto	u4070
 10220  005802                     u4071:
 10221  005802  EF07  F02C         	goto	l4474
 10222  005806                     u4070:
 10223  005806                     
 10224                           ; BSR set to: 0
 10225                           ;MyIHM_1A.c: 760:             idx = 0;
 10226  005806  0E00               	movlw	0
 10227  005808  6FD8               	movwf	(showSobre@idx+1)& (0+255),b
 10228  00580A  0E00               	movlw	0
 10229  00580C  6FD7               	movwf	showSobre@idx& (0+255),b
 10230  00580E                     l4474:
 10231                           
 10232                           ; BSR set to: 0
 10233                           ;MyIHM_1A.c: 762:         if (PORTBbits.RB1 == 0){
 10234  00580E  B281               	btfsc	129,1,c	;volatile
 10235  005810  EF0C  F02C         	goto	u4081
 10236  005814  EF0E  F02C         	goto	u4080
 10237  005818                     u4081:
 10238  005818  EF19  F02C         	goto	l4478
 10239  00581C                     u4080:
 10240  00581C                     
 10241                           ; BSR set to: 0
 10242                           ;MyIHM_1A.c: 763:             idx = 6 ; while(PORTBbits.RB1 == 0 );
 10243  00581C  0E00               	movlw	0
 10244  00581E  6FD8               	movwf	(showSobre@idx+1)& (0+255),b
 10245  005820  0E06               	movlw	6
 10246  005822  6FD7               	movwf	showSobre@idx& (0+255),b
 10247  005824                     l375:
 10248  005824  A281               	btfss	129,1,c	;volatile
 10249  005826  EF17  F02C         	goto	u4091
 10250  00582A  EF19  F02C         	goto	u4090
 10251  00582E                     u4091:
 10252  00582E  EF12  F02C         	goto	l375
 10253  005832                     u4090:
 10254  005832                     l4478:
 10255                           
 10256                           ;MyIHM_1A.c: 751:     while(idx < 6){
 10257  005832  0100               	movlb	0	; () banked
 10258  005834  51D8               	movf	(showSobre@idx+1)& (0+255),w,b
 10259  005836  E109               	bnz	u4100
 10260  005838  0E06               	movlw	6
 10261  00583A  5DD7               	subwf	showSobre@idx& (0+255),w,b
 10262  00583C  A0D8               	btfss	status,0,c
 10263  00583E  EF23  F02C         	goto	u4101
 10264  005842  EF25  F02C         	goto	u4100
 10265  005846                     u4101:
 10266  005846  EFC6  F02B         	goto	l4466
 10267  00584A                     u4100:
 10268  00584A                     
 10269                           ; BSR set to: 0
 10270  00584A  0012               	return		;funcret
 10271  00584C                     __end_of_showSobre:
 10272                           	callstack 0
 10273                           
 10274 ;; *************** function ___wmul *****************
 10275 ;; Defined at:
 10276 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 10277 ;; Parameters:    Size  Location     Type
 10278 ;;  multiplier      2    0[COMRAM] unsigned int 
 10279 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10280 ;; Auto vars:     Size  Location     Type
 10281 ;;  product         2    4[COMRAM] unsigned int 
 10282 ;; Return value:  Size  Location     Type
 10283 ;;                  2    0[COMRAM] unsigned int 
 10284 ;; Registers used:
 10285 ;;		wreg, status,2, status,0, prodl, prodh
 10286 ;; Tracked objects:
 10287 ;;		On entry : 0/0
 10288 ;;		On exit  : 0/0
 10289 ;;		Unchanged: 0/0
 10290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10291 ;;      Params:         4       0       0       0       0       0       0       0       0
 10292 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10293 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10294 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10295 ;;Total ram usage:        6 bytes
 10296 ;; Hardware stack levels used: 1
 10297 ;; This function calls:
 10298 ;;		Nothing
 10299 ;; This function is called by:
 10300 ;;		_setaPWM1
 10301 ;;		_showSobre
 10302 ;; This function uses a non-reentrant model
 10303 ;;
 10304                           
 10305                           	psect	text44
 10306  004BD0                     __ptext44:
 10307                           	callstack 0
 10308  004BD0                     ___wmul:
 10309                           	callstack 27
 10310  004BD0  5001               	movf	___wmul@multiplier^0,w,c
 10311  004BD2  0203               	mulwf	___wmul@multiplicand^0,c
 10312  004BD4  CFF3 F005          	movff	prodl,___wmul@product
 10313  004BD8  CFF4 F006          	movff	prodh,___wmul@product+1
 10314  004BDC  5001               	movf	___wmul@multiplier^0,w,c
 10315  004BDE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10316  004BE0  50F3               	movf	243,w,c
 10317  004BE2  2606               	addwf	(___wmul@product+1)^0,f,c
 10318  004BE4  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10319  004BE6  0203               	mulwf	___wmul@multiplicand^0,c
 10320  004BE8  50F3               	movf	243,w,c
 10321  004BEA  2606               	addwf	(___wmul@product+1)^0,f,c
 10322  004BEC  C005  F001         	movff	___wmul@product,?___wmul
 10323  004BF0  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10324  004BF4  0012               	return		;funcret
 10325  004BF6                     __end_of___wmul:
 10326                           	callstack 0
 10327                           
 10328 ;; *************** function _EscreveLinhaLCD4 *****************
 10329 ;; Defined at:
 10330 ;;		line 908 in file "MyIHM_1A.c"
 10331 ;; Parameters:    Size  Location     Type
 10332 ;;  LINHA           1    wreg     unsigned char 
 10333 ;;  FRASE           2    6[COMRAM] PTR unsigned char 
 10334 ;;		 -> STR_73(17), STR_72(17), STR_71(17), STR_70(17), 
 10335 ;;		 -> STR_69(17), STR_68(17), STR_67(17), STR_66(17), 
 10336 ;;		 -> STR_65(17), STR_64(17), STR_63(17), STR_62(17), 
 10337 ;;		 -> STR_61(18), STR_60(18), STR_59(17), STR_58(17), 
 10338 ;;		 -> showSobre@sobre(119), STR_57(18), STR_56(18), STR_55(17), 
 10339 ;;		 -> STR_54(17), STR_53(17), STR_52(17), STR_51(17), 
 10340 ;;		 -> STR_50(17), STR_49(17), STR_48(17), STR_47(17), 
 10341 ;;		 -> STR_46(17), STR_45(17), STR_44(17), STR_43(17), 
 10342 ;;		 -> STR_42(17), STR_41(17), STR_40(17), STR_39(17), 
 10343 ;;		 -> STR_38(17), STR_37(17), STR_36(17), STR_35(17), 
 10344 ;;		 -> STR_34(17), STR_33(17), STR_32(17), STR_31(17), 
 10345 ;;		 -> STR_30(17), STR_29(17), STR_28(17), STR_27(17), 
 10346 ;;		 -> STR_26(17), STR_25(17), STR_24(17), STR_23(17), 
 10347 ;;		 -> STR_22(17), STR_21(18), STR_20(18), STR_19(18), 
 10348 ;;		 -> testarCoolerPotUpDown@msg(16), STR_17(18), testarCoolerPot@msg(16), testarBuzzerPWM@msg(16), 
 10349 ;;		 -> STR_14(17), STR_13(17), testarRelays@msg1(16), testarRelays@msg2(16), 
 10350 ;;		 -> testarDisplay2@sconta(16), STR_6(17), STR_5(17), STR_4(17), 
 10351 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
 10352 ;; Auto vars:     Size  Location     Type
 10353 ;;  LINHA           1    8[COMRAM] unsigned char 
 10354 ;; Return value:  Size  Location     Type
 10355 ;;                  1    wreg      void 
 10356 ;; Registers used:
 10357 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10358 ;; Tracked objects:
 10359 ;;		On entry : 0/0
 10360 ;;		On exit  : 0/0
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10363 ;;      Params:         2       0       0       0       0       0       0       0       0
 10364 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10365 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10366 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10367 ;;Total ram usage:        3 bytes
 10368 ;; Hardware stack levels used: 1
 10369 ;; Hardware stack levels required when called: 1
 10370 ;; This function calls:
 10371 ;;		_ConfiguraLCD4
 10372 ;;		_EscreveLCD4
 10373 ;; This function is called by:
 10374 ;;		_testarDisplay1
 10375 ;;		_testarDisplay2
 10376 ;;		_testarRelays
 10377 ;;		_testarLCD
 10378 ;;		_testarBuzzerPWM
 10379 ;;		_testarCoolerPot
 10380 ;;		_testarCoolerPotUpDown
 10381 ;;		_miniMidi
 10382 ;;		_subMenuDisplay7Seg
 10383 ;;		_subMenuRelays
 10384 ;;		_subMenuBuzzer
 10385 ;;		_subMenuLCD
 10386 ;;		_subMenuCooler
 10387 ;;		_showSobre
 10388 ;;		_main
 10389 ;; This function uses a non-reentrant model
 10390 ;;
 10391                           
 10392                           	psect	text45
 10393  0051CA                     __ptext45:
 10394                           	callstack 0
 10395  0051CA                     _EscreveLinhaLCD4:
 10396                           	callstack 27
 10397                           
 10398                           ;incstack = 0
 10399                           ;EscreveLinhaLCD4@LINHA stored from wreg
 10400  0051CA  6E09               	movwf	EscreveLinhaLCD4@LINHA^0,c
 10401  0051CC                     
 10402                           ;MyIHM_1A.c: 910:     if(LINHA == 1) ConfiguraLCD4(0x80);
 10403  0051CC  0409               	decf	EscreveLinhaLCD4@LINHA^0,w,c
 10404  0051CE  A4D8               	btfss	status,2,c
 10405  0051D0  EFEC  F028         	goto	u2701
 10406  0051D4  EFEE  F028         	goto	u2700
 10407  0051D8                     u2701:
 10408  0051D8  EFF1  F028         	goto	l3486
 10409  0051DC                     u2700:
 10410  0051DC  0E80               	movlw	128
 10411  0051DE  EC6D  F027         	call	_ConfiguraLCD4
 10412  0051E2                     l3486:
 10413                           
 10414                           ;MyIHM_1A.c: 911:     if(LINHA == 2) ConfiguraLCD4(0xC0);
 10415  0051E2  0E02               	movlw	2
 10416  0051E4  1809               	xorwf	EscreveLinhaLCD4@LINHA^0,w,c
 10417  0051E6  A4D8               	btfss	status,2,c
 10418  0051E8  EFF8  F028         	goto	u2711
 10419  0051EC  EFFA  F028         	goto	u2710
 10420  0051F0                     u2711:
 10421  0051F0  EF13  F029         	goto	l3494
 10422  0051F4                     u2710:
 10423  0051F4  0EC0               	movlw	192
 10424  0051F6  EC6D  F027         	call	_ConfiguraLCD4
 10425  0051FA  EF13  F029         	goto	l3494
 10426  0051FE                     l3490:
 10427                           
 10428                           ;MyIHM_1A.c: 915:         EscreveLCD4(*FRASE);
 10429  0051FE  C007  FFF6         	movff	EscreveLinhaLCD4@FRASE,tblptrl
 10430  005202  C008  FFF7         	movff	EscreveLinhaLCD4@FRASE+1,tblptrh
 10431  005206  6AF8               	clrf	tblptru,c
 10432  005208  0E07               	movlw	(high __ramtop+-1)
 10433  00520A  64F7               	cpfsgt	tblptrh,c
 10434  00520C  D003               	bra	u2727
 10435  00520E  0008               	tblrd		*
 10436  005210  50F5               	movf	tablat,w,c
 10437  005212  D005               	bra	u2720
 10438  005214                     u2727:
 10439  005214  CFF6 FFE1          	movff	tblptrl,fsr1l
 10440  005218  CFF7 FFE2          	movff	tblptrh,fsr1h
 10441  00521C  50E7               	movf	indf1,w,c
 10442  00521E                     u2720:
 10443  00521E  EC9C  F026         	call	_EscreveLCD4
 10444  005222                     
 10445                           ;MyIHM_1A.c: 916:         ++FRASE;
 10446  005222  4A07               	infsnz	EscreveLinhaLCD4@FRASE^0,f,c
 10447  005224  2A08               	incf	(EscreveLinhaLCD4@FRASE+1)^0,f,c
 10448  005226                     l3494:
 10449                           
 10450                           ;MyIHM_1A.c: 914:     while(*FRASE != '\0'){
 10451  005226  C007  FFF6         	movff	EscreveLinhaLCD4@FRASE,tblptrl
 10452  00522A  C008  FFF7         	movff	EscreveLinhaLCD4@FRASE+1,tblptrh
 10453  00522E  6AF8               	clrf	tblptru,c
 10454  005230  0E07               	movlw	(high __ramtop+-1)
 10455  005232  64F7               	cpfsgt	tblptrh,c
 10456  005234  D003               	bra	u2737
 10457  005236  0008               	tblrd		*
 10458  005238  50F5               	movf	tablat,w,c
 10459  00523A  D005               	bra	u2730
 10460  00523C                     u2737:
 10461  00523C  CFF6 FFE1          	movff	tblptrl,fsr1l
 10462  005240  CFF7 FFE2          	movff	tblptrh,fsr1h
 10463  005244  50E7               	movf	indf1,w,c
 10464  005246                     u2730:
 10465  005246  0900               	iorlw	0
 10466  005248  A4D8               	btfss	status,2,c
 10467  00524A  EF29  F029         	goto	u2741
 10468  00524E  EF2B  F029         	goto	u2740
 10469  005252                     u2741:
 10470  005252  EFFF  F028         	goto	l3490
 10471  005256                     u2740:
 10472  005256  0012               	return		;funcret
 10473  005258                     __end_of_EscreveLinhaLCD4:
 10474                           	callstack 0
 10475                           
 10476 ;; *************** function _EscreveLCD4 *****************
 10477 ;; Defined at:
 10478 ;;		line 894 in file "MyIHM_1A.c"
 10479 ;; Parameters:    Size  Location     Type
 10480 ;;  DADO            1    wreg     unsigned char 
 10481 ;; Auto vars:     Size  Location     Type
 10482 ;;  DADO            1    1[COMRAM] unsigned char 
 10483 ;; Return value:  Size  Location     Type
 10484 ;;                  1    wreg      void 
 10485 ;; Registers used:
 10486 ;;		wreg, status,2, status,0
 10487 ;; Tracked objects:
 10488 ;;		On entry : 0/0
 10489 ;;		On exit  : 0/0
 10490 ;;		Unchanged: 0/0
 10491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10492 ;;      Params:         0       0       0       0       0       0       0       0       0
 10493 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10494 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10495 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10496 ;;Total ram usage:        2 bytes
 10497 ;; Hardware stack levels used: 1
 10498 ;; This function calls:
 10499 ;;		Nothing
 10500 ;; This function is called by:
 10501 ;;		_testarLCD
 10502 ;;		_EscreveLinhaLCD4
 10503 ;; This function uses a non-reentrant model
 10504 ;;
 10505                           
 10506                           	psect	text46
 10507  004D38                     __ptext46:
 10508                           	callstack 0
 10509  004D38                     _EscreveLCD4:
 10510                           	callstack 27
 10511                           
 10512                           ;incstack = 0
 10513                           ;EscreveLCD4@DADO stored from wreg
 10514  004D38  6E02               	movwf	EscreveLCD4@DADO^0,c
 10515  004D3A                     
 10516                           ;MyIHM_1A.c: 895:     PORTEbits.RE2 = 1;
 10517  004D3A  8484               	bsf	132,2,c	;volatile
 10518  004D3C                     
 10519                           ;MyIHM_1A.c: 896:     PORTD = (PORTD & 0x0f)|(0xF0 & DADO);
 10520  004D3C  C002  F001         	movff	EscreveLCD4@DADO,??_EscreveLCD4
 10521  004D40  0EF0               	movlw	240
 10522  004D42  1601               	andwf	??_EscreveLCD4^0,f,c
 10523  004D44  5083               	movf	131,w,c	;volatile
 10524  004D46  0B0F               	andlw	15
 10525  004D48  1001               	iorwf	??_EscreveLCD4^0,w,c
 10526  004D4A  6E83               	movwf	131,c	;volatile
 10527  004D4C                     
 10528                           ;MyIHM_1A.c: 897:     PORTEbits.RE1 = 1;
 10529  004D4C  8284               	bsf	132,1,c	;volatile
 10530  004D4E                     
 10531                           ;MyIHM_1A.c: 898:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 10532  004D4E  0E06               	movlw	6
 10533  004D50                     u4467:
 10534  004D50  2EE8               	decfsz	wreg,f,c
 10535  004D52  D7FE               	bra	u4467
 10536  004D54  D000               	nop2	
 10537  004D56                     
 10538                           ;MyIHM_1A.c: 899:     PORTEbits.RE1 = 0;
 10539  004D56  9284               	bcf	132,1,c	;volatile
 10540  004D58                     
 10541                           ;MyIHM_1A.c: 900:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10542  004D58  0E42               	movlw	66
 10543  004D5A                     u4477:
 10544  004D5A  2EE8               	decfsz	wreg,f,c
 10545  004D5C  D7FE               	bra	u4477
 10546  004D5E  D000               	nop2	
 10547                           
 10548                           ;MyIHM_1A.c: 901:     PORTD = (PORTD & 0x0f)|(DADO<<4);
 10549  004D60  C002  F001         	movff	EscreveLCD4@DADO,??_EscreveLCD4
 10550  004D64  3A01               	swapf	??_EscreveLCD4^0,f,c
 10551  004D66  0EF0               	movlw	240
 10552  004D68  1601               	andwf	??_EscreveLCD4^0,f,c
 10553  004D6A  5083               	movf	131,w,c	;volatile
 10554  004D6C  0B0F               	andlw	15
 10555  004D6E  1001               	iorwf	??_EscreveLCD4^0,w,c
 10556  004D70  6E83               	movwf	131,c	;volatile
 10557  004D72                     
 10558                           ;MyIHM_1A.c: 902:     PORTEbits.RE1 = 1;
 10559  004D72  8284               	bsf	132,1,c	;volatile
 10560  004D74                     
 10561                           ;MyIHM_1A.c: 903:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 10562  004D74  0E06               	movlw	6
 10563  004D76                     u4487:
 10564  004D76  2EE8               	decfsz	wreg,f,c
 10565  004D78  D7FE               	bra	u4487
 10566  004D7A  D000               	nop2	
 10567  004D7C                     
 10568                           ;MyIHM_1A.c: 904:     PORTEbits.RE1 = 0;
 10569  004D7C  9284               	bcf	132,1,c	;volatile
 10570  004D7E                     
 10571                           ;MyIHM_1A.c: 905:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10572  004D7E  0E42               	movlw	66
 10573  004D80                     u4497:
 10574  004D80  2EE8               	decfsz	wreg,f,c
 10575  004D82  D7FE               	bra	u4497
 10576  004D84  D000               	nop2	
 10577  004D86  0012               	return		;funcret
 10578  004D88                     __end_of_EscreveLCD4:
 10579                           	callstack 0
 10580                           
 10581 ;; *************** function _Delay_ms *****************
 10582 ;; Defined at:
 10583 ;;		line 949 in file "MyIHM_1A.c"
 10584 ;; Parameters:    Size  Location     Type
 10585 ;;  milisegundos    2    0[COMRAM] unsigned int 
 10586 ;; Auto vars:     Size  Location     Type
 10587 ;;		None
 10588 ;; Return value:  Size  Location     Type
 10589 ;;                  1    wreg      void 
 10590 ;; Registers used:
 10591 ;;		wreg, status,2, status,0
 10592 ;; Tracked objects:
 10593 ;;		On entry : 0/0
 10594 ;;		On exit  : 0/0
 10595 ;;		Unchanged: 0/0
 10596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10597 ;;      Params:         2       0       0       0       0       0       0       0       0
 10598 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10599 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10600 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10601 ;;Total ram usage:        3 bytes
 10602 ;; Hardware stack levels used: 1
 10603 ;; This function calls:
 10604 ;;		Nothing
 10605 ;; This function is called by:
 10606 ;;		_showSobre
 10607 ;;		_main
 10608 ;; This function uses a non-reentrant model
 10609 ;;
 10610                           
 10611                           	psect	text47
 10612  004C1C                     __ptext47:
 10613                           	callstack 0
 10614  004C1C                     _Delay_ms:
 10615                           	callstack 29
 10616  004C1C                     
 10617                           ;MyIHM_1A.c: 950:    while(milisegundos > 0){
 10618  004C1C  EF1A  F026         	goto	l480
 10619  004C20                     l4246:
 10620                           
 10621                           ;MyIHM_1A.c: 951:        _delay((unsigned long)((1)*(8000000/4000.0)));
 10622  004C20  0E03               	movlw	3
 10623  004C22  6E03               	movwf	??_Delay_ms^0,c
 10624  004C24  0E98               	movlw	152
 10625  004C26                     u4507:
 10626  004C26  2EE8               	decfsz	wreg,f,c
 10627  004C28  D7FE               	bra	u4507
 10628  004C2A  2E03               	decfsz	??_Delay_ms^0,f,c
 10629  004C2C  D7FC               	bra	u4507
 10630  004C2E                     
 10631                           ;MyIHM_1A.c: 952:       milisegundos--;
 10632  004C2E  0601               	decf	Delay_ms@milisegundos^0,f,c
 10633  004C30  A0D8               	btfss	status,0,c
 10634  004C32  0602               	decf	(Delay_ms@milisegundos+1)^0,f,c
 10635  004C34                     l480:
 10636                           
 10637                           ;MyIHM_1A.c: 950:    while(milisegundos > 0){
 10638  004C34  5001               	movf	Delay_ms@milisegundos^0,w,c
 10639  004C36  1002               	iorwf	(Delay_ms@milisegundos+1)^0,w,c
 10640  004C38  A4D8               	btfss	status,2,c
 10641  004C3A  EF21  F026         	goto	u3691
 10642  004C3E  EF23  F026         	goto	u3690
 10643  004C42                     u3691:
 10644  004C42  EF10  F026         	goto	l4246
 10645  004C46                     u3690:
 10646  004C46  0012               	return		;funcret
 10647  004C48                     __end_of_Delay_ms:
 10648                           	callstack 0
 10649                           
 10650 ;; *************** function _InicializaPIC *****************
 10651 ;; Defined at:
 10652 ;;		line 767 in file "MyIHM_1A.c"
 10653 ;; Parameters:    Size  Location     Type
 10654 ;;		None
 10655 ;; Auto vars:     Size  Location     Type
 10656 ;;		None
 10657 ;; Return value:  Size  Location     Type
 10658 ;;                  1    wreg      void 
 10659 ;; Registers used:
 10660 ;;		wreg, status,2, status,0, cstack
 10661 ;; Tracked objects:
 10662 ;;		On entry : 0/0
 10663 ;;		On exit  : 0/0
 10664 ;;		Unchanged: 0/0
 10665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10666 ;;      Params:         0       0       0       0       0       0       0       0       0
 10667 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10668 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10669 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10670 ;;Total ram usage:        0 bytes
 10671 ;; Hardware stack levels used: 1
 10672 ;; Hardware stack levels required when called: 2
 10673 ;; This function calls:
 10674 ;;		_InicializaLCD4
 10675 ;; This function is called by:
 10676 ;;		_main
 10677 ;; This function uses a non-reentrant model
 10678 ;;
 10679                           
 10680                           	psect	text48
 10681  004B8C                     __ptext48:
 10682                           	callstack 0
 10683  004B8C                     _InicializaPIC:
 10684                           	callstack 28
 10685  004B8C                     
 10686                           ;MyIHM_1A.c: 769:     PORTB = 0b00000000;
 10687  004B8C  0E00               	movlw	0
 10688  004B8E  6E81               	movwf	129,c	;volatile
 10689                           
 10690                           ;MyIHM_1A.c: 770:     PORTD = 0b00000000;
 10691  004B90  0E00               	movlw	0
 10692  004B92  6E83               	movwf	131,c	;volatile
 10693                           
 10694                           ;MyIHM_1A.c: 771:     PORTE = 0b00000000;
 10695  004B94  0E00               	movlw	0
 10696  004B96  6E84               	movwf	132,c	;volatile
 10697                           
 10698                           ;MyIHM_1A.c: 772:     TRISB = 0b00011111;
 10699  004B98  0E1F               	movlw	31
 10700  004B9A  6E93               	movwf	147,c	;volatile
 10701                           
 10702                           ;MyIHM_1A.c: 773:     TRISD = 0b00000000;
 10703  004B9C  0E00               	movlw	0
 10704  004B9E  6E95               	movwf	149,c	;volatile
 10705                           
 10706                           ;MyIHM_1A.c: 774:     TRISE = 0b00000000;
 10707  004BA0  0E00               	movlw	0
 10708  004BA2  6E96               	movwf	150,c	;volatile
 10709                           
 10710                           ;MyIHM_1A.c: 776:     ADCON1 = 0b00001111;
 10711  004BA4  0E0F               	movlw	15
 10712  004BA6  6EC1               	movwf	193,c	;volatile
 10713  004BA8                     
 10714                           ;MyIHM_1A.c: 778:     InicializaLCD4();
 10715  004BA8  EC15  F027         	call	_InicializaLCD4	;wreg free
 10716  004BAC  0012               	return		;funcret
 10717  004BAE                     __end_of_InicializaPIC:
 10718                           	callstack 0
 10719                           
 10720 ;; *************** function _InicializaLCD4 *****************
 10721 ;; Defined at:
 10722 ;;		line 865 in file "MyIHM_1A.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;		None
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;		None
 10727 ;; Return value:  Size  Location     Type
 10728 ;;                  1    wreg      void 
 10729 ;; Registers used:
 10730 ;;		wreg, status,2, status,0, cstack
 10731 ;; Tracked objects:
 10732 ;;		On entry : 0/0
 10733 ;;		On exit  : 0/0
 10734 ;;		Unchanged: 0/0
 10735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10736 ;;      Params:         0       0       0       0       0       0       0       0       0
 10737 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10738 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10739 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10740 ;;Total ram usage:        1 bytes
 10741 ;; Hardware stack levels used: 1
 10742 ;; Hardware stack levels required when called: 1
 10743 ;; This function calls:
 10744 ;;		_ConfiguraLCD4
 10745 ;; This function is called by:
 10746 ;;		_InicializaPIC
 10747 ;; This function uses a non-reentrant model
 10748 ;;
 10749                           
 10750                           	psect	text49
 10751  004E2A                     __ptext49:
 10752                           	callstack 0
 10753  004E2A                     _InicializaLCD4:
 10754                           	callstack 28
 10755  004E2A                     
 10756                           ;MyIHM_1A.c: 867:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10757  004E2A  0E0D               	movlw	13
 10758  004E2C  6E03               	movwf	??_InicializaLCD4^0,c
 10759  004E2E  0EFC               	movlw	252
 10760  004E30                     u4517:
 10761  004E30  2EE8               	decfsz	wreg,f,c
 10762  004E32  D7FE               	bra	u4517
 10763  004E34  2E03               	decfsz	??_InicializaLCD4^0,f,c
 10764  004E36  D7FC               	bra	u4517
 10765  004E38                     
 10766                           ;MyIHM_1A.c: 868:     ConfiguraLCD4(0x30);
 10767  004E38  0E30               	movlw	48
 10768  004E3A  EC6D  F027         	call	_ConfiguraLCD4
 10769  004E3E                     
 10770                           ;MyIHM_1A.c: 869:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10771  004E3E  0E0D               	movlw	13
 10772  004E40  6E03               	movwf	??_InicializaLCD4^0,c
 10773  004E42  0EFC               	movlw	252
 10774  004E44                     u4527:
 10775  004E44  2EE8               	decfsz	wreg,f,c
 10776  004E46  D7FE               	bra	u4527
 10777  004E48  2E03               	decfsz	??_InicializaLCD4^0,f,c
 10778  004E4A  D7FC               	bra	u4527
 10779                           
 10780                           ;MyIHM_1A.c: 870:     ConfiguraLCD4(0x30);
 10781  004E4C  0E30               	movlw	48
 10782  004E4E  EC6D  F027         	call	_ConfiguraLCD4
 10783  004E52                     
 10784                           ;MyIHM_1A.c: 871:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10785  004E52  0E42               	movlw	66
 10786  004E54                     u4537:
 10787  004E54  2EE8               	decfsz	wreg,f,c
 10788  004E56  D7FE               	bra	u4537
 10789  004E58  D000               	nop2	
 10790  004E5A                     
 10791                           ;MyIHM_1A.c: 872:     ConfiguraLCD4(0x30);
 10792  004E5A  0E30               	movlw	48
 10793  004E5C  EC6D  F027         	call	_ConfiguraLCD4
 10794  004E60                     
 10795                           ;MyIHM_1A.c: 873:     ConfiguraLCD4(0x02);
 10796  004E60  0E02               	movlw	2
 10797  004E62  EC6D  F027         	call	_ConfiguraLCD4
 10798  004E66                     
 10799                           ;MyIHM_1A.c: 874:     ConfiguraLCD4(0x28);
 10800  004E66  0E28               	movlw	40
 10801  004E68  EC6D  F027         	call	_ConfiguraLCD4
 10802  004E6C                     
 10803                           ;MyIHM_1A.c: 875:     ConfiguraLCD4(0x06);
 10804  004E6C  0E06               	movlw	6
 10805  004E6E  EC6D  F027         	call	_ConfiguraLCD4
 10806  004E72                     
 10807                           ;MyIHM_1A.c: 876:     ConfiguraLCD4(0x0C);
 10808  004E72  0E0C               	movlw	12
 10809  004E74  EC6D  F027         	call	_ConfiguraLCD4
 10810  004E78                     
 10811                           ;MyIHM_1A.c: 877:     ConfiguraLCD4(0x01);
 10812  004E78  0E01               	movlw	1
 10813  004E7A  EC6D  F027         	call	_ConfiguraLCD4
 10814  004E7E  0012               	return		;funcret
 10815  004E80                     __end_of_InicializaLCD4:
 10816                           	callstack 0
 10817                           
 10818 ;; *************** function _ConfiguraLCD4 *****************
 10819 ;; Defined at:
 10820 ;;		line 880 in file "MyIHM_1A.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  INST            1    wreg     unsigned char 
 10823 ;; Auto vars:     Size  Location     Type
 10824 ;;  INST            1    1[COMRAM] unsigned char 
 10825 ;; Return value:  Size  Location     Type
 10826 ;;                  1    wreg      void 
 10827 ;; Registers used:
 10828 ;;		wreg, status,2, status,0
 10829 ;; Tracked objects:
 10830 ;;		On entry : 0/0
 10831 ;;		On exit  : 0/0
 10832 ;;		Unchanged: 0/0
 10833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10834 ;;      Params:         0       0       0       0       0       0       0       0       0
 10835 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10836 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10837 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10838 ;;Total ram usage:        2 bytes
 10839 ;; Hardware stack levels used: 1
 10840 ;; This function calls:
 10841 ;;		Nothing
 10842 ;; This function is called by:
 10843 ;;		_testarLCD
 10844 ;;		_InicializaLCD4
 10845 ;;		_EscreveLinhaLCD4
 10846 ;; This function uses a non-reentrant model
 10847 ;;
 10848                           
 10849                           	psect	text50
 10850  004EDA                     __ptext50:
 10851                           	callstack 0
 10852  004EDA                     _ConfiguraLCD4:
 10853                           	callstack 27
 10854                           
 10855                           ;incstack = 0
 10856                           ;ConfiguraLCD4@INST stored from wreg
 10857  004EDA  6E02               	movwf	ConfiguraLCD4@INST^0,c
 10858  004EDC                     
 10859                           ;MyIHM_1A.c: 881:     PORTEbits.RE2 = 0;
 10860  004EDC  9484               	bcf	132,2,c	;volatile
 10861  004EDE                     
 10862                           ;MyIHM_1A.c: 882:     PORTD = (PORTD & 0x0f)|(0xF0 & INST);
 10863  004EDE  C002  F001         	movff	ConfiguraLCD4@INST,??_ConfiguraLCD4
 10864  004EE2  0EF0               	movlw	240
 10865  004EE4  1601               	andwf	??_ConfiguraLCD4^0,f,c
 10866  004EE6  5083               	movf	131,w,c	;volatile
 10867  004EE8  0B0F               	andlw	15
 10868  004EEA  1001               	iorwf	??_ConfiguraLCD4^0,w,c
 10869  004EEC  6E83               	movwf	131,c	;volatile
 10870  004EEE                     
 10871                           ;MyIHM_1A.c: 883:     PORTEbits.RE1 = 1;
 10872  004EEE  8284               	bsf	132,1,c	;volatile
 10873  004EF0                     
 10874                           ;MyIHM_1A.c: 884:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 10875  004EF0  0E06               	movlw	6
 10876  004EF2                     u4547:
 10877  004EF2  2EE8               	decfsz	wreg,f,c
 10878  004EF4  D7FE               	bra	u4547
 10879  004EF6  D000               	nop2	
 10880  004EF8                     
 10881                           ;MyIHM_1A.c: 885:     PORTEbits.RE1 = 0;
 10882  004EF8  9284               	bcf	132,1,c	;volatile
 10883  004EFA                     
 10884                           ;MyIHM_1A.c: 886:         _delay((unsigned long)((5)*(8000000/4000.0)));
 10885  004EFA  0E0D               	movlw	13
 10886  004EFC  6E01               	movwf	??_ConfiguraLCD4^0,c
 10887  004EFE  0EFC               	movlw	252
 10888  004F00                     u4557:
 10889  004F00  2EE8               	decfsz	wreg,f,c
 10890  004F02  D7FE               	bra	u4557
 10891  004F04  2E01               	decfsz	??_ConfiguraLCD4^0,f,c
 10892  004F06  D7FC               	bra	u4557
 10893                           
 10894                           ;MyIHM_1A.c: 887:     PORTD = (PORTD & 0x0f)|(INST<<4);
 10895  004F08  C002  F001         	movff	ConfiguraLCD4@INST,??_ConfiguraLCD4
 10896  004F0C  3A01               	swapf	??_ConfiguraLCD4^0,f,c
 10897  004F0E  0EF0               	movlw	240
 10898  004F10  1601               	andwf	??_ConfiguraLCD4^0,f,c
 10899  004F12  5083               	movf	131,w,c	;volatile
 10900  004F14  0B0F               	andlw	15
 10901  004F16  1001               	iorwf	??_ConfiguraLCD4^0,w,c
 10902  004F18  6E83               	movwf	131,c	;volatile
 10903  004F1A                     
 10904                           ;MyIHM_1A.c: 888:     PORTEbits.RE1 = 1;
 10905  004F1A  8284               	bsf	132,1,c	;volatile
 10906  004F1C                     
 10907                           ;MyIHM_1A.c: 889:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 10908  004F1C  0E06               	movlw	6
 10909  004F1E                     u4567:
 10910  004F1E  2EE8               	decfsz	wreg,f,c
 10911  004F20  D7FE               	bra	u4567
 10912  004F22  D000               	nop2	
 10913  004F24                     
 10914                           ;MyIHM_1A.c: 890:     PORTEbits.RE1 = 0;
 10915  004F24  9284               	bcf	132,1,c	;volatile
 10916  004F26                     
 10917                           ;MyIHM_1A.c: 891:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10918  004F26  0E0D               	movlw	13
 10919  004F28  6E01               	movwf	??_ConfiguraLCD4^0,c
 10920  004F2A  0EFC               	movlw	252
 10921  004F2C                     u4577:
 10922  004F2C  2EE8               	decfsz	wreg,f,c
 10923  004F2E  D7FE               	bra	u4577
 10924  004F30  2E01               	decfsz	??_ConfiguraLCD4^0,f,c
 10925  004F32  D7FC               	bra	u4577
 10926  004F34  0012               	return		;funcret
 10927  004F36                     __end_of_ConfiguraLCD4:
 10928                           	callstack 0
 10929                           
 10930                           	psect	rparam
 10931  0000                     
 10932                           	psect	idloc
 10933                           
 10934                           ;Config register IDLOC0 @ 0x200000
 10935                           ;	unspecified, using default values
 10936  200000                     	org	2097152
 10937  200000  FF                 	db	255
 10938                           
 10939                           ;Config register IDLOC1 @ 0x200001
 10940                           ;	unspecified, using default values
 10941  200001                     	org	2097153
 10942  200001  FF                 	db	255
 10943                           
 10944                           ;Config register IDLOC2 @ 0x200002
 10945                           ;	unspecified, using default values
 10946  200002                     	org	2097154
 10947  200002  FF                 	db	255
 10948                           
 10949                           ;Config register IDLOC3 @ 0x200003
 10950                           ;	unspecified, using default values
 10951  200003                     	org	2097155
 10952  200003  FF                 	db	255
 10953                           
 10954                           ;Config register IDLOC4 @ 0x200004
 10955                           ;	unspecified, using default values
 10956  200004                     	org	2097156
 10957  200004  FF                 	db	255
 10958                           
 10959                           ;Config register IDLOC5 @ 0x200005
 10960                           ;	unspecified, using default values
 10961  200005                     	org	2097157
 10962  200005  FF                 	db	255
 10963                           
 10964                           ;Config register IDLOC6 @ 0x200006
 10965                           ;	unspecified, using default values
 10966  200006                     	org	2097158
 10967  200006  FF                 	db	255
 10968                           
 10969                           ;Config register IDLOC7 @ 0x200007
 10970                           ;	unspecified, using default values
 10971  200007                     	org	2097159
 10972  200007  FF                 	db	255
 10973                           
 10974                           	psect	config
 10975                           
 10976                           ;Config register CONFIG1L @ 0x300000
 10977                           ;	unspecified, using default values
 10978                           ;	PLL Prescaler Selection bits
 10979                           ;	PLLDIV = 0x0, unprogrammed default
 10980                           ;	System Clock Postscaler Selection bits
 10981                           ;	CPUDIV = 0x0, unprogrammed default
 10982                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10983                           ;	USBDIV = 0x0, unprogrammed default
 10984  300000                     	org	3145728
 10985  300000  00                 	db	0
 10986                           
 10987                           ;Config register CONFIG1H @ 0x300001
 10988                           ;	Oscillator Selection bits
 10989                           ;	FOSC = HS, HS oscillator (HS)
 10990                           ;	Fail-Safe Clock Monitor Enable bit
 10991                           ;	FCMEN = 0x0, unprogrammed default
 10992                           ;	Internal/External Oscillator Switchover bit
 10993                           ;	IESO = 0x0, unprogrammed default
 10994  300001                     	org	3145729
 10995  300001  0C                 	db	12
 10996                           
 10997                           ;Config register CONFIG2L @ 0x300002
 10998                           ;	unspecified, using default values
 10999                           ;	Power-up Timer Enable bit
 11000                           ;	PWRT = 0x1, unprogrammed default
 11001                           ;	Brown-out Reset Enable bits
 11002                           ;	BOR = 0x3, unprogrammed default
 11003                           ;	Brown-out Reset Voltage bits
 11004                           ;	BORV = 0x3, unprogrammed default
 11005                           ;	USB Voltage Regulator Enable bit
 11006                           ;	VREGEN = 0x0, unprogrammed default
 11007  300002                     	org	3145730
 11008  300002  1F                 	db	31
 11009                           
 11010                           ;Config register CONFIG2H @ 0x300003
 11011                           ;	Watchdog Timer Enable bit
 11012                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11013                           ;	Watchdog Timer Postscale Select bits
 11014                           ;	WDTPS = 0xF, unprogrammed default
 11015  300003                     	org	3145731
 11016  300003  1E                 	db	30
 11017                           
 11018                           ; Padding undefined space
 11019  300004                     	org	3145732
 11020  300004  FF                 	db	255
 11021                           
 11022                           ;Config register CONFIG3H @ 0x300005
 11023                           ;	CCP2 MUX bit
 11024                           ;	CCP2MX = 0x1, unprogrammed default
 11025                           ;	PORTB A/D Enable bit
 11026                           ;	PBADEN = 0x1, unprogrammed default
 11027                           ;	Low-Power Timer 1 Oscillator Enable bit
 11028                           ;	LPT1OSC = 0x0, unprogrammed default
 11029                           ;	MCLR Pin Enable bit
 11030                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 11031  300005                     	org	3145733
 11032  300005  83                 	db	131
 11033                           
 11034                           ;Config register CONFIG4L @ 0x300006
 11035                           ;	unspecified, using default values
 11036                           ;	Stack Full/Underflow Reset Enable bit
 11037                           ;	STVREN = 0x1, unprogrammed default
 11038                           ;	Single-Supply ICSP Enable bit
 11039                           ;	LVP = 0x1, unprogrammed default
 11040                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 11041                           ;	ICPRT = 0x0, unprogrammed default
 11042                           ;	Extended Instruction Set Enable bit
 11043                           ;	XINST = 0x0, unprogrammed default
 11044                           ;	Background Debugger Enable bit
 11045                           ;	DEBUG = 0x1, unprogrammed default
 11046  300006                     	org	3145734
 11047  300006  85                 	db	133
 11048                           
 11049                           ; Padding undefined space
 11050  300007                     	org	3145735
 11051  300007  FF                 	db	255
 11052                           
 11053                           ;Config register CONFIG5L @ 0x300008
 11054                           ;	unspecified, using default values
 11055                           ;	Code Protection bit
 11056                           ;	CP0 = 0x1, unprogrammed default
 11057                           ;	Code Protection bit
 11058                           ;	CP1 = 0x1, unprogrammed default
 11059                           ;	Code Protection bit
 11060                           ;	CP2 = 0x1, unprogrammed default
 11061                           ;	Code Protection bit
 11062                           ;	CP3 = 0x1, unprogrammed default
 11063  300008                     	org	3145736
 11064  300008  0F                 	db	15
 11065                           
 11066                           ;Config register CONFIG5H @ 0x300009
 11067                           ;	unspecified, using default values
 11068                           ;	Boot Block Code Protection bit
 11069                           ;	CPB = 0x1, unprogrammed default
 11070                           ;	Data EEPROM Code Protection bit
 11071                           ;	CPD = 0x1, unprogrammed default
 11072  300009                     	org	3145737
 11073  300009  C0                 	db	192
 11074                           
 11075                           ;Config register CONFIG6L @ 0x30000A
 11076                           ;	unspecified, using default values
 11077                           ;	Write Protection bit
 11078                           ;	WRT0 = 0x1, unprogrammed default
 11079                           ;	Write Protection bit
 11080                           ;	WRT1 = 0x1, unprogrammed default
 11081                           ;	Write Protection bit
 11082                           ;	WRT2 = 0x1, unprogrammed default
 11083                           ;	Write Protection bit
 11084                           ;	WRT3 = 0x1, unprogrammed default
 11085  30000A                     	org	3145738
 11086  30000A  0F                 	db	15
 11087                           
 11088                           ;Config register CONFIG6H @ 0x30000B
 11089                           ;	unspecified, using default values
 11090                           ;	Configuration Register Write Protection bit
 11091                           ;	WRTC = 0x1, unprogrammed default
 11092                           ;	Boot Block Write Protection bit
 11093                           ;	WRTB = 0x1, unprogrammed default
 11094                           ;	Data EEPROM Write Protection bit
 11095                           ;	WRTD = 0x1, unprogrammed default
 11096  30000B                     	org	3145739
 11097  30000B  E0                 	db	224
 11098                           
 11099                           ;Config register CONFIG7L @ 0x30000C
 11100                           ;	unspecified, using default values
 11101                           ;	Table Read Protection bit
 11102                           ;	EBTR0 = 0x1, unprogrammed default
 11103                           ;	Table Read Protection bit
 11104                           ;	EBTR1 = 0x1, unprogrammed default
 11105                           ;	Table Read Protection bit
 11106                           ;	EBTR2 = 0x1, unprogrammed default
 11107                           ;	Table Read Protection bit
 11108                           ;	EBTR3 = 0x1, unprogrammed default
 11109  30000C                     	org	3145740
 11110  30000C  0F                 	db	15
 11111                           
 11112                           ;Config register CONFIG7H @ 0x30000D
 11113                           ;	unspecified, using default values
 11114                           ;	Boot Block Table Read Protection bit
 11115                           ;	EBTRB = 0x1, unprogrammed default
 11116  30000D                     	org	3145741
 11117  30000D  40                 	db	64
 11118                           tosu	equ	0xFFF
 11119                           tosh	equ	0xFFE
 11120                           tosl	equ	0xFFD
 11121                           stkptr	equ	0xFFC
 11122                           pclatu	equ	0xFFB
 11123                           pclath	equ	0xFFA
 11124                           pcl	equ	0xFF9
 11125                           tblptru	equ	0xFF8
 11126                           tblptrh	equ	0xFF7
 11127                           tblptrl	equ	0xFF6
 11128                           tablat	equ	0xFF5
 11129                           prodh	equ	0xFF4
 11130                           prodl	equ	0xFF3
 11131                           indf0	equ	0xFEF
 11132                           postinc0	equ	0xFEE
 11133                           postdec0	equ	0xFED
 11134                           preinc0	equ	0xFEC
 11135                           plusw0	equ	0xFEB
 11136                           fsr0h	equ	0xFEA
 11137                           fsr0l	equ	0xFE9
 11138                           wreg	equ	0xFE8
 11139                           indf1	equ	0xFE7
 11140                           postinc1	equ	0xFE6
 11141                           postdec1	equ	0xFE5
 11142                           preinc1	equ	0xFE4
 11143                           plusw1	equ	0xFE3
 11144                           fsr1h	equ	0xFE2
 11145                           fsr1l	equ	0xFE1
 11146                           bsr	equ	0xFE0
 11147                           indf2	equ	0xFDF
 11148                           postinc2	equ	0xFDE
 11149                           postdec2	equ	0xFDD
 11150                           preinc2	equ	0xFDC
 11151                           plusw2	equ	0xFDB
 11152                           fsr2h	equ	0xFDA
 11153                           fsr2l	equ	0xFD9
 11154                           status	equ	0xFD8

Data Sizes:
    Strings     955
    Constant    0
    Data        286
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    125     138
    BANK1           256    164     250
    BANK2           256      0     227
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> testarCoolerPotUpDown@msg(BANK0[16]), testarCoolerPot@msg(BANK0[16]), testarBuzzerPWM@msg(BANK0[16]), testarRelays@msg1(BANK0[16]), 
		 -> testarRelays@msg2(BANK0[16]), testarDisplay2@sconta(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_18(CODE[18]), STR_16(CODE[18]), STR_15(CODE[18]), STR_12(CODE[13]), 
		 -> STR_11(CODE[13]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_7(CODE[19]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_18(CODE[18]), STR_16(CODE[18]), STR_15(CODE[18]), STR_12(CODE[13]), 
		 -> STR_11(CODE[13]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_7(CODE[19]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_18(CODE[18]), STR_16(CODE[18]), STR_15(CODE[18]), STR_12(CODE[13]), 
		 -> STR_11(CODE[13]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_7(CODE[19]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> testarCoolerPotUpDown@msg(BANK0[16]), testarCoolerPot@msg(BANK0[16]), testarBuzzerPWM@msg(BANK0[16]), testarRelays@msg1(BANK0[16]), 
		 -> testarRelays@msg2(BANK0[16]), testarDisplay2@sconta(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1169_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> testarCoolerPotUpDown@msg(BANK0[16]), testarCoolerPot@msg(BANK0[16]), testarBuzzerPWM@msg(BANK0[16]), testarRelays@msg1(BANK0[16]), 
		 -> testarRelays@msg2(BANK0[16]), testarDisplay2@sconta(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> testarCoolerPotUpDown@msg(BANK0[16]), testarCoolerPot@msg(BANK0[16]), testarBuzzerPWM@msg(BANK0[16]), testarRelays@msg1(BANK0[16]), 
		 -> testarRelays@msg2(BANK0[16]), testarDisplay2@sconta(BANK0[16]), 

    EscreveLinhaLCD4@FRASE	PTR unsigned char  size(2) Largest target is 119
		 -> STR_73(CODE[17]), STR_72(CODE[17]), STR_71(CODE[17]), STR_70(CODE[17]), 
		 -> STR_69(CODE[17]), STR_68(CODE[17]), STR_67(CODE[17]), STR_66(CODE[17]), 
		 -> STR_65(CODE[17]), STR_64(CODE[17]), STR_63(CODE[17]), STR_62(CODE[17]), 
		 -> STR_61(CODE[18]), STR_60(CODE[18]), STR_59(CODE[17]), STR_58(CODE[17]), 
		 -> showSobre@sobre(BANK0[119]), STR_57(CODE[18]), STR_56(CODE[18]), STR_55(CODE[17]), 
		 -> STR_54(CODE[17]), STR_53(CODE[17]), STR_52(CODE[17]), STR_51(CODE[17]), 
		 -> STR_50(CODE[17]), STR_49(CODE[17]), STR_48(CODE[17]), STR_47(CODE[17]), 
		 -> STR_46(CODE[17]), STR_45(CODE[17]), STR_44(CODE[17]), STR_43(CODE[17]), 
		 -> STR_42(CODE[17]), STR_41(CODE[17]), STR_40(CODE[17]), STR_39(CODE[17]), 
		 -> STR_38(CODE[17]), STR_37(CODE[17]), STR_36(CODE[17]), STR_35(CODE[17]), 
		 -> STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), STR_31(CODE[17]), 
		 -> STR_30(CODE[17]), STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[17]), 
		 -> STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[17]), STR_23(CODE[17]), 
		 -> STR_22(CODE[17]), STR_21(CODE[18]), STR_20(CODE[18]), STR_19(CODE[18]), 
		 -> testarCoolerPotUpDown@msg(BANK0[16]), STR_17(CODE[18]), testarCoolerPot@msg(BANK0[16]), testarBuzzerPWM@msg(BANK0[16]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), testarRelays@msg1(BANK0[16]), testarRelays@msg2(BANK0[16]), 
		 -> testarDisplay2@sconta(BANK0[16]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _testarRelays->_sprintf
    _subMenuLCD->_testarLCD
    _testarLCD->_EscreveLinhaLCD4
    _testarDisplay2->_sprintf
    _testarDisplay1->_EscreveLinhaLCD4
    _testarCoolerPotUpDown->_sprintf
    _testarCoolerPot->_sprintf
    _setaPWM1->___lwdiv
    ___fltol->___flmul
    ___flmul->___xxtofl
    _testarBuzzerPWM->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _miniMidi->_setaFreqPWM
    _setaPWM2->___lwdiv
    _setaFreqPWM->___aldiv
    _showSobre->_EscreveLinhaLCD4
    _EscreveLinhaLCD4->___wmul
    _InicializaPIC->_InicializaLCD4
    _InicializaLCD4->_ConfiguraLCD4

Critical Paths under _main in BANK0

    _main->_showSobre
    _subMenuRelays->_testarRelays
    _testarRelays->_sprintf
    _subMenuDisplay7Seg->_testarDisplay2
    _testarDisplay2->_sprintf
    _subMenuCooler->_testarCoolerPot
    _testarCoolerPotUpDown->_sprintf
    _testarCoolerPot->_sprintf
    _subMenuBuzzer->_testarBuzzerPWM
    _testarBuzzerPWM->_sprintf

Critical Paths under _main in BANK1

    _subMenuBuzzer->_miniMidi

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  156635
                                            121 BANK0      4     4      0
                           _Delay_ms
                   _EscreveLinhaLCD4
                      _InicializaPIC
                          _showSobre
                      _subMenuBuzzer
                      _subMenuCooler
                 _subMenuDisplay7Seg
                         _subMenuLCD
                      _subMenuRelays
 ---------------------------------------------------------------------------------
 (1) _subMenuRelays                                        4     4      0   19864
                                             43 BANK0      4     4      0
                   _EscreveLinhaLCD4
                      _capturaUpDown
                       _testarRelays
 ---------------------------------------------------------------------------------
 (2) _testarRelays                                        35    35      0   13764
                                              8 BANK0     35    35      0
                   _EscreveLinhaLCD4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _subMenuLCD                                           4     4      0   11930
                                             15 COMRAM     4     4      0
                   _EscreveLinhaLCD4
                      _capturaUpDown
                          _testarLCD
 ---------------------------------------------------------------------------------
 (2) _testarLCD                                            7     7      0    5830
                                              9 COMRAM     6     6      0
                      _ConfiguraLCD4
                        _EscreveLCD4
                   _EscreveLinhaLCD4
 ---------------------------------------------------------------------------------
 (1) _subMenuDisplay7Seg                                   4     4      0   30055
                                             36 BANK0      4     4      0
                   _EscreveLinhaLCD4
                      _capturaUpDown
                     _testarDisplay1
                     _testarDisplay2
 ---------------------------------------------------------------------------------
 (2) _testarDisplay2                                      32    32      0   18304
                                              8 BANK0     28    28      0
                        _Escreve7Seg
                   _EscreveLinhaLCD4
                            ___lwdiv
                            ___lwmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _testarDisplay1                                       8     8      0    5651
                                              9 COMRAM     7     7      0
                   _EscreveLinhaLCD4
 ---------------------------------------------------------------------------------
 (1) _subMenuCooler                                        4     4      0   51611
                                             38 BANK0      4     4      0
                   _EscreveLinhaLCD4
                      _capturaUpDown
                    _testarCoolerPot
              _testarCoolerPotUpDown
 ---------------------------------------------------------------------------------
 (2) _testarCoolerPotUpDown                               29    29      0   21587
                                              8 BANK0     27    27      0
                        _Escreve7Seg
                   _EscreveLinhaLCD4
                            ___awdiv
                            ___awmod
                            ___lwdiv
                      _inicializaPWM
                    _inicializaTimer
                        _setaFreqPWM
                           _setaPWM1
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _testarCoolerPot                                     30    30      0   23924
                                              8 BANK0     30    30      0
                        _Escreve7Seg
                   _EscreveLinhaLCD4
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
                           ___xxtofl
                      _inicializaPWM
                    _inicializaTimer
                        _setaFreqPWM
                           _setaPWM1
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _setaPWM1                                             5     5      0    2176
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     919
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _Escreve7Seg                                          5     3      2    2194
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _subMenuBuzzer                                        4     4      0   30459
                                             25 BANK0      4     4      0
                   _EscreveLinhaLCD4
                      _capturaUpDown
                           _miniMidi
                    _testarBuzzerPWM
 ---------------------------------------------------------------------------------
 (2) _testarBuzzerPWM                                     17    17      0   15981
                                              8 BANK0     17    17      0
                   _EscreveLinhaLCD4
                      _inicializaPWM
                    _inicializaTimer
                        _setaFreqPWM
                           _setaPWM2
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             16    10      6    7839
                                             89 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6272
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5907
                                             63 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _miniMidi                                           165   165      0    8378
                                             16 COMRAM     1     1      0
                                              0 BANK1    164   164      0
                   _EscreveLinhaLCD4
                       _aguardaTimer
                      _inicializaPWM
                    _inicializaTimer
                        _resetaTimer
                        _setaFreqPWM
                           _setaPWM2
 ---------------------------------------------------------------------------------
 (3) _setaPWM2                                             5     5      0    1469
                                              7 COMRAM     5     5      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1378
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _setaFreqPWM                                          2     0      2     930
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) _resetaTimer                                          4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _inicializaTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _inicializaPWM                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _aguardaTimer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _capturaUpDown                                        2     0      2     404
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _showSobre                                          121   121      0    6745
                                              0 BANK0    121   121      0
                           _Delay_ms
                   _EscreveLinhaLCD4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     707
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _EscreveLinhaLCD4                                     3     1      2    5649
                                              6 COMRAM     3     1      2
                      _ConfiguraLCD4
                        _EscreveLCD4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _EscreveLCD4                                          2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             3     1      2     251
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _InicializaPIC                                        0     0      0      44
                     _InicializaLCD4
 ---------------------------------------------------------------------------------
 (2) _InicializaLCD4                                       1     1      0      44
                                              2 COMRAM     1     1      0
                      _ConfiguraLCD4
 ---------------------------------------------------------------------------------
 (4) _ConfiguraLCD4                                        2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms
   _EscreveLinhaLCD4
     _ConfiguraLCD4
     _EscreveLCD4
     ___wmul (ARG)
   _InicializaPIC
     _InicializaLCD4
       _ConfiguraLCD4
   _showSobre
     _Delay_ms
     _EscreveLinhaLCD4
     ___wmul
   _subMenuBuzzer
     _EscreveLinhaLCD4
     _capturaUpDown
     _miniMidi
       _EscreveLinhaLCD4
       _aguardaTimer
       _inicializaPWM
       _inicializaTimer
       _resetaTimer
       _setaFreqPWM
         ___aldiv
       _setaPWM2
         ___lwdiv
     _testarBuzzerPWM
       _EscreveLinhaLCD4
       _inicializaPWM
       _inicializaTimer
       _setaFreqPWM
       _setaPWM2
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
   _subMenuCooler
     _EscreveLinhaLCD4
     _capturaUpDown
     _testarCoolerPot
       _Escreve7Seg
       _EscreveLinhaLCD4
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___lwdiv
       ___lwmod
       ___xxtofl
       _inicializaPWM
       _inicializaTimer
       _setaFreqPWM
       _setaPWM1
         ___lwdiv
         ___wmul
       _sprintf
     _testarCoolerPotUpDown
       _Escreve7Seg
       _EscreveLinhaLCD4
       ___awdiv
       ___awmod
       ___lwdiv
       _inicializaPWM
       _inicializaTimer
       _setaFreqPWM
       _setaPWM1
       _sprintf
   _subMenuDisplay7Seg
     _EscreveLinhaLCD4
     _capturaUpDown
     _testarDisplay1
       _EscreveLinhaLCD4
     _testarDisplay2
       _Escreve7Seg
       _EscreveLinhaLCD4
       ___lwdiv
       ___lwmod
       _sprintf
   _subMenuLCD
     _EscreveLinhaLCD4
     _capturaUpDown
     _testarLCD
       _ConfiguraLCD4
       _EscreveLCD4
       _EscreveLinhaLCD4
   _subMenuRelays
     _EscreveLinhaLCD4
     _capturaUpDown
     _testarRelays
       _EscreveLinhaLCD4
       _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E3       9       88.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A4      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7D      8A       5       86.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C6      20        0.0%
DATA                 0      0     2C6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Sep 21 02:03:19 2021

                            l90 4BCE                              l84 4B66                              l93 4B64  
                            l87 4B74                              l96 50D2                              l99 4ED8  
                  ___awdiv@sign 0006             ___wmul@multiplicand 0003                ?_inicializaTimer 0001  
                           l102 4C1A                             l110 539C                             l105 4B8A  
                           l204 7012                             l116 6960                             l132 633C  
                           l125 62F0                             l222 4DAC                             l302 6A80  
                           l150 6444                             l126 632C                             l231 4DD6  
                           l223 4D9A                             l119 696E                             l143 63B4  
                           l127 6300                             l216 5B1E                             l160 5044  
                           l312 6B04                             l136 6368                             l400 7364  
                           l137 63A4                             l226 4DCE                             l170 6C0A  
                           l138 6378                             l219 5B3E                             l163 5058  
                           l315 6B64                             l307 6AC2                             l331 572C  
                           l147 6436                             l411 73E4                             l228 4DC0  
                           l172 6C18                             l252 5D60                             l244 5CDC  
                           l157 52F4                             l325 56EC                             l421 7464  
                           l166 5066                             l182 6DB4                             l190 6F98  
                           l350 5F0A                             l238 5C98                             l334 576A  
                           l262 5DAE                             l406 73A4                             l175 6D98  
                           l600 65CC                             l360 5F8C                             l344 5EC8  
                           l416 7424                             l177 6DA6                             l249 5D18  
                           l273 5E32                             l442 4D86                             l450 5256  
                           l426 74A4                             l195 6FDC                             l363 5FDC  
                           l355 5F4C                             l436 4E7E                             l292 69FC  
                           l276 5E7A                             l268 5DF0                             l613 6140  
                           l382 4BAC                             l286 69BC                             l454 6148  
                           l439 4F34                             l375 5824                             l199 6FFE  
                           l480 4C34                             l456 6154                             l297 6A3E  
                           l457 6160                             l458 616C                             l730 544C  
                           l394 7328                             l483 4C46                             l379 584A  
                           l459 6178                             l388 7312                             l565 5C4A  
                           l477 62C2                             l717 5510                             l389 7300  
                           l486 4BF4                   _InicializaPIC 4B8C                             l783 5A34  
                           l984 5146                             l977 513E                             l994 4FFA  
                           l987 4FF2              testarBuzzerPWM@msg 0068                             _PR2 000FCB  
            testarBuzzerPWM@pwm 0078                             _abs 4CB4                             _pad 5512  
                  ___awmod@sign 0006                             prod 000FF3                             wreg 000FE8  
                 ??_EscreveLCD4 0001                   ??_Escreve7Seg 0003                    ___flmul@aexp 0020  
                  ___flmul@bexp 0021                  testarLCD@l_565 000E                    ___flmul@sign 001B  
                  ___flmul@temp 0026                    ___flmul@prod 0022                    ___fltol@exp1 0031  
                          l1100 78DC                            l1110 7B38                            l1104 7C40  
                          l1202 75D4                            l1107 7AD2                            ?_abs 0013  
                          l1204 75DC                            l1117 7C02                            l1109 7B4A  
                          l1141 6624                            l1222 7816                            l1144 6780  
                          l1241 728C                            l1155 6718                            l3100 657C  
                          l1252 4CEA                            l1236 7110                            l1164 4E28  
                          l1148 66BC                            l3102 658C                            l3110 5FE2  
                _InicializaLCD4 4E2A                            l1255 4CF2                            l1191 5558  
                          l1247 4F8E                            l3104 65AC                            l3120 6042  
                          l3112 5FF0                            l3040 5624                            l3032 55D8  
                          l3200 76AA                            l1248 4F96                            l3130 60B8  
                          l3122 6060                            l3114 6010                            l3042 565A  
                          l3034 55EA                            l3050 4D12                            l1194 559A  
                          l3210 7766                            l3202 76B0                            l4010 5266  
                          l1267 56A0                            l1275 4D36                            l3140 6120  
                          l3132 60D8                            l3124 6068                            l3116 6014  
                          l3108 5FDE                            l3036 55FC                            l3052 4D16  
                          l1284 4C7C                            l3060 4C70                            l1196 55D6  
                          l3220 77B8                            l3212 7780                            l3204 7714  
                          l3300 727A                            l4100 6CE4                            l4020 5282  
                          l4012 5274                            l3070 6478                            l3134 60EA  
                          l3126 607C                            l3118 6022                            l1278 4B56  
                          l3038 5606                            l3046 4CF4                            l3054 4C48  
                          l3150 5544                            l3222 77CA                            l3206 772E  
                          l3214 7790                            l4110 6D34                            l4102 6CE8  
                          l4022 5288                            l4014 527A                            l4006 5258  
                          l3320 4EF8                            l3312 4EDC                            l4200 5A5C  
                          l3080 64BA                            l3072 647C                            l3064 6446  
                          l3128 608A                            l3136 60F0                            l3048 4D00  
                          l3056 4C54                            l3160 55AA                            l3152 5550  
                          l3144 5512                            l3224 77D6                            l3216 77A2  
                          l3208 774C                            l3240 705C                            l3232 7014  
                          l4112 6D42                            l4104 6CF4                            l4040 52DC  
                          l4024 528C                            l4008 5258                            l3330 4F26  
                          l3322 4EFA                            l3314 4EDE                            l3410 50FE  
                          l3402 50D4                            l4210 5A8E                            l4202 5A6E  
                          l3090 6514                            l3082 64D8                            l3074 648A  
                          l3066 644A                            l3138 6100                            l3058 4C58  
                          l3162 55BE                            l3154 5564                            l3146 5522  
                          l3226 77DE                            l3218 77B2                            l3170 7534  
                          l3250 7086                            l3242 7068                            l3234 7038  
                          l4050 5052                            l4042 5000                            l4114 6D62  
                          l4106 6D02                            l4130 6DE4                            l4122 6DB6  
                          l4034 52B6                            l4026 52A8                            l3324 4F1A  
                          l3316 4EEE                            l3340 4D56                            l3332 4D3A  
                          l3420 5132                            l3412 510C                            l3404 50DC  
                          l4220 5AB8                            l4212 5A9A                            l4204 5A84  
                          l3092 6542                            l3084 64E0                            l3076 64AA  
                          l3068 6458                            l3156 5578                            l3148 5536  
                          l3228 77EE                            l3180 75AE                            l3172 7554  
                          l3244 706C                            l3236 7046                            l3500 4DF2  
                          l4044 5014                            l4116 6D74                            l4108 6D14  
                          l4060 6BB0                            l4052 6B6A                            l4140 6E3C  
                          l4132 6DF6                            l4124 6DD0                            l4036 52BC  
                          l4028 52AE                            l3326 4F1C                            l3318 4EF0  
                          l3350 4D7E                            l3342 4D58                            l3334 4D3C  
                          l3422 5138                            l3414 5112                            l3406 50EE  
                          l4230 5B0A                            l4222 5AD6                            l4214 5AA4  
                          l4206 5A86                            l3094 6562                            l3086 64F4  
                          l3078 64AE                            l3166 4CB4                            l3158 557C  
                          l3190 760A                            l3182 75C8                            l3174 757C  
                          l3270 7120                            l3262 709E                            l3254 708E  
                          l3246 707E                            l3238 7058                            l3430 4F72  
                          l3502 4DFA                            l4046 501C                            l3510 6184  
                          l4118 6D82                            l4070 6BC8                            l4062 6BB8  
                          l4054 6B74                            l4150 6EAE                            l4142 6E44  
                          l4134 6E12                            l4126 6DD4                            l4038 52C0  
                          l4302 5D62                            l3328 4F24                            l3344 4D72  
                          l3336 4D4C                            l3352 4BD0                            l4240 4D96  
                          l3432 4B66                            l3440 4BC4                            l3360 5B44  
                          l3416 5128                            l3408 50F6                            l4224 5AE6  
                          l4216 5AA8                            l4232 5B10                            l4208 5A8A  
                          l3096 6564                            l3088 6502                            l3168 4CCE  
                          l3192 7612                            l3184 75E4                            l3176 759C  
                          l3272 7122                            l3424 4F36                            l3504 4E16  
                          l4048 5036                            l3520 61DE                            l3512 61BE  
                          l3600 7926                            l4080 6BDC                            l4072 6BCC  
                          l4064 6BBC                            l4056 6B94                            l4160 6EFE  
                          l4152 6EB2                            l4144 6E5E                            l4136 6E20  
                          l4128 6DD8                            l4400 56DE                            l4320 5DFE  
                          l4312 5DBC                            l4304 5D6C                            l4250 4E2A  
                          l3346 4D74                            l3338 4D4E                            l3354 4BEC  
                          l4242 4DBA                            l3442 4BC8                            l3434 4BAE  
                          l3370 5B84                            l3362 5B52                            l3418 5130  
                          l4234 5B2C                            l4226 5AE8                            l4218 5AB4  
                          l3098 6576                            l3194 761C                            l3186 75F6  
                          l3178 75AC                            l3282 71EA                            l3274 7146  
                          l3266 70AA                            l3258 7096                            l3426 4F3E  
                          l3530 6206                            l3522 61E6                            l3514 61C6  
                          l3610 7978                            l3602 793C                            l3450 506A  
                          l4090 6C20                            l4082 6BE8                            l4074 6BD0  
                          l4066 6BC0                            l4058 6BA2                            l4162 6F0C  
                          l4154 6EBE                            l4170 6F5A                            l4146 6E7A  
                          l4138 6E2E                            l4322 5E08                            l4314 5DC6  
                          l4306 5D84                            l4330 5E44                            l4260 4E60  
                          l4252 4E38                            l4244 4C1C                            l3348 4D7C  
                          l3444 4BCC                            l3436 4BB8                            l3380 5BC2  
                          l3372 5B88                            l3364 5B62                            l3460 4E82  
                          l4236 5B38                            l4228 5B04                            l3196 7622  
                          l3188 7604                            l3284 720E                            l3292 723C  
                          l3276 716A                            l3268 70FE                            l3428 4F4C  
                          l4340 6992                            l3532 620E                            l3524 61EE  
                          l3516 61CE                            l3508 6144                            l3620 79BE  
                          l3612 7986                            l3604 7948                            l3452 5088  
                          l4092 6C7A                            l4084 6BFA                            l4076 6BD4  
                          l4068 6BC4                            l3700 5486                            l4180 6FB2  
                          l4172 6F70                            l4164 6F2C                            l4156 6ECC  
                          l4148 6E94                            l4420 5E7C                            l4404 56FA  
                          l4324 5E24                            l4316 5DE2                            l4308 5DA0  
                          l4500 72EC                            l4262 4E66                            l4254 4E3E  
                          l4246 4C20                            l4238 4D88                            l3446 4B5E  
                          l3438 4BBC                            l3390 5C0A                            l3382 5BD0  
                          l3374 5B98                            l3366 5B66                            l3358 5B40  
                          l3470 4BF6                            l3462 4E8E                            l3198 76A4  
                          l3294 724A                            l3286 721C                            l3278 71B2  
                          l4350 69EE                            l4342 69AE                            l3534 6216  
                          l3526 61F6                            l3518 61D6                            l3542 622E  
                          l3630 7A2C                            l3622 79D8                            l3614 7992  
                          l3606 7960                            l3454 50A4                            l4094 6C94  
                          l4086 6BFC                            l4078 6BD8                            l3710 54BE  
                          l3702 548E                            l4182 6FCE                            l4174 6F8A  
                          l4166 6F3E                            l4158 6EDE                            l4430 5ED6  
                          l4422 5E86                            l4270 5C4C                            l4406 5702  
                          l4414 573E                            l4502 72FA                            l4264 4E6C  
                          l4256 4E52                            l4248 4C2E                            l3480 4B86  
                          l3472 4B76                            l3448 4B62                            l3392 5C14  
                          l3384 5BDA                            l3376 5BAE                            l3368 5B74  
                          l3464 4EAA                            l3288 7230                            l4336 6970  
                          l3536 621E                            l3528 61FE                            l3544 62B0  
                          l3640 7AC2                            l3632 7A56                            l3624 79E8  
                          l3616 79A2                            l3608 796C                            l3560 7832  
                          l3800 59F4                            l3456 50AC                            l4096 6CB0  
                          l4088 6C08                            l3720 54EA                            l3712 54C4  
                          l3704 54A0                            l4192 700C                            l4168 6F4C  
                          l4440 5F22                            l4432 5EE0                            l4424 5E9E  
                          l4280 5CA6                            l4272 5C56                            l4408 571E  
                          l4520 73B2                            l4512 7372                            l4504 7320  
                          l4266 4E72                            l4258 4E5A                            l3490 51FE  
                          l3482 51CC                            l3474 4B7C                            l3386 5BF8  
                          l3378 5BB6                            l3394 5C1A                            l3466 4EB2  
                          l4194 5A36                            l3298 7256                            l4370 6A8E  
                          l4362 6A4C                            l4354 6A0A                            l4346 69CA  
                          l4338 697A                            l3546 62C0                            l3538 6226  
                          l3650 7B02                            l3642 7AD0                            l3634 7A8C  
                          l3626 7A04                            l3618 79AE                            l3570 786A  
                          l3562 7834                            l3802 5A04                            l3810 4F98  
                          l3458 50C4                            l4098 6CCA                            l3714 54DA  
                          l3706 54A8                            l3722 54F0                            l3730 539E  
                          l4186 6FEA                            l4178 6FA6                            l4450 5F7E  
                          l4442 5F3E                            l4434 5EFC                            l4426 5EBA  
                          l4290 5D0A                            l4282 5CAE                            l4274 5C6E  
                          l4530 73FA                            l4522 73BA                            l4514 737A  
                          l4506 733A                            l4268 4E78                            l3492 5222  
                          l3484 51DC                            l3476 4B80                            l3396 5C2A  
                          l3388 5C08                            l3468 4ECA                            l4196 5A40  
                          l4380 6ADA                            l4372 6A98                            l4364 6A56  
                          l4356 6A14                            l4348 69D2                            l3660 7B74  
                          l3652 7B30                            l3644 7AE2                            l3636 7A9A  
                          l3628 7A10                            l3580 7896                            l3572 787A  
                          l3564 7844                            l3556 7818                            l3804 5A14  
                          l3820 4FDE                            l3812 4FAA                            l3724 5500  
                          l3716 54E2                            l3708 54B0                            l3740 53CA  
                          l3732 53A2                            l4188 6FF0                            l3900 5366  
                          l4284 5CCA                            l4276 5C8A                            l4540 7456  
                          l4532 7416                            l4524 73D6                            l4516 7396  
                          l4508 7356                            l3494 5226                            l3486 51E2  
                          l4470 57EC                            l4462 576C                            l3478 4B82  
                          l3398 5C3A                            l4198 5A4E                            l4382 6AF6  
                          l4374 6AB4                            l4366 6A72                            l4358 6A30  
                          l3670 7BEA                            l3662 7B9E                            l3646 7AF0  
                          l3638 7AB8                            l3590 78EC                            l3582 78A6  
                          l3574 7880                            l3566 7854                            l3558 7824  
                          l3806 5A24                            l3822 4FE6                            l3814 4FB2  
                          l3830 65EE                            l3726 5508                            l3718 54E4  
                          l3750 5402                            l3742 53D2                            l3734 53B0  
                          l4446 5F5A                            l4438 5F18                            l3902 5368  
                          l3910 6782                            l4286 5CD8                            ?_pad 0011  
                          l4480 4B8C                            l3488 51F4                            l4472 5806  
                          l4464 577E                            l3496 4DD8                            l4800 6242  
                          l3672 7C06                            l3680 7C2C                            l3656 7B5A  
                          l3664 7BA2                            l3648 7AF4                            l3592 78FC  
                          l3584 78B6                            l3576 7886                            l3568 7864  
                          l3824 4FEC                            l3816 4FBA                            l3840 6666  
                          l3832 6634                            l3760 543C                            l3752 5418  
                          l3744 53E4                            l3736 53B8                            l4448 5F62  
                          l4456 5F9E                            l3904 536A                            l3920 67C4  
                          l3912 679E                            l4288 5CEE                            l4296 5D2A  
                          l4552 74B2                            l4544 7472                            l4536 7432  
                          l4528 73F2                            l4560 74D2                            l4482 4BA8  
                          l4474 580E                            l4466 578C                            l3498 4DEA  
                          l4802 6B2E                            l4378 6AD0                            l3682 7C30  
                          l3674 7C16                            l3666 7BBC                            l3658 7B66  
                          l3586 78C6                            l3578 7894                            l3818 4FC8  
                          l3850 66EE                            l3842 6672                            l3834 664A  
                          l3826 65D0                            l3690 5460                            l3762 5444  
                          l3754 5420                            l3746 53EC                            l3738 53BC  
                          l3906 5378                            l3930 680C                            l3922 67C8  
                          l3914 67B8                            l4394 56A2                            l4554 74BA  
                          l4546 747A                            l4538 743A                            l4490 72AA  
                          l4476 581C                            l4468 57E0                            l4804 70D0  
                          l4388 6B16                            l3676 7C24                            l3668 7BD0  
                          l3596 7910                            l3588 78CC                            l3780 599A  
                          l3772 595A                            l3860 672C                            l3852 66FA  
                          l3844 66A4                            l3828 65E0                            l3692 5468  
                          l3756 5426                            l3748 53F4                            l3908 5386  
                          l3940 6892                            l3932 6826                            l3924 67CC  
                          l3916 67BC                            l4396 56AA                            l4556 74C6  
                          l4548 7496                            l4492 72B8                            l4484 728E  
                          l4478 5832                            l3678 7C26                            l3598 791C  
                          l3790 59CA                            l3782 59A8                            l3774 5984  
                          l3766 5930                            l3862 6750                            l3854 6708  
                          l3846 66A6                            l3838 665E                            l3694 546C  
                          l3686 544E                            l3758 542C                            l3950 68D8  
                          l3942 68A0                            l3934 6842                            l3926 67D6  
                          l3918 67C0                            l4398 56C2                            l4494 72C4  
                          l4486 7292                            l3792 59D4                            l3776 5986  
                          l3768 5946                            l3864 6760                            l3856 6726  
                          l3848 66B2                            l3696 547A                            l3688 5452  
                          l3880 5324                            l3872 52F6                            l3960 692A  
                          l3952 68EA                            l3944 68AA                            l3936 685C  
                          l3928 67F0                            l4496 72D2                            l4488 729C  
                          l3778 5996                            l3866 676E                            l3858 6728  
                          l3698 5482                            l3890 5346                            l3882 533A  
                          l3874 52F6                            l3970 6952                            l3962 692C  
                          l3954 68F8                            l3946 68B8                            l3938 6876  
                          l4498 72E0                            l3788 59C0                            l3868 6770  
                          l3892 5348                            l3884 533E                            l3876 5308  
                          l3964 6932                            l3956 690A                            l3948 68CA  
                          l3980 633A                            l3972 62C8                            l3798 59E8  
                          l3894 534A                            l3886 5342                            l3878 5316  
                          l3966 6938                            l3958 6918                            l4790 63F6  
                          l3990 63C2                            l3982 634A                            l3974 62D8  
                          l3896 5362                            l3888 5344                            l3968 694A  
                          l4792 5754                            l3984 6376                            l3976 62FE  
                          l3898 5364                            l4794 5D42                            l3994 63E0  
                          l3986 6386                            l3978 630E                            l4786 74EA  
                          l4796 5FB6                            l3988 63B2                            l3996 640C  
                          l4788 5E5C                            l4798 6198                            l3998 6428  
                          STR_1 7E5D                            STR_2 7E4C                            STR_3 7E5D  
                          STR_4 7E3B                            STR_5 7FD3                            STR_6 7F7E  
                          STR_7 7C43                            STR_8 7FC2                            STR_9 7FE4  
                          u2200 6458                            u3000 5500                            u2201 6454  
                          u3001 54FC                            u2210 648A                            u3010 53B0  
                          u2211 6486                            u3011 53AC                            u2300 608A  
                          u2140 55EA                            u3100 59BC                            u3020 53CA  
                          u2221 64B4                            u2301 6086                            u2141 55E6  
                          u3101 59B8                            u3021 53C6                            u2230 64D8  
                          u2310 60B8                            u2150 55FC                            u3110 59E4  
                          u3030 53E4                            u2231 64D4                            u2311 60B4  
                          u2151 55F8                            u3111 59E0                            u3031 53E0  
                          u2240 6502                            u2320 6100                            u2160 5624  
                          u2400 757C                            u3120 5A04                            u3200 66A0  
                          u3040 5402                            u4000 5F0A                            u2241 64FE  
                          u2321 60FC                            u2161 5620                            u2401 7578  
                          u3121 5A00                            u3201 669C                            u3041 53FE  
                          u4001 5F06                            u2250 6542                            u2170 565A  
                          u2330 5522                            u2410 75AC                            u3130 5A14  
                          u3210 66EA                            u3050 5418                            u4010 5F18  
                          u2251 653E                            u2171 5656                            u2331 551E  
                          u2411 75A8                            u3131 5A10                            u3211 66E6  
                          u3051 5414                            u4011 5F14                            u4100 584A  
                          u2260 658C                            u2180 4D36                            u2340 5544  
                          u2500 77A2                            u2420 75C8                            u3140 4FAA  
                          u3220 6708                            u3060 543C                            u4020 5F4C  
                          u3300 696E                            u4101 5846                            u2261 6588  
                          u2181 4D32                            u2341 5540                            u2501 779E  
                          u2421 75C4                            u3141 4FA6                            u3221 6704  
                          u3061 5438                            u4021 5F48                            u3301 696A  
                          u2270 5FF0                            u2190 4C70                            u2350 559A  
                          u2510 77B2                            u2430 75F6                            u3070 5946  
                          u3150 4FC8                            u3230 6718                            u4030 5F5A  
                          u3310 62FE                            u4110 72FA                            u2271 5FEC  
                          u2191 4C6C                            u2351 5596                            u2511 77AE  
                          u2431 75F2                            u3071 5942                            u3151 4FC4  
                          u3231 6714                            u4031 5F56                            u3311 62FA  
                          u4111 72F6                            u2600 5B74                            u2280 6022  
                          u2360 55AA                            u2520 77CA                            u2440 7604  
                          u3080 597A                            u3160 4FDE                            u3240 6726  
                          u4040 5F8C                            u3400 6444                            u3320 630E  
                          u4200 73F2                            u4120 730E                            u2601 5B70  
                          u2281 601E                            u2361 55A6                            u2521 77C6  
                          u2441 7600                            u3161 4FDA                            u3241 6722  
                          u4041 5F88                            u3401 6440                            u3321 630A  
                          u4201 73EE                            u4121 730A                            u2610 5BAE  
                          u2290 6060                            u2370 4CCE                            u2450 772E  
                          u2530 7038                            u3090 59A8                            u3250 6760  
                          u3170 65E0                            u4050 5F9A                            u3410 52A8  
                          u3330 633A                            u4210 7424                            u4130 7320  
                          u2611 5BAA                            u2291 605C                            u2371 4CCA  
                          u2451 772A                            u2531 7034                            u3091 59A4  
                          u3251 675C                            u3171 65DC                            u4051 5F96  
                          u3411 52A4                            u3331 6336                            u4211 7420  
                          u4131 731C                            u2700 51DC                            u2620 5BD0  
                          u2460 774C                            u2380 7564                            u2540 7110  
                          u3260 676E                            u3180 65EE                            u3500 6F70  
                          u3420 52DC                            u3340 634A                            u4220 7432  
                          u4140 7336                            u2701 51D8                            u4061 5776  
                          u2621 5BCC                            u2461 7748                            u2381 755E  
                          u2541 710C                            u3085 5970                            u3261 676A  
                          u3181 65EA                            u3501 6F6C                            u3421 52D8  
                          u3341 6346                            u4221 742E                            u4141 7332  
                          u2710 51F4                            u4070 5806                            u2630 5BF8  
                          u2470 7766                            u2390 7566                            u2550 7120  
                          u3430 5052                            u3190 664A                            u3510 6F8A  
                          u3350 6376                            u4230 7464                            u4150 7364  
                          u2711 51F0                            u4071 5802                            u2631 5BF4  
                          u2471 7762                            u2551 711C                            u3431 504E  
                          u3191 6646                            u3511 6F86                            u3271 5300  
                          u3351 6372                            u4231 7460                            u4151 7360  
                          u2720 521E                            u4080 581C                            u2640 5C2A  
                          u2480 7780                            u2560 7146                            u3440 5066  
                          u2800 78A6                            u3520 6F98                            u3280 694A  
                          u3360 6386                            u4240 7472                            u4160 7372  
                          u4081 5818                            u2641 5C26                            u3601 5A78  
                          u2481 777C                            u2561 7142                            u3441 5062  
                          u2801 78A2                            u3521 6F94                            u3281 6946  
                          u3361 6382                            u4241 746E                            u4161 736E  
                          u2730 5246                            u4090 5832                            u2650 50EE  
                          u3610 5AD6                            u2490 7790                            u2570 716A  
                          u2810 78B6                            u3530 6FA6                            u3290 6960  
                          u3370 63B2                            u4250 74A4                            u4170 73A4  
                          u4091 582E                            u2651 50EA                            u3611 5AD2  
                          u2491 778C                            u2571 7166                            u2811 78B2  
                          u3531 6FA2                            u3291 695C                            u4307 68E0  
                          u3371 63AE                            u4251 74A0                            u4171 73A0  
                          u2740 5256                            u2660 510C                            u3620 5AE6  
                          u2580 720E                            u2900 7B5A                            u2820 78EC  
                          u3460 6C18                            u3540 6FCE                            u3700 5C98  
                          u3380 63C2                            u4260 74B2                            u4180 73B2  
                          u2741 5252                            u2661 5108                            u3621 5AE2  
                          u2581 720A                            u2901 7B56                            u2821 78E8  
                          u3461 6C14                            u3541 6FCA                            u4317 6900  
                          u3701 5C94                            u3381 63BE                            u4261 74AE  
                          u4181 73AE                            u2590 5B52                            u2670 5128  
                          u3630 5B1E                            u2750 62C0                            u2910 7B74  
                          u2830 78FC                            u3470 6D98                            u3550 6FDC  
                          u3710 5CA6                            u3390 6436                            u4190 73E4  
                          u2727 5214                            u2591 5B4E                            u2671 5124  
                          u3631 5B1A                            u2751 62BC                            u2911 7B70  
                          u2831 78F8                            u3471 6D94                            u3455 6C06  
                          u3551 6FD8                            u4407 6F34                            u4327 6920  
                          u3711 5CA2                            u3391 6432                            u4191 73E0  
                          u3640 5B2C                            u2680 4F8E                            u2920 7BBC  
                          u2840 7A76                            u2760 7832                            u3480 6DA6  
                          u3456 6C08                            u3560 6FEA                            u3720 5CD8  
                          u3800 5E32                            u2737 523C                            u3641 5B28  
                          u2681 4F8A                            u2921 7BB8                            u2761 782E  
                          u3481 6DA2                            u4417 6BF0                            u3561 6FE6  
                          u4337 532E                            u3721 5CD4                            u3801 5E2E  
                          u3650 4D96                            u2690 4B74                            u2930 7BEA  
                          u2850 7AD0                            u2770 7844                            u3490 6DB4  
                          u3570 6FFE                            u3730 5CEA                            u3810 5E40  
                          u4507 4C26                            u3651 4D92                            u2691 4B70  
                          u2931 7BE6                            u2851 7ACC                            u2771 7840  
                          u3491 6DB0                            u4427 6D0A                            u3571 6FFA  
                          u4347 5354                            u3731 5CE6                            u3811 5E3C  
                          u3660 4DA8                            u3900 6AC2                            u3820 69BC  
                          u2940 7C24                            u2860 7AF0                            u2780 7854  
                          u3580 700C                            u3740 5D18                            u4517 4E30  
                          u3661 4DA4                            u3901 6ABE                            u3821 69B8  
                          u2941 7C20                            u2861 7AEC                            u2845 7A6C  
                          u2781 7850                            u4437 6D2A                            u3581 7008  
                          u4357 5390                            u3741 5D14                            u4277 52E6  
                          u3670 4DBA                            u3910 6AD0                            u3830 69CA  
                          u2870 7B02                            u2790 7894                            u2950 5460  
                          u3750 5D26                            u4527 4E44                            u3671 4DB6  
                          u3591 5A66                            u3911 6ACC                            u3831 69C6  
                          u2871 7AFE                            u2791 7890                            u4447 6D4A  
                          u2951 545C                            u4367 6DEC                            u4287 67AA  
                          u3751 5D22                            u3680 4DCE                            u3920 6B04  
                          u3840 69FC                            u2880 7B30                            u2960 547A  
                          u3760 5DAE                            u4537 4E54                            u3681 4DCA  
                          u3921 6B00                            u3841 69F8                            u2881 7B2C  
                          u4457 6D6A                            u2961 5476                            u4377 6ED4  
                          u4297 68C0                            u3761 5DAA                            u3690 4C46  
                          u3930 6B12                            u3850 6A0A                            u2890 7B46  
                          u2970 54A0                            u3770 5DBC                            u4547 4EF2  
                          u3691 4C42                            u4467 4D50                            u3931 6B0E  
                          u3851 6A06                            u2891 7B42                            u2971 549C  
                          u4387 6EF4                            u3771 5DB8                            u3860 6A3E  
                          u2980 54BE                            u3940 56EC                            u3780 5DF0  
                          u4557 4F00                            u4477 4D5A                            u3861 6A3A  
                          u2981 54BA                            u4397 6F14                            u3941 56E8  
                          u3781 5DEC                            u3870 6A4C                            u2990 54DA  
                          u3950 56FA                            u3790 5DFE                            u4567 4F1E  
                          u4487 4D76                            u3871 6A48                            u2991 54D6  
                          u3951 56F6                            u3791 5DFA                            u3880 6A80  
                          u3960 572C                            u4577 4F2C                            u4497 4D80  
                          u3881 6A7C                            u3961 5728                            u3890 6A8E  
                          u3970 573A                            u3891 6A8A                            u3971 5736  
                          u3980 5EC8                            u3981 5EC4                            u3990 5ED6  
                          u3991 5ED2               subMenuBuzzer@vopc 007B                            abs@a 0013  
                          _dbuf 01DA                            _main 728E                            _dtoa 7534  
                          _prec 00E1                            _nout 00DD                            pad@i 0018  
                          pad@p 0015                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001A                            fsr2l 000FD9                Escreve7Seg@PONTO 0002  
                          prodh 000FF4                            prodl 000FF3                            start 0000  
                  ___param_bank 000000            __end_of_aguardaTimer 4B76                           ??_abs 0015  
        testarDisplay1@displays 000C                           ??_pad 0017                  ?_InicializaPIC 0001  
                 ___fltol@sign1 0030                 __end_of___aldiv 5C4C  testarCoolerPotUpDown@vlrUpDown 0081  
               __end_of___aodiv 65CE                           ?_main 0001                           ?_dtoa 001C  
               __end_of___aomod 6142                 __end_of___awdiv 5512                           _ADRES 000FC3  
                         STR_10 7FF1                           STR_11 7FE4                           STR_12 7FF1  
                         STR_20 7C56                           STR_21 7C9E                           STR_13 7E90  
                         STR_14 7F7E                           STR_22 7E7F                           STR_30 7E08  
                         STR_31 7D4D                           STR_23 7F5C                           STR_15 7CC2  
                         STR_32 7D5E                           STR_24 7F6D                           STR_40 7EF6  
                         STR_16 7C8C                           STR_33 7CE7                           STR_41 7F07  
                         STR_25 7D4D                           STR_17 7C9E                           STR_50 7F8F  
                         STR_42 7F18                           STR_34 7E6E                           STR_26 7D5E  
                         STR_18 7CB0                           STR_43 7D4D                           STR_19 7C9E  
                         STR_27 7CE7                           STR_51 7FA0                           STR_35 7DD5  
                         STR_44 7D5E                           STR_52 7FB1                           STR_36 7ED4  
                         STR_28 7DE6                           STR_60 7CD4                 __end_of___awmod 544E  
                         STR_45 7CE7                           STR_37 7EB2                           STR_53 7E2A  
                         STR_29 7DF7                           STR_61 7C7A                           STR_62 7F4B  
                         STR_46 7F29                           STR_38 7EC3                           STR_54 7E19  
                         STR_70 7DC4                           STR_55 7D4D                           STR_47 7D4D  
                         STR_39 7EE5                           STR_71 7D1A                           STR_63 7CF8  
                         STR_48 7D5E                           STR_72 7D2B                           STR_64 7D09  
                         STR_56 7C68                           STR_49 7CE7                           STR_73 7F3A  
                         STR_65 7D91                           STR_57 7CE6                           STR_58 7EA1  
                         STR_66 7DA2                           STR_67 7D6F                           STR_59 7D3C  
                         STR_68 7D80                           STR_69 7DB3                 __end_of___flmul 7C42  
               __end_of___fltol 5A36                           _T0CON 000FD5                 ___awdiv@divisor 0003  
                         _T2CON 000FCA                 __end_of___lwdiv 5148                 __end_of___lwmod 4FFC  
        __size_of_inicializaPWM 0016                 ___awdiv@counter 0005                    vfpfcnvrt@fmt 0042  
                         _TMR0H 000FD7                           _TMR0L 000FD6                           _PORTA 000F80  
                         _PORTB 000F81                           _PORTC 000F82                           _PORTD 000F83  
                         _PORTE 000F84                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
             subMenuRelays@vopc 008D          __end_of_InicializaLCD4 4E80               ?_EscreveLinhaLCD4 0007  
                         _flags 00E3                           _fputc 55D8                           _fputs 4CF4  
                         pad@fp 0011                           _width 00DF                           _putch 4B56  
                         dtoa@d 001E                           dtoa@i 003E                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
            ??_EscreveLinhaLCD4 0009             testarDisplay1@F3511 00E5                           tablat 000FF5  
           __end_of_EscreveLCD4 4D88             __end_of_Escreve7Seg 62C4                           plusw1 000FE3  
                         plusw2 000FDB                           status 000FD8                 __end_of_sprintf 4E2A  
              __end_of_Delay_ms 4C48                 __initialization 5148             testarDisplay2@conta 0082  
                  __end_of_main 7534                    __end_of_dtoa 7818               ConfiguraLCD4@INST 0002  
                        ??_main 00D9                          ??_dtoa 0026                   __activetblptr 000002  
                  ?_setaFreqPWM 000F                 ?_InicializaLCD4 0001                          _ADCON0 000FC2  
                        _ADCON1 000FC1                          _ADCON2 000FC0                          ?_fputc 0001  
                        ?_fputs 000A                          _CCPR1L 000FBE                          _CCPR2L 000FBB  
              ___awdiv@dividend 0001                          ?_putch 0001                          _INTCON 000FF2  
                 vfpfcnvrt@done 0050                ??_testarDisplay1 000A                ??_testarDisplay2 0068  
              __end_of___xxtofl 6782                   _inicializaPWM 4B76                    ?_resetaTimer 0001  
         __end_of_capturaUpDown 4DD8                    vfprintf@cfmt 0058                       ??___aldiv 0009  
                     ??___aodiv 0011                       ??___aomod 0011                          ___wmul 4BD0  
                     ??___awdiv 0005                       ??___awmod 0005                       ??___flmul 0017  
            Escreve7Seg@DISPLAY 0005                       ??___fltol 002C                       ??___lwdiv 0005  
                     ??___lwmod 0005                 ??_InicializaPIC 0004             testarCoolerPot@vaux 007B  
              __end_of_miniMidi 5B40                          clear_0 51AE                          clear_1 51BA  
              ___awdiv@quotient 0007                 ___awmod@divisor 0003                          isa$std 000001  
               ___awmod@counter 0005                          pad@buf 0013                          dtoa@fp 001C  
                   miniMidi@pos 01A3                __end_of_setaPWM1 50D4                __end_of_setaPWM2 4EDA  
                        _strlen 4C48                          fputc@c 0001                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A        __size_of_testarCoolerPot 0250  
                  __mediumconst 7C42                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                     _EscreveLCD4 4D38                     _Escreve7Seg 6142  
                        putch@c 0001                __end_of_vfprintf 4F98                       ??_sprintf 0060  
       ??_testarCoolerPotUpDown 0068                    ___xxtofl@arg 000B                    ___xxtofl@exp 000A  
                  ___xxtofl@val 0001                      __accesstop 0060         __end_of__initialization 51C0  
                ?_inicializaPWM 0001        __size_of_testarBuzzerPWM 006C                   ___rparam_used 000001  
                    ___fltol@f1 0028           __size_of_aguardaTimer 0010                  __pcstackCOMRAM 0001  
          testarDisplay2@dezena 007D                    __pidataBANK0 4B59                    __pidataBANK1 4C7E  
                  __pidataBANK2 584D            testarDisplay2@milhar 007F            testarDisplay2@sconta 006A  
                 __end_of_fputc 56A2                   __end_of_fputs 4D38                   __end_of_putch 4B58  
             testarDisplay2@aux 0080                       ?_Delay_ms 0001           __end_of_ConfiguraLCD4 4F36  
                       ??_fputc 0005                         ??_fputs 000E                    _aguardaTimer 4B66  
                       ??_putch 0001                      __pbssBANK0 00DD                      __pbssBANK1 01DA  
    __end_of_subMenuDisplay7Seg 5D62           __end_of_subMenuCooler 5FDE                     setaPWM1@val 000B  
         __end_of_subMenuBuzzer 6B66                     setaPWM2@val 000B           __end_of_subMenuRelays 5E7C  
                       ?___wmul 0001                         _CCP1CON 000FBD                         _CCP2CON 000FBA  
                       ?_strlen 0001       testarCoolerPotUpDown@vaux 0079              __size_of_showSobre 00E0  
            __size_of_testarLCD 009E                       ?___xxtofl 0001                      ??_Delay_ms 0003  
            __size_of_vfpfcnvrt 027A        __size_of_inicializaTimer 0008                resetaTimer@tempo 0001  
          __size_of_setaFreqPWM 0026                 ??_inicializaPWM 0001               ??_testarCoolerPot 0068  
                     ?_miniMidi 0001                       ?_setaPWM1 0001                       ?_setaPWM2 0001  
                       __Hparam 0000                         __Lparam 0000       __size_of_EscreveLinhaLCD4 008E  
          __size_of_resetaTimer 0022               ??_testarBuzzerPWM 0060                         ___aldiv 5B40  
                       ___aodiv 6446                         ___aomod 5FDE                         ___awdiv 544E  
                       ___awmod 539E                         ___flmul 7818                         ___fltol 5930  
               __size_of___wmul 0026                         ___lwdiv 50D4                         ___lwmod 4F98  
                     ?_vfprintf 0052                         __pcinit 5148                         __ramtop 0800  
                       __ptext0 728E                         __ptext1 5D62                         __ptext2 62C4  
                       __ptext3 56A2                         __ptext4 5258                         __ptext5 5C4C  
                       __ptext6 6782                         __ptext7 52F6                         __ptext8 5E7C  
                       __ptext9 6DB6                ??_InicializaLCD4 0003            testarCoolerPot@vTemp 0084  
               __size_of_strlen 0036            testarCoolerPot@opcao 0079                    __size_of_abs 0040  
                  __size_of_pad 00C6                      ??___xxtofl 0005                ___awmod@dividend 0001  
              ___aldiv@dividend 0001                    miniMidi@cont 01A2                         _sprintf 4DD8  
          end_of_initialization 51C0                         fputc@fp 0003                   __Lmediumconst 7C42  
                    ??_miniMidi 0011                         fputs@fp 000C                      ??_setaPWM1 0008  
                    ??_setaPWM2 0008               __end_of_showSobre 584C               __end_of_testarLCD 52F6  
             __end_of_vfpfcnvrt 728E                ___aldiv@quotient 000B                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                      _subMenuLCD 56A2                      ??_vfprintf 0058  
                       strlen@a 0003                         strlen@s 0001                       _PORTAbits 000F80  
                     _PORTBbits 000F81                       _PORTCbits 000F82                       _PORTDbits 000F83  
                     _PORTEbits 000F84                   ?_testarRelays 0001                   ___xxtofl@sign 0009  
                  ?_EscreveLCD4 0001                    ?_Escreve7Seg 0001                       _TRISCbits 000F94  
         EscreveLinhaLCD4@FRASE 0007           EscreveLinhaLCD4@LINHA 0009            Delay_ms@milisegundos 0001  
__size_of_testarCoolerPotUpDown 025E                     ___flmul@grs 001C   __end_of_testarCoolerPotUpDown 7014  
               EscreveLCD4@DADO 0002               ??_inicializaTimer 0001                 Escreve7Seg@DADO 0001  
         testarDisplay2@centena 007E                     vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040  
                   vfpfcnvrt@ll 0048                  __end_of___wmul 4BF6           __end_of_InicializaPIC 4BAE  
                ??_testarRelays 0068           testarDisplay2@unidade 007C                  __end_of_strlen 4C7E  
           start_initialization 5148                     __end_of_abs 4CF4          __size_of_capturaUpDown 0050  
                   __end_of_pad 55D8               __size_of_Delay_ms 002C                _EscreveLinhaLCD4 51CA  
            testarCoolerPot@DD1 007D              testarCoolerPot@DD2 007E              testarCoolerPot@DD3 007F  
            testarCoolerPot@DD4 0080                     vfprintf@fmt 0054               testarRelays@relay 008A  
            testarCoolerPot@msg 0069                        ??___wmul 0005              testarCoolerPot@pot 0081  
                   ?_subMenuLCD 0001                     __pdataBANK0 00E5                     __pdataBANK1 01A4  
                   __pdataBANK2 0200         __size_of_testarDisplay1 00A8         __size_of_testarDisplay2 01EE  
            _subMenuDisplay7Seg 5C4C                        ??_strlen 0003                 _testarCoolerPot 6B66  
                     ___flmul@a 0013                       ___flmul@b 000F             ?_subMenuDisplay7Seg 0001  
                 __pcstackBANK0 0060                   __pcstackBANK1 0100                ___aodiv@dividend 0001  
             __size_of___xxtofl 01B4                testarDisplay2@ct 007A                 _testarBuzzerPWM 4FFC  
              testarCoolerPot@t 0082            ??_subMenuDisplay7Seg 0084               __size_of_miniMidi 010A  
              ___lwdiv@dividend 0001                       _dtoa$1242 002E                   _capturaUpDown 4D88  
             __size_of_setaPWM1 006C               __size_of_setaPWM2 005A                setaPWM1@porcento 000A  
                 __pmediumconst 7C42                        ?___aldiv 0001                        ?___aodiv 0001  
                      ?___aomod 0001                        ?___awdiv 0001                ___aodiv@quotient 0013  
                      ?___awmod 0001                        ?___flmul 000F                        ?___fltol 0028  
                      ?___lwdiv 0001                        ?___lwmod 0001          __size_of_ConfiguraLCD4 005C  
              setaPWM2@porcento 000A                  subMenuLCD@vopc 0012               __size_of_vfprintf 0062  
                 ??_setaFreqPWM 0011          __size_of_subMenuCooler 0162                ___lwdiv@quotient 0005  
        __size_of_subMenuBuzzer 01F6          __size_of_subMenuRelays 011A                        ?_sprintf 005A  
                __size_of_fputc 00CA            __size_of_EscreveLCD4 0050                  __size_of_fputs 0044  
          __size_of_Escreve7Seg 0182                  __size_of_putch 0002             __size_of_subMenuLCD 00CA  
               ___aldiv@divisor 0005                 ___aldiv@counter 0009           __end_of_inicializaPWM 4B8C  
                ___wmul@product 0005          testarCoolerPotUpDown@t 007F            __end_of_testarRelays 6446  
                 ??_resetaTimer 0003                  ?_capturaUpDown 0001               resetaTimer@ciclos 0003  
       __end_of_testarCoolerPot 6DB6                       _showSobre 576C                       _testarLCD 5258  
                     _vfpfcnvrt 7014                      testarLCD@l 000C                      _ADCON0bits 000FC2  
             ___wmul@multiplier 0001                       main@opcao 00DB                 _inicializaTimer 4B5E  
                      _Delay_ms 4C1C         __end_of_testarBuzzerPWM 5068                       copy_data0 515C  
                     copy_data1 517C                       copy_data2 519C                   _ConfiguraLCD4 4EDA  
           __end_of_setaFreqPWM 4C1C                        __Hrparam 0000                      vfprintf@ap 0056  
                      __Lrparam 0000                      vfprintf@fp 0052                   _subMenuCooler 5E7C  
              testarRelays@msg1 007A                testarRelays@msg2 006A                   _subMenuBuzzer 6970  
                 _subMenuRelays 5D62             __end_of_resetaTimer 4BD0                      ?_showSobre 0001  
                    ?_testarLCD 0001                __size_of___aldiv 010C                  _testarDisplay1 52F6  
                _testarDisplay2 6782                __size_of___aodiv 0188                __size_of___aomod 0164  
              __size_of___awdiv 00C4                __size_of___awmod 00B0                __size_of___flmul 042A  
              __size_of___fltol 0106                      ?_vfpfcnvrt 0040                __size_of___lwdiv 0074  
              __size_of___lwmod 0064                 ___aodiv@divisor 0009                 ___aodiv@counter 0011  
                    sprintf@fmt 005C                        ___xxtofl 65CE                capturaUpDown@opt 0001  
               ___lwdiv@divisor 0003        __end_of_EscreveLinhaLCD4 5258                 ___lwdiv@counter 0007  
                      __ptext10 539E                        __ptext11 544E                        __ptext20 4FFC  
                      __ptext12 6B66                        __ptext21 4DD8                        __ptext13 5068  
                      __ptext30 4CB4                        __ptext22 4F36                        __ptext14 65CE  
                      __ptext31 5FDE                        __ptext23 7014                        __ptext15 4F98  
                      __ptext40 4B76                        __ptext32 6446                        __ptext24 7534  
                      __ptext16 5930                        __ptext41 4B66                        __ptext33 5A36  
                      __ptext25 5512                        __ptext17 7818                        __ptext50 4EDA  
                      __ptext42 4D88                        __ptext34 4E80                        __ptext26 4C48  
                      __ptext18 6142                        __ptext43 576C                        __ptext35 50D4  
                      __ptext27 4CF4                        __ptext19 6970                        __ptext44 4BD0  
                      __ptext36 4BF6                        __ptext28 55D8                        __ptext45 51CA  
                      __ptext37 5B40                        __ptext29 4B56                        __ptext46 4D38  
                      __ptext38 4BAE                        __ptext47 4C1C                        __ptext39 4B5E  
                      __ptext48 4B8C                        __ptext49 4E2A                  ?_ConfiguraLCD4 0001  
                 ?_aguardaTimer 0001                __size_of_sprintf 0052         __size_of_InicializaLCD4 0056  
                 __size_of_main 02A6                   __size_of_dtoa 02E4                        _miniMidi 5A36  
               ??_capturaUpDown 0003                   miniMidi@F3561 0277                   miniMidi@F3559 01A4  
         _testarCoolerPotUpDown 6DB6                        _setaPWM1 5068                        _setaPWM2 4E80  
                ?_subMenuCooler 0001                  ?_subMenuBuzzer 0001                  ?_subMenuRelays 0001  
        __end_of_testarDisplay1 539E          __end_of_testarDisplay2 6970                        isa$xinst 000000  
                  ??_subMenuLCD 0010                ?_testarCoolerPot 0001                        _vfprintf 4F36  
      testarCoolerPotUpDown@DD1 007B        testarCoolerPotUpDown@DD2 007C        testarCoolerPotUpDown@DD3 007D  
      testarCoolerPotUpDown@DD4 007E         __end_of_inicializaTimer 4B66                   miniMidi@notas 0136  
                 miniMidi@tempo 0100        testarCoolerPotUpDown@msg 0069                ___aomod@dividend 0001  
        subMenuDisplay7Seg@vopc 0086                ?_testarBuzzerPWM 0001                     _setaFreqPWM 4BF6  
                ??_aguardaTimer 0001                 setaFreqPWM@freq 000F           __size_of_testarRelays 0182  
                     sprintf@ap 0060              __end_of_subMenuLCD 576C                ___lwmod@dividend 0001  
        __size_of_InicializaPIC 0022                     _resetaTimer 4BAE                 ?_testarDisplay1 0001  
               ?_testarDisplay2 0001               subMenuCooler@vopc 0088                     ??_showSobre 000A  
                   ??_testarLCD 000A                 ___aomod@divisor 0009                     ??_vfpfcnvrt 0046  
               ___aomod@counter 0011                  showSobre@F3576 0200                        sprintf@f 0062  
                      sprintf@s 005A                    _testarRelays 62C4                 ___lwmod@divisor 0003  
               ___lwmod@counter 0005                 ??_ConfiguraLCD4 0001                    ___aldiv@sign 000A  
                showSobre@sobre 0060                    ___aodiv@sign 0012          ?_testarCoolerPotUpDown 0001  
               ??_subMenuCooler 0086                    showSobre@idx 00D7                 ??_subMenuBuzzer 0079  
                  ___aomod@sign 0012                 ??_subMenuRelays 008B     __size_of_subMenuDisplay7Seg 0116  
